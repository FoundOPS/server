<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FoundOps.SLClient.Data</name>
    </assembly>
    <members>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry">
            <summary>
            The 'VehicleMaintenanceLogEntry' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Comments">
            <summary>
            Gets or sets the 'Comments' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.LineItems">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Mileage">
            <summary>
            Gets or sets the 'Mileage' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.ServicedBy">
            <summary>
            Gets or sets the 'ServicedBy' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Vehicle">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.Vehicle"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Region">
            <summary>
            The 'Region' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Region.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Region.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.BusinessAccount">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Region.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.BusinessAccountId">
            <summary>
            Gets or sets the 'BusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.Color">
            <summary>
            Gets or sets the 'Color' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.Locations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Region.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation">
            <summary>
            The 'SubLocation' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.SubLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.SubLocation.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.SubLocation.Number">
            <summary>
            Gets or sets the 'Number' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService">
            <summary>
            The 'RecurringService' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RecurringService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RecurringService.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.ExcludedDatesString">
            <summary>
            Gets or sets the 'ExcludedDatesString' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.GeneratedServices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.Repeat">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.Repeat"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.ServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RecurringService.ExcludedDates">
            <summary>
            Gets or sets the excluded dates.
            </summary>
            <value>
            The excluded dates.
            </value>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.DesignData.BusinessAccountsDesignData">
            <summary>
            Setup Business Accounts (and ServiceTemplates)
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Party">
            <summary>
            The 'Party' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Party.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Party.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.RoleMembership">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.ClientOwner">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.ContactInfoSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.Contacts">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.Locations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.OfClients">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.OwnedLocations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.OwnedRoles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.PartyRoleToRoleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.PartyRole"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Party.Vehicles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Route">
            <summary>
            The 'Route' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Route.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Route.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Vehicles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Technicians">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Color">
            <summary>
            Gets or sets the 'Color' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.EndTime">
            <summary>
            Gets or sets the 'EndTime' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.OwnerBusinessAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.OwnerBusinessAccountId">
            <summary>
            Gets or sets the 'OwnerBusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.RouteEmployeeToEmployeeSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.RouteType">
            <summary>
            Gets or sets the 'RouteType' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.RouteVehicleToVehicleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Route.StartTime">
            <summary>
            Gets or sets the 'StartTime' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Client">
            <summary>
            The 'Client' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Client.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.ClientTitles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.DateAdded">
            <summary>
            Gets or sets the 'DateAdded' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.LinkedParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.LinkedPartyId">
            <summary>
            Gets or sets the 'LinkedPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.OwnedParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.RecurringServices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.Salesperson">
            <summary>
            Gets or sets the 'Salesperson' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.ServicesToRecieve">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.ServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.Vendor">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Client.VendorId">
            <summary>
            Gets or sets the 'VendorId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.LocationField">
            <summary>
            The 'LocationField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Field">
            <summary>
            The 'Field' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            A generic Field to be extended. Not intended to be created.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Field.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Field.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.ThisField">
            <summary>
            Gets the this field. For bindings that require arbitrary NotifyPropertyChanged("ThisField") 
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.ChildrenFields">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.Group">
            <summary>
            Gets or sets the 'Group' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.OwnerServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.ParentField">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.ParentFieldId">
            <summary>
            Gets or sets the 'ParentFieldId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.Required">
            <summary>
            Gets or sets the 'Required' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.ServiceTemplateId">
            <summary>
            Gets or sets the 'ServiceTemplateId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Field.Tooltip">
            <summary>
            Gets or sets the 'Tooltip' value.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.LocationField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.LocationField.LocationFieldTypeInt">
            <summary>
            Gets or sets the 'LocationFieldTypeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.LocationField.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.LocationField.Value">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Common.Composite.Tools.Address">
            <summary>
            The 'Address' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.Composite.Tools.Address.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Common.Composite.Tools.Address"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.Composite.Tools.Address.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.Key">
            <summary>
            Gets or sets the 'Key' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.Address.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Location">
            <summary>
            The 'Location' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Location.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Location.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.ContactInfoSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.LocationFieldsWhereValue">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationField"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Location.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Location.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.Region">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Location.Region"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.RegionId">
            <summary>
            Gets or sets the 'RegionId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.SubLocations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Location.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle">
            <summary>
            The 'Vehicle' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Vehicle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Vehicle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.LicensePlate">
            <summary>
            Gets or sets the 'LicensePlate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Make">
            <summary>
            Gets or sets the 'Make' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Mileage">
            <summary>
            Gets or sets the 'Mileage' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Model">
            <summary>
            Gets or sets the 'Model' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.RouteVehicleToRouteSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.VehicleMaintenanceLog">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.VIN">
            <summary>
            Gets or sets the 'VIN' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Vehicle.Year">
            <summary>
            Gets or sets the 'Year' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate">
            <summary>
            The 'ServiceTemplate' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.ChildrenServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.Fields">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.LevelInt">
            <summary>
            Gets or sets the 'LevelInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerClient">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerClientId">
            <summary>
            Gets or sets the 'OwnerClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerRecurringService">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerService">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerServiceProvider">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerServiceProviderId">
            <summary>
            Gets or sets the 'OwnerServiceProviderId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.OwnerServiceTemplateId">
            <summary>
            Gets or sets the 'OwnerServiceTemplateId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate.ParentServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField">
            <summary>
            The 'OptionsField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.OptionsField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.OptionsField.AllowMultipleSelection">
            <summary>
            Gets or sets the 'AllowMultipleSelection' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.OptionsField.Options">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Option"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.OptionsField.TypeInt">
            <summary>
            Gets or sets the 'TypeInt' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination">
            <summary>
            The 'RouteDestination' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.OrderInRoute">
            <summary>
            Gets or sets the 'OrderInRoute' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteDestination.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Service">
            <summary>
            The 'Service' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Service.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Service.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Service.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.Generated">
            <summary>
            Gets or sets the 'Generated' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.RecurringServiceId">
            <summary>
            Gets or sets the 'RecurringServiceId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.RecurringServiceParent">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.ServiceDate">
            <summary>
            Gets or sets the 'ServiceDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.ServiceProvider">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.ServiceProviderId">
            <summary>
            Gets or sets the 'ServiceProviderId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Service.ServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Service.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem">
            <summary>
            The 'VehicleMaintenanceLineItem' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.Cost">
            <summary>
            Gets or sets the 'Cost' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.Details">
            <summary>
            Gets or sets the 'Details' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntry">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntry"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntryId">
            <summary>
            Gets or sets the 'VehicleMaintenanceLogEntryId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Repeat">
            <summary>
            The 'Repeat' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Repeat.NextRepeatDateOnOrAfterDate(System.DateTime)">
            <summary>
            Returns the next scheduled date.
            </summary>
            <param name="onOrAfterDate">The on or after date.</param>
            <returns>The next repeat date on or after the <param name="onOrAfterDate"/> </returns>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Repeat.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Gets the occurrences.
            </summary>
            <param name="startRangeInclusive">The start range to iterate from (inclusive).</param>
            <param name="endRangeInclusive">The end range to iterate to (inclusive).</param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Repeat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Repeat"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Repeat.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.NextRepeatDate">
            <summary>
            Gets the next repeat date.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.EndAfterTimes">
            <summary>
            Gets or sets the 'EndAfterTimes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.EndDate">
            <summary>
            Gets or sets the 'EndDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.FrequencyDetailInt">
            <summary>
            Gets or sets the 'FrequencyDetailInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.FrequencyInt">
            <summary>
            Gets or sets the 'FrequencyInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.RecurringService">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.RepeatEveryTimes">
            <summary>
            Gets or sets the 'RepeatEveryTimes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Repeat.StartDate">
            <summary>
            Gets or sets the 'StartDate' value.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.LocationsDesignData.#ctor(FoundOps.Core.Server.Models.CoreEntities.Party,FoundOps.Core.Server.Models.CoreEntities.Client,System.Collections.Generic.IEnumerable{FoundOps.Core.Server.Models.CoreEntities.Region},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationsDesignData"/> class.
            </summary>
            <param name="ownerParty">The party that created the locations.</param>
            <param name="client">The client that resides at the locations.</param>
            <param name="regions">The regions for the locations.</param>
            <param name="startIndex">The first location to add</param>
            <param name="numberItems">The number of locations to add</param>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle">
            <summary>
            The 'ClientTitle' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Contact">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Contact"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.ContactId">
            <summary>
            Gets or sets the 'ContactId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ClientTitle.Title">
            <summary>
            Gets or sets the 'Title' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Option">
            <summary>
            The 'Option' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Option.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Option"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Option.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.Index">
            <summary>
            Gets or sets the 'Index' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.IsChecked">
            <summary>
            Gets or sets the 'IsChecked' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.OptionsField">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.Option.OptionsField"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.OptionsFieldId">
            <summary>
            Gets or sets the 'OptionsFieldId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Option.Tooltip">
            <summary>
            Gets or sets the 'Tooltip' value.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.DesignData.RecurringServicesDesignData.#ctor(FoundOps.Core.Server.Models.CoreEntities.Client)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.DesignData.RecurringServicesDesignData"/> class.
            </summary>
            <param name="client">The client. The client must have locations.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Extensions.Services.ServiceTemplateExtensionMethods.GetDestination(FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate)">
            <summary>
            Gets the destination from the DestinationField
            </summary>
            <param name="serviceTemplate">The service template.</param>
            <returns>
            The destination location, or null if there is not one
            </returns>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Extensions.Services.ServiceTemplateExtensionMethods.SetDestination(FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate,FoundOps.Core.Server.Models.CoreEntities.Location)">
            <summary>
            Sets the destination field.
            </summary>
            <param name="serviceTemplate">The service template.</param>
            <param name="location">The location.</param>
            <returns>
            True if there is a destination field. False if there is not a destination field
            </returns>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry">
            <summary>
            The 'EmployeeHistoryEntry' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Employee">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Employee"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.EmployeeId">
            <summary>
            Gets or sets the 'EmployeeId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Summary">
            <summary>
            Gets or sets the 'Summary' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Context.Tools.SimpleRouteCalculator.PopulateRoutes(System.Collections.Generic.IEnumerable{FoundOps.Core.Server.Models.CoreEntities.RouteTask},System.Collections.Generic.IEnumerable{FoundOps.Core.Server.Models.CoreEntities.Route})">
            <summary>
            Populates the routes.
            </summary>
            <param name="unroutedRouteTasks">The unrouted route tasks.</param>
            <param name="routesToPopulate">The routes to populate.</param>
            <returns>
            The tasks that were not routed.
            </returns>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Person">
            <summary>
            The 'Person' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Person.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Person"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.DateOfBirth">
            <summary>
            Gets or sets the 'DateOfBirth' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.FirstName">
            <summary>
            Gets or sets the 'FirstName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.GenderInt">
            <summary>
            Gets or sets the 'GenderInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.LastName">
            <summary>
            Gets or sets the 'LastName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.MiddleInitial">
            <summary>
            Gets or sets the 'MiddleInitial' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.OwnerContact">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Person.OwnerEmployee">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RoleBlock">
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
            <summary>
            The 'RoleBlock' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.AttachBlockToRole(FoundOps.Core.Server.Models.CoreEntities.RoleBlock,FoundOps.Core.Server.Models.CoreEntities.Role,FoundOps.Core.Server.Models.CoreEntities.Block)">
            <summary>
            This method attaches Role and Block to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="role"></param>
            <param name="block"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.AttachRoleToBlock(FoundOps.Core.Server.Models.CoreEntities.RoleBlock,FoundOps.Core.Server.Models.CoreEntities.Block,FoundOps.Core.Server.Models.CoreEntities.Role)">
            <summary>
            This method attaches Block and Role to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="block"></param>
            <param name="role"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RoleBlock"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.Block">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.Block"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.BlockId">
            <summary>
            Gets or sets the 'BlockId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.Role">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.Role"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RoleBlock.RoleId">
            <summary>
            Gets or sets the 'RoleId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle">
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
            <summary>
            The 'RouteVehicle' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.AttachVehicleToRoute(FoundOps.Core.Server.Models.CoreEntities.RouteVehicle,FoundOps.Core.Server.Models.CoreEntities.Route,FoundOps.Core.Server.Models.CoreEntities.Vehicle)">
            <summary>
            This method attaches Route and Vehicle to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="route"></param>
            <param name="vehicle"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.AttachRouteToVehicle(FoundOps.Core.Server.Models.CoreEntities.RouteVehicle,FoundOps.Core.Server.Models.CoreEntities.Vehicle,FoundOps.Core.Server.Models.CoreEntities.Route)">
            <summary>
            This method attaches Vehicle and Route to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="vehicle"></param>
            <param name="route"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.Vehicle">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.Vehicle"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteVehicle.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.PartyRole">
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
            <summary>
            The 'PartyRole' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.PartyRole.AttachRoleToParty(FoundOps.Core.Server.Models.CoreEntities.PartyRole,FoundOps.Core.Server.Models.CoreEntities.Party,FoundOps.Core.Server.Models.CoreEntities.Role)">
            <summary>
            This method attaches Party and Role to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="party"></param>
            <param name="role"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.PartyRole.AttachPartyToRole(FoundOps.Core.Server.Models.CoreEntities.PartyRole,FoundOps.Core.Server.Models.CoreEntities.Role,FoundOps.Core.Server.Models.CoreEntities.Party)">
            <summary>
            This method attaches Role and Party to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="role"></param>
            <param name="party"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.PartyRole.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.PartyRole"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.PartyRole.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.Role">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.Role"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.PartyRole.RoleId">
            <summary>
            Gets or sets the 'RoleId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee">
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
            <summary>
            The 'RouteEmployee' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.AttachEmployeeToRoute(FoundOps.Core.Server.Models.CoreEntities.RouteEmployee,FoundOps.Core.Server.Models.CoreEntities.Route,FoundOps.Core.Server.Models.CoreEntities.Employee)">
            <summary>
            This method attaches Route and Employee to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="route"></param>
            <param name="employee"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.AttachRouteToEmployee(FoundOps.Core.Server.Models.CoreEntities.RouteEmployee,FoundOps.Core.Server.Models.CoreEntities.Employee,FoundOps.Core.Server.Models.CoreEntities.Route)">
            <summary>
            This method attaches Employee and Route to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="employee"></param>
            <param name="route"></param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.Employee">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.Employee"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.EmployeeId">
            <summary>
            Gets or sets the 'EmployeeId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Block">
            <summary>
            The 'Block' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Block.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Block"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Block.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.Roles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.FileName">
            <summary>
            Gets or sets the 'FileName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.HideFromNavigation">
            <summary>
            Gets or sets the 'HideFromNavigation' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.Link">
            <summary>
            Gets or sets the 'Link' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.LoginNotRequired">
            <summary>
            Gets or sets the 'LoginNotRequired' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.NavigateUri">
            <summary>
            Gets or sets the 'NavigateUri' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Block.RoleBlockToRoleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RoleBlock"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Role">
            <summary>
            The 'Role' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Role.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Role.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.Blocks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Block"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.MemberParties">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.Description">
            <summary>
            Gets or sets the 'Description' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.PartyRoleToPartySet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.PartyRole"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Role.RoleBlockToBlockSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RoleBlock"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Employee">
            <summary>
            The 'Employee' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Employee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Employee.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.Comments">
            <summary>
            Gets or sets the 'Comments' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.EmployeeHistoryEntries">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.Employer">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.EmployerId">
            <summary>
            Gets or sets the 'EmployerId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.HireDate">
            <summary>
            Gets or sets the 'HireDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.LinkedUserAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.UserAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.LinkedUserAccountId">
            <summary>
            Gets or sets the 'LinkedUserAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.OwnedPerson">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Person"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.Permissions">
            <summary>
            Gets or sets the 'Permissions' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.RouteEmployeeToRouteSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteEmployee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.SSN">
            <summary>
            Gets or sets the 'SSN' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Employee.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1">
            <summary>
            Defines methods for manipulation a generic EntityCollection
            </summary>
            <typeparam name="TEntity">The type of the elements in the collection</typeparam>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Add(`0)">
            <summary>
            Add the specified entity to this collection. If the entity is unattached,
            it will be added to its System.ServiceModel.DomainServices.Client.EntitySet
            automatically.
            </summary>
            <param name="entity"> The entity to add</param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Remove(`0)">
            <summary>
            Remove the specified entity from this collection.
            </summary>
            <param name="entity">The entity to remove</param>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Count">
            <summary>
            Gets the current count of entities in this collection
            </summary>
        </member>
        <member name="E:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1.EntityAdded">
            <summary>
            Event raised whenever an System.ServiceModel.DomainServices.Client.Entity
            is added to this collection
            </summary>
        </member>
        <member name="E:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.IEntityCollection`1.EntityRemoved">
            <summary>
            Event raised whenever an System.ServiceModel.DomainServices.Client.Entity
            is removed from this collection
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.EntityCollection`2">
            <summary>
            M2M-specific entity collection class. It vorms a view on the underlying jointable collection.
            </summary>
            <typeparam name="JoinType"></typeparam>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.EntityCollection`2.#ctor(System.ServiceModel.DomainServices.Client.EntityCollection{`0},System.Func{`0,`1},System.Action{`0},System.Action{`1})">
             <summary>
            
             </summary>
             <param name="collection">The collection of associations to which this collection is connected</param>
             <param name="getEntity">The function used to get the entity object out of a join type entity</param>
             <param name="setEntity">The function used to set the entity object in a join type entity</param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.EntityCollection`2.MakeNotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Replaces JoinType elements in NotifyCollectionChangedEventArgs by elements of type TEntity
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.M2M4Ria.EntityCollection`2.Remove(`1)">
            <summary>
            Removes an m2m relation with the given entity.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="F:FoundOps.Core.Server.Models.CoreEntities.MonthlyFrequencyDetail.OnDayInMonth">
            <summary>
            FrequencyDetail is stored as an int.
            1-7 are reserved for WeeklyFrequencyDetail for the days of the week
            Ex. 1235 means Sunday, Monday, Tuesday, and Thursday
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator">
            <summary>
            Creates an enumerator which steps through each Repeat date until the end of the Repeat,
            until the <see param="endDate"/>, or until the end of time
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Server.Models.CoreEntities.Repeat)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Server.Models.CoreEntities.Repeat,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
            <param name="endDate">The date to stop enumerating on</param>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Server.Models.CoreEntities.Repeat,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
            <param name="endDate">The date to start enumerating on</param>
            <param name="endDate">The date to stop enumerating on</param>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.BusinessAccounts(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Party}})">
            <summary>
            Loads BusinessAccounts for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of BusinessAccounts for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Clients(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Client}})">
            <summary>
            Loads Clients for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Clients for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.ClientTitles(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.ClientTitle}})">
            <summary>
            Loads ClientTitles for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of ClientTitles for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Contacts(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Contact}})">
            <summary>
            Loads Contacts for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Contacts for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Employees(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Employee}})">
            <summary>
            Loads Employees for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Employees for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.EmployeeHistory(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry}})">
            <summary>
            Loads EmployeeHistory for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of EmployeeHistory for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Locations(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Location}})">
            <summary>
            Loads Locations for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Locations for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Regions(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Region}})">
            <summary>
            Loads Regions for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Regions for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.RouteLog(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Route}})">
            <summary>
            Loads all the Routes for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Routes for the current account on the date.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Routes(System.Guid,System.DateTime,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Route}})">
            <summary>
            Loads Routes for the current account and date.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="date">The date of the routes to load.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Routes for the current account on the date.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.ExistingServices(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Service}})">
            <summary>
            Loads the existing Services for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Services for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.Vehicles(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.Vehicle}})">
            <summary>
            Loads Vehicles for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of Vehicles for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.VehicleMaintenance(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry}})">
            <summary>
            Loads VehicleMaintenance for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of VehicleMaintenance for the current account.</returns>
        </member>
        <member name="M:FoundOps.Core.Context.Services.CoreCollectionViewManager.VehicleMaintenanceLineItems(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem}})">
            <summary>
            Loads VehicleMaintenanceLineItems for the current account.
            </summary>
            <param name="roleId">The role id of the current account.</param>
            <param name="loadCompleted">The load completed callback.</param>
            <returns>A DomainCollectionView of VehicleMaintenanceLineItems for the current account.</returns>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask">
            <summary>
            The 'RouteTask' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.RouteTask.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.BusinessAccountId">
            <summary>
            Gets or sets the 'BusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.EstimatedDuration">
            <summary>
            Gets or sets the 'EstimatedDuration' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.GeneratedOnServer">
            <summary>
            Gets or sets the 'GeneratedOnServer' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.OwnerBusinessAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.ReadOnly">
            <summary>
            Gets or sets the 'ReadOnly' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.RouteDestination">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.RouteDestination"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.RouteDestinationId">
            <summary>
            Gets or sets the 'RouteDestinationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Service">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.Service"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.RouteTask.ServiceId">
            <summary>
            Gets or sets the 'ServiceId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.DateTimeField">
            <summary>
            The 'DateTimeField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.DateTimeField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.DateTimeField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.DateTimeField.Earliest">
            <summary>
            Gets or sets the 'Earliest' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.DateTimeField.Latest">
            <summary>
            Gets or sets the 'Latest' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.DateTimeField.TypeInt">
            <summary>
            Gets or sets the 'TypeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.DateTimeField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Common.Composite.Tools.GeocoderResult">
            <summary>
            The 'GeocoderResult' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.Composite.Tools.GeocoderResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Common.Composite.Tools.GeocoderResult"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.GeocoderResult.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.GeocoderResult.Precision">
            <summary>
            Gets or sets the 'Precision' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.Composite.Tools.GeocoderResult.Radius">
            <summary>
            Gets or sets the 'Radius' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Business">
            <summary>
            The 'Business' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Business.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Business"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Business.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount">
            <summary>
            The 'BusinessAccount' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.Clients">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.Employees">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.Regions">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.ServicesToProvide">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount.ServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.Contact">
            <summary>
            The 'Contact' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Contact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.Contact.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.ClientTitles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.OwnedPerson">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Person"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.Contact.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo">
            <summary>
            The 'ContactInfo' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.ContactId">
            <summary>
            Gets or sets the 'ContactId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Data">
            <summary>
            Gets or sets the 'Data' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Label">
            <summary>
            Gets or sets the 'Label' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.ContactInfo.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.LocationOption">
            <summary>
            The 'LocationOption' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.LocationOption.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationOption"/> class.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.NumericField">
            <summary>
            The 'NumericField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.NumericField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.NumericField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.NumericField.DecimalPlaces">
            <summary>
            Gets or sets the 'DecimalPlaces' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.NumericField.Mask">
            <summary>
            Gets or sets the 'Mask' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.NumericField.Maximum">
            <summary>
            Gets or sets the 'Maximum' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.NumericField.Minimum">
            <summary>
            Gets or sets the 'Minimum' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.NumericField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.TextBoxField">
            <summary>
            The 'TextBoxField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.TextBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TextBoxField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TextBoxField.IsMultiline">
            <summary>
            Gets or sets the 'IsMultiline' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TextBoxField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint">
            <summary>
            The 'TrackPoint' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.CompassDirection">
            <summary>
            Gets or sets the 'CompassDirection' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.Timestamp">
            <summary>
            Gets or sets the 'Timestamp' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.UserAccount">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.UserAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.TrackPoint.UserAccountId">
            <summary>
            Gets or sets the 'UserAccountId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.UserAccount">
            <summary>
            The 'UserAccount' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.UserAccount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.UserAccount"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.UserAccount.CreationDate">
            <summary>
            Gets or sets the 'CreationDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.UserAccount.EmailAddress">
            <summary>
            Gets or sets the 'EmailAddress' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.UserAccount.LastActivity">
            <summary>
            Gets or sets the 'LastActivity' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.UserAccount.OfEmployees">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.UserAccount.TrackPoints">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser">
            <summary>
            The 'WebContextUser' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.IsInRole(System.String)">
            <summary>
            Return whether the principal is in the role.
            </summary>
            <remarks>
            Returns whether the specified role is contained in the roles.
            This implementation is case sensitive.
            </remarks>
            <param name="role">The name of the role for which to check membership.</param>
            <returns>Whether the principal is in the role.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.Roles">
            <summary>
            Gets or sets the 'Roles' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.IsAuthenticated">
            <summary>
            Gets a value indicating whether the identity is authenticated.
            </summary>
            <remarks>
            This value is <c>true</c> if <see cref="P:FoundOps.Core.Server.Models.CoreEntities.WebContextUser.Name"/> is not <c>null</c> or empty.
            </remarks>
        </member>
        <member name="T:FoundOps.Core.Server.Services.AuthenticationContext">
            <summary>
            The DomainContext corresponding to the 'AuthenticationService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.AuthenticationContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.AuthenticationContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The AuthenticationService service URI.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.AuthenticationContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.GetUserQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances using the 'GetUser' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.LoginQuery(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances using the 'Login' query.
            </summary>
            <param name="userName">The value for the 'userName' parameter of the query.</param>
            <param name="password">The value for the 'password' parameter of the query.</param>
            <param name="isPersistent">The value for the 'isPersistent' parameter of the query.</param>
            <param name="customData">The value for the 'customData' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.LogoutQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances using the 'Logout' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Services.AuthenticationContext.WebContextUsers">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.WebContextUser"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.AuthenticationContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract">
            <summary>
            Service contract for the 'AuthenticationService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginGetUser(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetUser' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndGetUser(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetUser'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetUser'.</param>
            <returns>The 'QueryResult' returned from the 'GetUser' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginLogin(System.String,System.String,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'Login' operation.
            </summary>
            <param name="userName">The value for the 'userName' parameter of this action.</param>
            <param name="password">The value for the 'password' parameter of this action.</param>
            <param name="isPersistent">The value for the 'isPersistent' parameter of this action.</param>
            <param name="customData">The value for the 'customData' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndLogin(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginLogin'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginLogin'.</param>
            <returns>The 'QueryResult' returned from the 'Login' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginLogout(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'Logout' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndLogout(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginLogout'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginLogout'.</param>
            <returns>The 'QueryResult' returned from the 'Logout' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.Core.Server.Services.CoreDomainContext">
            <summary>
            The DomainContext corresponding to the 'CoreDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The CoreDomainService service URI.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.BusinessAccountWithClientsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity instances using the 'BusinessAccountWithClientsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.BusinessAccount"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.BusinessForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Business"/> entity instances using the 'BusinessForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Business"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.CurrentUserAccountQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.UserAccount"/> entity instances using the 'CurrentUserAccount' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.UserAccount"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetAddressesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Common.Composite.Tools.Address"/> entity instances using the 'GetAddresses' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Common.Composite.Tools.Address"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetBusinessAccountsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances using the 'GetBusinessAccountsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetClientsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity instances using the 'GetClientsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetClientTitlesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances using the 'GetClientTitles' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetClientTitlesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances using the 'GetClientTitlesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetContactInfoSetQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> entity instances using the 'GetContactInfoSet' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetContactsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances using the 'GetContacts' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetContactsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances using the 'GetContactsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetEmployeeHistoryEntriesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances using the 'GetEmployeeHistoryEntries' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetEmployeeHistoryEntriesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances using the 'GetEmployeeHistoryEntriesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetEmployeesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances using the 'GetEmployees' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetEmployeesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances using the 'GetEmployeesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity instances using the 'GetFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetLocationFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationField"/> entity instances using the 'GetLocationFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.LocationField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances using the 'GetLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetLocationsToAdministerForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances using the 'GetLocationsToAdministerForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetOptionsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Option"/> entity instances using the 'GetOptions' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Option"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetOptionsFieldQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField"/> entity instances using the 'GetOptionsField' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetOptionsFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField"/> entity instances using the 'GetOptionsFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.OptionsField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetPartysQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances using the 'GetPartys' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetPublicBlocksQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Block"/> entity instances using the 'GetPublicBlocks' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Block"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRecurringServicesForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity instances using the 'GetRecurringServicesForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRegionsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances using the 'GetRegions' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRegionsForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances using the 'GetRegionsForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRepeatsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Repeat"/> entity instances using the 'GetRepeats' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Repeat"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRolesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entity instances using the 'GetRoles' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRouteDestinationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetRouteDestinations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRouteLogForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances using the 'GetRouteLogForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetRoutesForServiceProviderOnDayQuery(System.Guid,System.DateTime)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances using the 'GetRoutesForServiceProviderOnDay' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="dateOfRoutes">The value for the 'dateOfRoutes' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetServicesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances using the 'GetServicesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetServiceTemplatesForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances using the 'GetServiceTemplatesForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetSubLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation"/> entity instances using the 'GetSubLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetTextBoxFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TextBoxField"/> entity instances using the 'GetTextBoxFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TextBoxField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetUnroutedRouteTasksQuery(System.Guid,System.DateTime)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances using the 'GetUnroutedRouteTasks' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="selectedDate">The value for the 'selectedDate' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetVehicleMaintenanceLineItemQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances using the 'GetVehicleMaintenanceLineItem' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetVehicleMaintenanceLineItemsForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances using the 'GetVehicleMaintenanceLineItemsForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetVehicleMaintenanceLogQuery(System.Guid,System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances using the 'GetVehicleMaintenanceLog' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="vehicleId">The value for the 'vehicleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetVehicleMaintenanceLogForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances using the 'GetVehicleMaintenanceLogForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.GetVehiclesForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> entity instances using the 'GetVehiclesForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.PartyForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances using the 'PartyForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.PartyToAdministerForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances using the 'PartyToAdministerForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ContactInfoLabelsForParty(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{System.String}}},System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ContactInfoLabelsForParty(System.Guid)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ContactInfoTypesForParty(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{System.String}}},System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ContactInfoTypesForParty(System.Guid)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ProvisionBlobStorageWriteAccess(System.String,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Boolean}},System.Object)">
            <summary>
            Asynchronously invokes the 'ProvisionBlobStorageWriteAccess' method of the DomainService.
            </summary>
            <param name="containerName">The value for the 'containerName' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ProvisionBlobStorageWriteAccess(System.String)">
            <summary>
            Asynchronously invokes the 'ProvisionBlobStorageWriteAccess' method of the DomainService.
            </summary>
            <param name="containerName">The value for the 'containerName' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.TryGeocode(System.String,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{FoundOps.Common.Composite.Tools.GeocoderResult}}},System.Object)">
            <summary>
            Asynchronously invokes the 'TryGeocode' method of the DomainService.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.TryGeocode(System.String)">
            <summary>
            Asynchronously invokes the 'TryGeocode' method of the DomainService.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Addresses">
            <summary>
            Gets the set of <see cref="T:FoundOps.Common.Composite.Tools.Address"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Parties">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Clients">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Client"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.ClientTitles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ClientTitle"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.ContactInfos">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ContactInfo"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Contacts">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Contact"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.EmployeeHistoryEntries">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Employees">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Employee"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Fields">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Field"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Locations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Options">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Option"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Blocks">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Block"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.RecurringServices">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RecurringService"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Regions">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Region"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Repeats">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Repeat"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Roles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Role"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.RouteDestinations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Routes">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Services">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Service"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.ServiceTemplates">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.ServiceTemplate"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.SubLocations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.SubLocation"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.RouteTasks">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteTask"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.VehicleMaintenanceLineItems">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.VehicleMaintenanceLogEntries">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.CoreDomainContext.Vehicles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Vehicle"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract">
            <summary>
            Service contract for the 'CoreDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginBusinessAccountWithClientsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'BusinessAccountWithClientsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndBusinessAccountWithClientsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginBusinessAccountWithClientsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginBusinessAccountWithClientsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'BusinessAccountWithClientsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginBusinessForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'BusinessForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndBusinessForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginBusinessForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginBusinessForRole'.</param>
            <returns>The 'QueryResult' returned from the 'BusinessForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginContactInfoLabelsForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' operation.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndContactInfoLabelsForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginContactInfoLabelsForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginContactInfoLabelsForParty'.</param>
            <returns>The 'IEnumerable`1' returned from the 'ContactInfoLabelsForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginContactInfoTypesForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' operation.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndContactInfoTypesForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginContactInfoTypesForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginContactInfoTypesForParty'.</param>
            <returns>The 'IEnumerable`1' returned from the 'ContactInfoTypesForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginCurrentUserAccount(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'CurrentUserAccount' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndCurrentUserAccount(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginCurrentUserAccount'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginCurrentUserAccount'.</param>
            <returns>The 'QueryResult' returned from the 'CurrentUserAccount' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetAddresses(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetAddresses' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetAddresses(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetAddresses'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetAddresses'.</param>
            <returns>The 'QueryResult' returned from the 'GetAddresses' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetBusinessAccountsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetBusinessAccountsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetBusinessAccountsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetBusinessAccountsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetBusinessAccountsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetBusinessAccountsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetClientsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientTitles(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientTitles' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetClientTitles(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientTitles'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientTitles'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientTitles' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientTitlesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientTitlesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetClientTitlesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientTitlesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientTitlesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientTitlesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetContactInfoSet(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContactInfoSet' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetContactInfoSet(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContactInfoSet'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContactInfoSet'.</param>
            <returns>The 'QueryResult' returned from the 'GetContactInfoSet' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetContacts(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContacts' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetContacts(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContacts'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContacts'.</param>
            <returns>The 'QueryResult' returned from the 'GetContacts' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetContactsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContactsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetContactsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContactsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContactsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetContactsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeeHistoryEntries(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeeHistoryEntries' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeeHistoryEntries(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeeHistoryEntries'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeeHistoryEntries'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeeHistoryEntries' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeeHistoryEntriesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeeHistoryEntriesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeeHistoryEntriesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeeHistoryEntriesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeeHistoryEntriesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeeHistoryEntriesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployees(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployees' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployees(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployees'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployees'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployees' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocationFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocationFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetLocationFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocationFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocationFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocationFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocationsToAdministerForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocationsToAdministerForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetLocationsToAdministerForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocationsToAdministerForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocationsToAdministerForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocationsToAdministerForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptions(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptions' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetOptions(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptions'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptions'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptions' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptionsField(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptionsField' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetOptionsField(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptionsField'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptionsField'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptionsField' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptionsFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptionsFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetOptionsFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptionsFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptionsFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptionsFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetPartys(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetPartys' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetPartys(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetPartys'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetPartys'.</param>
            <returns>The 'QueryResult' returned from the 'GetPartys' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetPublicBlocks(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetPublicBlocks' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetPublicBlocks(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetPublicBlocks'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetPublicBlocks'.</param>
            <returns>The 'QueryResult' returned from the 'GetPublicBlocks' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRecurringServicesForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRecurringServicesForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRecurringServicesForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRecurringServicesForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRecurringServicesForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRecurringServicesForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRegions(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRegions' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRegions(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRegions'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRegions'.</param>
            <returns>The 'QueryResult' returned from the 'GetRegions' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRegionsForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRegionsForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRegionsForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRegionsForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRegionsForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRegionsForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRepeats(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRepeats' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRepeats(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRepeats'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRepeats'.</param>
            <returns>The 'QueryResult' returned from the 'GetRepeats' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRoles(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoles' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRoles(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoles'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoles'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoles' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRouteDestinations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteDestinations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRouteDestinations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteDestinations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteDestinations'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteDestinations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRouteLogForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteLogForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRouteLogForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteLogForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteLogForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteLogForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetRoutesForServiceProviderOnDay(System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoutesForServiceProviderOnDay' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="dateOfRoutes">The value for the 'dateOfRoutes' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetRoutesForServiceProviderOnDay(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoutesForServiceProviderOnDay'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoutesForServiceProviderOnDay'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoutesForServiceProviderOnDay' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetServicesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetServicesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetServicesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetServicesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetServicesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetServicesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetServiceTemplatesForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetServiceTemplatesForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetServiceTemplatesForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetServiceTemplatesForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetServiceTemplatesForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetServiceTemplatesForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetSubLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetSubLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetSubLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetSubLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetSubLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetSubLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetTextBoxFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTextBoxFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetTextBoxFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTextBoxFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTextBoxFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetTextBoxFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetUnroutedRouteTasks(System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetUnroutedRouteTasks' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="selectedDate">The value for the 'selectedDate' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetUnroutedRouteTasks(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetUnroutedRouteTasks'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetUnroutedRouteTasks'.</param>
            <returns>The 'QueryResult' returned from the 'GetUnroutedRouteTasks' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLineItem(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLineItem' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLineItem(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLineItem'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLineItem'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLineItem' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLineItemsForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLineItemsForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLineItemsForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLineItemsForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLineItemsForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLineItemsForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLog(System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLog' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="vehicleId">The value for the 'vehicleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLog(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLog'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLog'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLog' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLogForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLogForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLogForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLogForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLogForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLogForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehiclesForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehiclesForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndGetVehiclesForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehiclesForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehiclesForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehiclesForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginPartyForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'PartyForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndPartyForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginPartyForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginPartyForRole'.</param>
            <returns>The 'QueryResult' returned from the 'PartyForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginPartyToAdministerForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'PartyToAdministerForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndPartyToAdministerForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginPartyToAdministerForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginPartyToAdministerForRole'.</param>
            <returns>The 'QueryResult' returned from the 'PartyToAdministerForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginProvisionBlobStorageWriteAccess(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'ProvisionBlobStorageWriteAccess' operation.
            </summary>
            <param name="containerName">The value for the 'containerName' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndProvisionBlobStorageWriteAccess(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginProvisionBlobStorageWriteAccess'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginProvisionBlobStorageWriteAccess'.</param>
            <returns>The 'Boolean' returned from the 'ProvisionBlobStorageWriteAccess' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginTryGeocode(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'TryGeocode' operation.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndTryGeocode(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginTryGeocode'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginTryGeocode'.</param>
            <returns>The 'IEnumerable`1' returned from the 'TryGeocode' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.CoreDomainContext.ICoreDomainServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.Core.Server.Services.TechnicianDomainContext">
            <summary>
            The DomainContext corresponding to the 'TechnicianDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The TechnicianDomainService service URI.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances using the 'GetLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetPartiesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances using the 'GetParties' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetRouteDestinationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetRouteDestinations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetRoutesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances using the 'GetRoutes' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetTechniciansRouteDestinationsAuthorizedQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetTechniciansRouteDestinationsAuthorized' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetTestTechniciansRouteDestinationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetTestTechniciansRouteDestinations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.GetTrackPointsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint"/> entity instances using the 'GetTrackPoints' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.InsertTrackPoint(System.Int64,System.Int64,System.DateTime,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' method of the DomainService.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.InsertTrackPoint(System.Int64,System.Int64,System.DateTime)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' method of the DomainService.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Server.Services.TechnicianDomainContext.Locations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Location"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.TechnicianDomainContext.Parties">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Party"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.TechnicianDomainContext.RouteDestinations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.RouteDestination"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.TechnicianDomainContext.Routes">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.Route"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Services.TechnicianDomainContext.TrackPoints">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Server.Models.CoreEntities.TrackPoint"/> entity instances that have been loaded into this <see cref="T:FoundOps.Core.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract">
            <summary>
            Service contract for the 'TechnicianDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetParties(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetParties' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetParties(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetParties'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetParties'.</param>
            <returns>The 'QueryResult' returned from the 'GetParties' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetRouteDestinations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteDestinations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetRouteDestinations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteDestinations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteDestinations'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteDestinations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetRoutes(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoutes' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetRoutes(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoutes'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoutes'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoutes' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTechniciansRouteDestinationsAuthorized(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTechniciansRouteDestinationsAuthorized' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTechniciansRouteDestinationsAuthorized(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTechniciansRouteDestinationsAuthorized'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTechniciansRouteDestinationsAuthorized'.</param>
            <returns>The 'QueryResult' returned from the 'GetTechniciansRouteDestinationsAuthorized' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTestTechniciansRouteDestinations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTestTechniciansRouteDestinations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTestTechniciansRouteDestinations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTestTechniciansRouteDestinations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTestTechniciansRouteDestinations'.</param>
            <returns>The 'QueryResult' returned from the 'GetTestTechniciansRouteDestinations' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTrackPoints(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTrackPoints' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTrackPoints(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTrackPoints'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTrackPoints'.</param>
            <returns>The 'QueryResult' returned from the 'GetTrackPoints' operation.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginInsertTrackPoint(System.Int64,System.Int64,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' operation.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndInsertTrackPoint(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginInsertTrackPoint'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginInsertTrackPoint'.</param>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Core.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.SLClient.Data.WebContext">
            <summary>
            Context for the RIA application.
            </summary>
            <remarks>
            This context extends the base to make application services and types available
            for consumption from code and xaml.
            </remarks>
        </member>
        <member name="M:FoundOps.SLClient.Data.WebContext.#ctor">
            <summary>
            Initializes a new instance of the WebContext class.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.WebContext.Current">
            <summary>
            Gets the context that is registered as a lifetime object with the current application.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if there is no current application,
            no contexts have been added, or more than one context has been added.
            </exception>
            <seealso cref="P:System.Windows.Application.ApplicationLifetimeObjects"/>
        </member>
        <member name="P:FoundOps.SLClient.Data.WebContext.User">
            <summary>
            Gets a user representing the authenticated identity.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Context.ViewModels.CoreEntityCollectionViewModel`1.LoadData">
            <summary>
            To be called when this ViewModel should LoadData
            </summary>
        </member>
        <member name="P:FoundOps.Core.Context.ViewModels.CoreEntityCollectionViewModel`1.LazyLoad">
            <summary>
            If set to True the Data will only Reload if there is one or more object in ControlsThatCurrentlyRequireThisViewModel
            Defaults to True.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Context.ViewModels.CoreEntityCollectionInfiniteAccordionViewModel`1.IsInDetailsView">
            <summary>
            Gets a value indicating whether this view model's ObjectTypeProvided is currently the main entity displayed.
            </summary>
            <value>
            	<c>true</c> if this instance is currently the main details view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:FoundOps.SLClient.Data.Converters.LocationToUrlConverter">
            <summary>
            A converter that takes a location and returns a url with a (Location) QRCode
            </summary>
        </member>
        <member name="M:FoundOps.Core.Server.Models.CoreEntities.DesignData.RoutesDesignData.#ctor(FoundOps.Core.Server.Models.CoreEntities.BusinessAccount,FoundOps.Core.Server.Models.CoreEntities.ClientsDesignData)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Server.Models.CoreEntities.DesignData.RoutesDesignData"/> class.
            </summary>
            <param name="ownerBusinessAccount">The owner business account.</param>
            <param name="clientsDesignData">The clients design data.</param>
        </member>
    </members>
</doc>
