@model string
@using FoundOps.Server
<!DOCTYPE html>
<html>
<head>
    <title>FoundOPS</title>
    <link rel="shortcut icon" href="../../Content/favicon.ico" />
    <script type="text/javascript" src="@Url.Content("../../Scripts/jquery-1.6.1.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("../../Scripts/userVoice.js")"></script>
    <style type="text/css">
        html, body{height: 100%;overflow: hidden;}
        body{padding: 0;margin: 0;}
        #silverlightControlHost{height: 100%;}
    </style>
    <script type="text/javascript">
        //Access function for silverlight to get around a security exception for Http Gets that do not have a crossdomainpolicy
        function httpGet(url) {
            var img = new Image();
            img.src = url;
        }

        function openUserVoice()
        {
            UserVoice.showPopupWidget();
        }

        function onSilverlightError(sender, args) {
            var appSource = "";
            if (sender != null && sender != 0) {
                appSource = sender.getHost().Source;
            }

            var errorType = args.ErrorType;
            var iErrorCode = args.ErrorCode;

            if (errorType == "ImageError" || errorType == "MediaError") {
                return;
            }

            var errMsg = "Unhandled Error in Silverlight Application " + appSource + "\n";

            errMsg += "Code: " + iErrorCode + "    \n";
            errMsg += "Category: " + errorType + "       \n";
            errMsg += "Message: " + args.ErrorMessage + "     \n";

            if (errorType == "ParserError") {
                errMsg += "File: " + args.xamlFile + "     \n";
                errMsg += "Line: " + args.lineNumber + "     \n";
                errMsg += "Position: " + args.charPosition + "     \n";
            }
            else if (errorType == "RuntimeError") {
                if (args.lineNumber != 0) {
                    errMsg += "Line: " + args.lineNumber + "     \n";
                    errMsg += "Position: " + args.charPosition + "     \n";
                }
                errMsg += "MethodName: " + args.methodName + "     \n";
            }

            throw new Error(errMsg);
        }

        function onSourceDownloadProgressChanged(sender, eventArgs) {
            var myText = sender.findName("progressText");
            myText.Text = (Math.round(eventArgs.progress * 100)).toString();
            var myBar = sender.findName("ProgressBarTransform");
            myBar.ScaleX = eventArgs.progress;
        }
    </script>
    <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
        try {
            var pageTracker = _gat._getTracker("UA-25857232-1");
            pageTracker._initData();
            pageTracker._trackPageview();
            function trackEvent(category, action, label, value) {
                pageTracker._trackEvent(category, action, label, value);
            }
        }
        catch (err) { }
    </script>
</head>
<body>
    <form id="form1" runat="server" style="height: 100%">
    <div id="silverlightControlHost">
        <object data="data:application/x-silverlight-2," type="application/x-silverlight-2"
            width="100%" height="100%">
            @{
                var xapSource = Global.IsDebugMode ? Url.Content("~/ClientBin/FoundOps.SLClient.Navigator.xap")
                                                   : Url.Content("http://fstore.blob.core.windows.net/xaps/FoundOps.SLClient.Navigator.xap");

                //Setup version
                var sourceParam = xapSource + "?ignore=" + Model;
            }
            <param name="source" value="@sourceParam"/>
            <param name="onSourceDownloadProgressChanged" value="onSourceDownloadProgressChanged" />
            <param name="splashscreensource" value=@if (Global.IsDebugMode)
                                                   {
                                                       @Url.Content("~/ClientBin/SplashScreen.xaml");
                                                   }
                                                   else
                                                   {
                                                       @Url.Content("http://fstore.blob.core.windows.net/xaps/SplashScreen.xaml");
                                                   } />
            <param name="onError" value="onSilverlightError" />
            <param name="background" value="#ff333335" />
            <param name="windowless" value="true" />
            <param name="minRuntimeVersion" value="5.0.61118.0" />
            <param name="enableHtmlAccess" value="true" />
            <param name="autoUpgrade" value="true" />
            <a href="http://go.microsoft.com/fwlink/?LinkID=149156&v=5.0.61118.0" style="text-decoration: none">
                <img src="http://go.microsoft.com/fwlink/?LinkId=161376" alt="Get Microsoft Silverlight" style="border-style: none" />
            </a>
        </object>
        <iframe id="_sl_historyFrame" style="visibility: hidden; height: 0px; width: 0px; border: 0px"></iframe>
    </div>
    </form>
</body>
</html>
