After generating database from model (AND CCDAPDD if you added anything to the Model) you need to fix a couple of things in the CoreEntities.edmx:

1. Fix the views

Replace
    <EntitySet Name="ServiceTemplateWithVendorIds" EntityType="CoreEntities.Store.ServiceTemplateWithVendorIds" store:Type="Tables" Schema="dbo" />
with
    <EntitySet Name="ServiceTemplatesWithVendorId" EntityType="CoreEntities.Store.ServiceTemplatesWithVendorId" store:Type="Views" store:Schema="dbo" store:Name="ServiceTemplatesWithVendorId">
		<DefiningQuery>SELECT 
		[ServiceTemplatesWithVendorId].[ServiceTemplateId] AS [ServiceTemplateId], 
		[ServiceTemplatesWithVendorId].[BusinessAccountId] AS [BusinessAccountId]
		FROM [dbo].[ServiceTemplatesWithVendorId] AS [ServiceTemplatesWithVendorId]</DefiningQuery>
    </EntitySet>
-------------------------------------------------------------------------------------------------------------------------------
  Replace
  <EntityType Name="ServiceTemplateWithVendorIds">
    <Key>
      <PropertyRef Name="ServiceTemplateId" />
      <PropertyRef Name="VendorId" />
    </Key>
    <Property Name="ServiceTemplateId" Type="uniqueidentifier" Nullable="false" />
    <Property Name="VendorId" Type="uniqueidentifier" Nullable="false" />
  </EntityType>
with
	<EntityType Name="ServiceTemplatesWithVendorId">
		<Key>
            <PropertyRef Name="ServiceTemplateId" />
			<PropertyRef Name="BusinessAccountId" />
		</Key>
		<Property Name="ServiceTemplateId" Type="uniqueidentifier" Nullable="false" />
		<Property Name="BusinessAccountId" Type="uniqueidentifier" Nullable="false" />
	</EntityType>
-------------------------------------------------------------------------------------------------------------------------------
DO NOT CHANGE: <EntitySet Name="ServiceTemplateWithVendorIds" EntityType="CoreEntities.ServiceTemplateWithVendorId" />
-------------------------------------------------------------------------------------------------------------------------------
Replace
    <EntitySetMapping Name="ServiceTemplateWithVendorIds">
      <EntityTypeMapping TypeName="IsTypeOf(CoreEntities.ServiceTemplateWithVendorId)">
        <MappingFragment StoreEntitySet="ServiceTemplateWithVendorIds">
          <ScalarProperty Name="ServiceTemplateId" ColumnName="ServiceTemplateId" />
          <ScalarProperty Name="VendorId" ColumnName="VendorId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
with
          <EntitySetMapping Name="ServiceTemplateWithVendorIds">
            <EntityTypeMapping TypeName="CoreEntities.ServiceTemplateWithVendorId">
              <MappingFragment StoreEntitySet="ServiceTemplatesWithVendorId">
                <ScalarProperty Name="BusinessAccountId" ColumnName="BusinessAccountId" />
                <ScalarProperty Name="ServiceTemplateId" ColumnName="ServiceTemplateId" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
-------------------------------------------------------------------------------------------------------------------------------

2. A. Delete all stored procedures
   B. Update Model from Database
   C. Add back all Stored Procedures(Except CheckServiceTemplateForChildren and all that start with "Get" )
   D. In Model Browser delete the Function Imports for the 3 table valued functions: 
      GetServiceHolders, GetResourcesWithLastPoint, GetUnroutedServicesForDate
   E. Save EDMX

-------------------------------------------------------------------------------------------------------------------------------
3. Add Functions back

Add after </EntityContainer> (the one after FK association sets)

      <Function Name="GetServiceHolders" IsComposable="false">
        <CommandText>
          SELECT RecurringServiceId, ServiceId, OccurDate, ServiceName
          FROM dbo.GetServiceHolders(@serviceProviderIdContext, @clientIdContext, @recurringServiceIdContext, @seedDate, @frontBackMinimum, @getPrevious, @getNext)
        </CommandText>
        <Parameter Name="serviceProviderIdContext"
                   Mode="In"
                   Type="uniqueidentifier"/>
        <Parameter Name="clientIdContext"
                   Mode="In"
                   Type="uniqueidentifier"/>
        <Parameter Name="recurringServiceIdContext"
                   Mode="In"
                   Type="uniqueidentifier"/>
        <Parameter Name="seedDate"
                   Mode="In"
                   Type="datetime"/>
        <Parameter Name="frontBackMinimum"
                   Mode="In"
                   Type="int"/>
        <Parameter Name="getPrevious"
                   Mode="In"
                   Type="bit"/>
        <Parameter Name="getNext"
                   Mode="In"
                   Type="bit"/>
      </Function>
      <Function Name="GetUnroutedServicesForDate" IsComposable="false">
        <CommandText>
          SELECT RecurringServiceId, ServiceId, OccurDate, ServiceName, ClientName, ClientId, RegionName, LocationName, LocationId, AddressLine, Latitude, Longitude, StatusInt
          FROM dbo.GetUnroutedServicesForDate(@serviceProviderContext, @serviceDate)
        </CommandText>
        <Parameter Name="serviceProviderContext"
                   Mode="In"
                   Type="uniqueidentifier"/>
        <Parameter Name="serviceDate"
                   Mode="In"
                   Type="datetime"/>
      </Function>
      <Function Name="GetResourcesWithLastPoint" IsComposable="false">
        <CommandText>
          SELECT EmployeeId, VehicleId, EntityName, Heading, Latitude, Longitude, CollectedTimeStamp, Speed, Source, RouteId, Accuracy
          FROM dbo.GetResourcesWithLatestPoint (@serviceProviderId)
        </CommandText>
        <Parameter Name="serviceProviderId"
               Mode="In"
               Type="uniqueidentifier"/>
      </Function>
-------------------------------------------------------------------------------------------------------------------------------
Re-Import functions 
		A. Go to the Model Browser
		B. Under CoreEntites.Store, expand Stored Procedures/Functions
		C. For each of the functions in Step 3 above 
			1. click on Add Function Import
			2. choose Complex as the output 
			(GetServiceHolders => ServiceHolder, GetUnroutedServicesForDate => TaskHolder, GetResourcesWithLastPoint => ResourceWithLastPoint)
		
Be Sure to select the correct output type. If you need help on this please ask. DO NOT GUESS!!#