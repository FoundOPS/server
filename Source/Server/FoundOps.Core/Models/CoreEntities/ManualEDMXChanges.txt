4. Create PartiesWithName view

Delete
IF OBJECT_ID(N'[CoreEntitiesStoreContainer].[PartiesWithName]', 'U') IS NOT NULL
    DROP TABLE [CoreEntitiesStoreContainer].[PartiesWithName];
GO

and Delete
-- Creating table 'PartiesWithNames'
CREATE TABLE [dbo].[PartiesWithNames] (
    [Id] uniqueidentifier  NOT NULL,
    [ChildName] nvarchar(max)  NULL
);
GO

and Delete
-- Creating primary key on [Id] in table 'PartiesWithNames'
ALTER TABLE [dbo].[PartiesWithNames]
ADD CONSTRAINT [PK_PartiesWithNames]
    PRIMARY KEY CLUSTERED ([Id] ASC);
GO

and Add
CREATE VIEW [dbo].[PartiesWithName]
AS
SELECT        dbo.Parties.Id, ISNULL(dbo.Parties_Person.LastName, '') + ' ' +  ISNULL(dbo.Parties_Person.FirstName, '') +' ' +  ISNULL(dbo.Parties_Person.MiddleInitial, '')  AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Person ON dbo.Parties.Id = dbo.Parties_Person.Id
UNION
SELECT        dbo.Parties.Id, dbo.Parties_Business.Name AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Business ON dbo.Parties.Id = dbo.Parties_Business.Id

GO

5. After generating database from model need to fix the PartiesWithNames view in the CoreEntities.edmx

Replace
    <EntitySet Name="PartiesWithNames" EntityType="CoreEntities.Store.PartiesWithNames" store:Type="Tables" Schema="dbo" />
with
    <EntitySet Name="PartiesWithName" EntityType="CoreEntities.Store.PartyWithName" store:Type="Views" store:Schema="dbo" store:Name="PartiesWithName">
      <DefiningQuery>
        SELECT
        [PartiesWithName].[Id] AS [Id],
        [PartiesWithName].[ChildName] AS [ChildName]
        FROM [dbo].[PartiesWithName] AS [PartiesWithName]
      </DefiningQuery>
    </EntitySet>
Replace
  <EntityType Name="PartiesWithNames">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="uniqueidentifier" Nullable="false" />
    <Property Name="ChildName" Type="nvarchar(max)" Nullable="true" />
  </EntityType>
with
  <EntityType Name="PartiesWithName">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="uniqueidentifier" Nullable="false" />
    <Property Name="ChildName" Type="nvarchar(max)" Nullable="true" />
  </EntityType>
Replace
    <EntitySetMapping Name="PartiesWithNames">
      <EntityTypeMapping TypeName="IsTypeOf(CoreEntities.PartyWithName)">
        <MappingFragment StoreEntitySet="PartiesWithNames">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="ChildName" ColumnName="ChildName" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
with
    <EntitySetMapping Name="PartiesWithNames">
      <EntityTypeMapping TypeName="IsTypeOf(CoreEntities.PartyWithName)">
        <MappingFragment StoreEntitySet="PartiesWithName">
          <ScalarProperty Name="ChildName" ColumnName="ChildName" />
          <ScalarProperty Name="Id" ColumnName="Id" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>