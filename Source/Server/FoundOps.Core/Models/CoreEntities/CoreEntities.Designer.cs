//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CoreEntities", "ContactInfoParty", "ContactInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ContactInfo), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RoleBlock", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Role), "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Block))]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationContactInfo", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), "ContactInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ContactInfo), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationParty", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Location), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "VehicleMaintenanceLogEntryVehicle", "VehicleMaintenanceLogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Vehicle), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteVehicle", "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Route), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Vehicle))]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteTaskLocation", "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteDestinationLocation", "RouteDestination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteDestination), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteTaskRouteDestination", "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), "RouteDestination", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.RouteDestination), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteDestinationRoute", "RouteDestination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteDestination), "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Route), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry), "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientParty", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteTaskClient", "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ServiceClient", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Service), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteDestinationClient", "RouteDestination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteDestination), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteTaskService", "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Service), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountService", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Service), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountRoute", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Route), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountClient", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountRouteTask", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "UserAccountUserAccountLogEntry", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.UserAccount), "UserAccountLogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.UserAccountLogEntry), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ServiceTemplateBusinessAccount", "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RecurringServiceServiceTemplate", "RecurringService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.RecurringService), "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RecurringServiceService", "RecurringService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.RecurringService), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Service), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RecurringServiceClient", "RecurringService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RecurringService), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientServiceTemplate", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "VehicleParty", "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Vehicle), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ServiceServiceTemplate", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Service), "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "PartyRole", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Party), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Role))]
[assembly: EdmRelationshipAttribute("CoreEntities", "PartyRole1", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Party), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Role), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationParty1", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Location), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RegionLocation", "Regions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Region), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountRegion", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Region), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationFile", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.File), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationSubLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), "SubLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.SubLocation), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "EmployeeUserAccount", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Employee), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.UserAccount), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "EmployeeBusinessAccount", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Employee), "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "EmployeePerson", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Employee), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Person), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RecurringServiceRepeat", "RecurringService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.RecurringService), "Repeat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Repeat), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "EmployeeHistoryEntryEmployee", "EmployeeHistoryEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Employee), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteEmployee", "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Route), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Employee))]
[assembly: EdmRelationshipAttribute("CoreEntities", "ServiceTemplateServiceTemplate", "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), "ServiceTemplate1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "FieldField", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Field), "Field1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Field), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "OptionsFieldOption", "OptionsField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.OptionsField), "Option", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Option), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ServiceTemplateField", "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Field), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LocationFieldLocation", "LocationField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.LocationField), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ContactPerson", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Contact), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Person), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ContactParty", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Contact), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientTitleClient", "ClientTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ClientTitle), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientTitleContact", "ClientTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.ClientTitle), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Contact), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "InvoiceLocation", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Invoice), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "InvoiceSalesTerm", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Invoice), "SalesTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.SalesTerm), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "InvoiceServiceTemplate", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Invoice), "ServiceTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.ServiceTemplate), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "LineItemInvoice", "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.LineItem), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Invoice), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "FileParty", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.File), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Party), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "PartyPartyImage", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FoundOps.Core.Models.CoreEntities.Party), "PartyImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.PartyImage), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountInvoice", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Invoice), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientInvoice", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Client), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Invoice), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "ClientLocation", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.Client), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "RouteTaskRecurringService", "RouteTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.RouteTask), "RecurringService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.RecurringService), true)]
[assembly: EdmRelationshipAttribute("CoreEntities", "BusinessAccountLocation", "BusinessAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FoundOps.Core.Models.CoreEntities.BusinessAccount), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FoundOps.Core.Models.CoreEntities.Location), true)]

#endregion

namespace FoundOps.Core.Models.CoreEntities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CoreEntitiesContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CoreEntitiesContainer object using the connection string found in the 'CoreEntitiesContainer' section of the application configuration file.
        /// </summary>
        public CoreEntitiesContainer() : base("name=CoreEntitiesContainer", "CoreEntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreEntitiesContainer object.
        /// </summary>
        public CoreEntitiesContainer(string connectionString) : base(connectionString, "CoreEntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreEntitiesContainer object.
        /// </summary>
        public CoreEntitiesContainer(EntityConnection connection) : base(connection, "CoreEntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Block> Blocks
        {
            get
            {
                if ((_Blocks == null))
                {
                    _Blocks = base.CreateObjectSet<Block>("Blocks");
                }
                return _Blocks;
            }
        }
        private ObjectSet<Block> _Blocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Party> Parties
        {
            get
            {
                if ((_Parties == null))
                {
                    _Parties = base.CreateObjectSet<Party>("Parties");
                }
                return _Parties;
            }
        }
        private ObjectSet<Party> _Parties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactInfo> ContactInfoSet
        {
            get
            {
                if ((_ContactInfoSet == null))
                {
                    _ContactInfoSet = base.CreateObjectSet<ContactInfo>("ContactInfoSet");
                }
                return _ContactInfoSet;
            }
        }
        private ObjectSet<ContactInfo> _ContactInfoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Fields
        {
            get
            {
                if ((_Fields == null))
                {
                    _Fields = base.CreateObjectSet<Field>("Fields");
                }
                return _Fields;
            }
        }
        private ObjectSet<Field> _Fields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteDestination> RouteDestinations
        {
            get
            {
                if ((_RouteDestinations == null))
                {
                    _RouteDestinations = base.CreateObjectSet<RouteDestination>("RouteDestinations");
                }
                return _RouteDestinations;
            }
        }
        private ObjectSet<RouteDestination> _RouteDestinations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Route> Routes
        {
            get
            {
                if ((_Routes == null))
                {
                    _Routes = base.CreateObjectSet<Route>("Routes");
                }
                return _Routes;
            }
        }
        private ObjectSet<Route> _Routes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountLogEntry> UserAccountLog
        {
            get
            {
                if ((_UserAccountLog == null))
                {
                    _UserAccountLog = base.CreateObjectSet<UserAccountLogEntry>("UserAccountLog");
                }
                return _UserAccountLog;
            }
        }
        private ObjectSet<UserAccountLogEntry> _UserAccountLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleMaintenanceLogEntry> VehicleMaintenanceLog
        {
            get
            {
                if ((_VehicleMaintenanceLog == null))
                {
                    _VehicleMaintenanceLog = base.CreateObjectSet<VehicleMaintenanceLogEntry>("VehicleMaintenanceLog");
                }
                return _VehicleMaintenanceLog;
            }
        }
        private ObjectSet<VehicleMaintenanceLogEntry> _VehicleMaintenanceLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleMaintenanceLineItem> VehicleMaintenanceLineItems
        {
            get
            {
                if ((_VehicleMaintenanceLineItems == null))
                {
                    _VehicleMaintenanceLineItems = base.CreateObjectSet<VehicleMaintenanceLineItem>("VehicleMaintenanceLineItems");
                }
                return _VehicleMaintenanceLineItems;
            }
        }
        private ObjectSet<VehicleMaintenanceLineItem> _VehicleMaintenanceLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceTemplate> ServiceTemplates
        {
            get
            {
                if ((_ServiceTemplates == null))
                {
                    _ServiceTemplates = base.CreateObjectSet<ServiceTemplate>("ServiceTemplates");
                }
                return _ServiceTemplates;
            }
        }
        private ObjectSet<ServiceTemplate> _ServiceTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Repeat> Repeats
        {
            get
            {
                if ((_Repeats == null))
                {
                    _Repeats = base.CreateObjectSet<Repeat>("Repeats");
                }
                return _Repeats;
            }
        }
        private ObjectSet<Repeat> _Repeats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecurringService> RecurringServices
        {
            get
            {
                if ((_RecurringServices == null))
                {
                    _RecurringServices = base.CreateObjectSet<RecurringService>("RecurringServices");
                }
                return _RecurringServices;
            }
        }
        private ObjectSet<RecurringService> _RecurringServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubLocation> SubLocations
        {
            get
            {
                if ((_SubLocations == null))
                {
                    _SubLocations = base.CreateObjectSet<SubLocation>("SubLocations");
                }
                return _SubLocations;
            }
        }
        private ObjectSet<SubLocation> _SubLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeHistoryEntry> EmployeeHistoryEntries
        {
            get
            {
                if ((_EmployeeHistoryEntries == null))
                {
                    _EmployeeHistoryEntries = base.CreateObjectSet<EmployeeHistoryEntry>("EmployeeHistoryEntries");
                }
                return _EmployeeHistoryEntries;
            }
        }
        private ObjectSet<EmployeeHistoryEntry> _EmployeeHistoryEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Option> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Option>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Option> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientTitle> ClientTitles
        {
            get
            {
                if ((_ClientTitles == null))
                {
                    _ClientTitles = base.CreateObjectSet<ClientTitle>("ClientTitles");
                }
                return _ClientTitles;
            }
        }
        private ObjectSet<ClientTitle> _ClientTitles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesTerm> SalesTerms
        {
            get
            {
                if ((_SalesTerms == null))
                {
                    _SalesTerms = base.CreateObjectSet<SalesTerm>("SalesTerms");
                }
                return _SalesTerms;
            }
        }
        private ObjectSet<SalesTerm> _SalesTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LineItem> LineItems
        {
            get
            {
                if ((_LineItems == null))
                {
                    _LineItems = base.CreateObjectSet<LineItem>("LineItems");
                }
                return _LineItems;
            }
        }
        private ObjectSet<LineItem> _LineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteTask> RouteTasks
        {
            get
            {
                if ((_RouteTasks == null))
                {
                    _RouteTasks = base.CreateObjectSet<RouteTask>("RouteTasks");
                }
                return _RouteTasks;
            }
        }
        private ObjectSet<RouteTask> _RouteTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Error> Errors
        {
            get
            {
                if ((_Errors == null))
                {
                    _Errors = base.CreateObjectSet<Error>("Errors");
                }
                return _Errors;
            }
        }
        private ObjectSet<Error> _Errors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyWithName> PartiesWithNames
        {
            get
            {
                if ((_PartiesWithNames == null))
                {
                    _PartiesWithNames = base.CreateObjectSet<PartyWithName>("PartiesWithNames");
                }
                return _PartiesWithNames;
            }
        }
        private ObjectSet<PartyWithName> _PartiesWithNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceTemplateWithVendorId> ServiceTemplateWithVendorIds
        {
            get
            {
                if ((_ServiceTemplateWithVendorIds == null))
                {
                    _ServiceTemplateWithVendorIds = base.CreateObjectSet<ServiceTemplateWithVendorId>("ServiceTemplateWithVendorIds");
                }
                return _ServiceTemplateWithVendorIds;
            }
        }
        private ObjectSet<ServiceTemplateWithVendorId> _ServiceTemplateWithVendorIds;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlocks(Block block)
        {
            base.AddObject("Blocks", block);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParties(Party party)
        {
            base.AddObject("Parties", party);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactInfoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactInfoSet(ContactInfo contactInfo)
        {
            base.AddObject("ContactInfoSet", contactInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFields(Field field)
        {
            base.AddObject("Fields", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteDestinations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteDestinations(RouteDestination routeDestination)
        {
            base.AddObject("RouteDestinations", routeDestination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Routes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoutes(Route route)
        {
            base.AddObject("Routes", route);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountLog(UserAccountLogEntry userAccountLogEntry)
        {
            base.AddObject("UserAccountLog", userAccountLogEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleMaintenanceLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleMaintenanceLog(VehicleMaintenanceLogEntry vehicleMaintenanceLogEntry)
        {
            base.AddObject("VehicleMaintenanceLog", vehicleMaintenanceLogEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleMaintenanceLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleMaintenanceLineItems(VehicleMaintenanceLineItem vehicleMaintenanceLineItem)
        {
            base.AddObject("VehicleMaintenanceLineItems", vehicleMaintenanceLineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTemplates(ServiceTemplate serviceTemplate)
        {
            base.AddObject("ServiceTemplates", serviceTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Repeats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepeats(Repeat repeat)
        {
            base.AddObject("Repeats", repeat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecurringServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecurringServices(RecurringService recurringService)
        {
            base.AddObject("RecurringServices", recurringService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubLocations(SubLocation subLocation)
        {
            base.AddObject("SubLocations", subLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeHistoryEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeHistoryEntries(EmployeeHistoryEntry employeeHistoryEntry)
        {
            base.AddObject("EmployeeHistoryEntries", employeeHistoryEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Option option)
        {
            base.AddObject("Options", option);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientTitles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientTitles(ClientTitle clientTitle)
        {
            base.AddObject("ClientTitles", clientTitle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesTerms(SalesTerm salesTerm)
        {
            base.AddObject("SalesTerms", salesTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLineItems(LineItem lineItem)
        {
            base.AddObject("LineItems", lineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteTasks(RouteTask routeTask)
        {
            base.AddObject("RouteTasks", routeTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Errors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrors(Error error)
        {
            base.AddObject("Errors", error);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartiesWithNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartiesWithNames(PartyWithName partyWithName)
        {
            base.AddObject("PartiesWithNames", partyWithName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTemplateWithVendorIds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTemplateWithVendorIds(ServiceTemplateWithVendorId serviceTemplateWithVendorId)
        {
            base.AddObject("ServiceTemplateWithVendorIds", serviceTemplateWithVendorId);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="providerId">No Metadata Documentation available.</param>
        public int DeleteBusinessAccountBasedOnId(Nullable<global::System.Guid> providerId)
        {
            ObjectParameter providerIdParameter;
            if (providerId.HasValue)
            {
                providerIdParameter = new ObjectParameter("providerId", providerId);
            }
            else
            {
                providerIdParameter = new ObjectParameter("providerId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteBusinessAccountBasedOnId", providerIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clientId">No Metadata Documentation available.</param>
        public int DeleteClientBasedOnId(Nullable<global::System.Guid> clientId)
        {
            ObjectParameter clientIdParameter;
            if (clientId.HasValue)
            {
                clientIdParameter = new ObjectParameter("clientId", clientId);
            }
            else
            {
                clientIdParameter = new ObjectParameter("clientId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteClientBasedOnId", clientIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="locationId">No Metadata Documentation available.</param>
        public int DeleteLocationBasedOnId(Nullable<global::System.Guid> locationId)
        {
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("locationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("locationId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteLocationBasedOnId", locationIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="recurringServiceId">No Metadata Documentation available.</param>
        public int DeleteRecurringService(Nullable<global::System.Guid> recurringServiceId)
        {
            ObjectParameter recurringServiceIdParameter;
            if (recurringServiceId.HasValue)
            {
                recurringServiceIdParameter = new ObjectParameter("recurringServiceId", recurringServiceId);
            }
            else
            {
                recurringServiceIdParameter = new ObjectParameter("recurringServiceId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteRecurringService", recurringServiceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="parentTemplateId">No Metadata Documentation available.</param>
        public int DeleteServiceTemplateAndChildrenBasedOnServiceTemplateId(Nullable<global::System.Guid> parentTemplateId)
        {
            ObjectParameter parentTemplateIdParameter;
            if (parentTemplateId.HasValue)
            {
                parentTemplateIdParameter = new ObjectParameter("parentTemplateId", parentTemplateId);
            }
            else
            {
                parentTemplateIdParameter = new ObjectParameter("parentTemplateId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteServiceTemplateAndChildrenBasedOnServiceTemplateId", parentTemplateIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serviceProviderId">No Metadata Documentation available.</param>
        /// <param name="ownerClientId">No Metadata Documentation available.</param>
        public int DeleteServiceTemplatesAndChildrenBasedOnContextId(Nullable<global::System.Guid> serviceProviderId, Nullable<global::System.Guid> ownerClientId)
        {
            ObjectParameter serviceProviderIdParameter;
            if (serviceProviderId.HasValue)
            {
                serviceProviderIdParameter = new ObjectParameter("serviceProviderId", serviceProviderId);
            }
            else
            {
                serviceProviderIdParameter = new ObjectParameter("serviceProviderId", typeof(global::System.Guid));
            }
    
            ObjectParameter ownerClientIdParameter;
            if (ownerClientId.HasValue)
            {
                ownerClientIdParameter = new ObjectParameter("ownerClientId", ownerClientId);
            }
            else
            {
                ownerClientIdParameter = new ObjectParameter("ownerClientId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteServiceTemplatesAndChildrenBasedOnContextId", serviceProviderIdParameter, ownerClientIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="providerId">No Metadata Documentation available.</param>
        public int DeleteUserAccountBasedOnId(Nullable<global::System.Guid> providerId)
        {
            ObjectParameter providerIdParameter;
            if (providerId.HasValue)
            {
                providerIdParameter = new ObjectParameter("providerId", providerId);
            }
            else
            {
                providerIdParameter = new ObjectParameter("providerId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteUserAccountBasedOnId", providerIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serviceProviderId">No Metadata Documentation available.</param>
        /// <param name="serviceDate">No Metadata Documentation available.</param>
        public ObjectResult<ResourceWithLastPoint> GetResourcesWithLastPoint(Nullable<global::System.Guid> serviceProviderId, Nullable<global::System.DateTime> serviceDate)
        {
            ObjectParameter serviceProviderIdParameter;
            if (serviceProviderId.HasValue)
            {
                serviceProviderIdParameter = new ObjectParameter("serviceProviderId", serviceProviderId);
            }
            else
            {
                serviceProviderIdParameter = new ObjectParameter("serviceProviderId", typeof(global::System.Guid));
            }
    
            ObjectParameter serviceDateParameter;
            if (serviceDate.HasValue)
            {
                serviceDateParameter = new ObjectParameter("serviceDate", serviceDate);
            }
            else
            {
                serviceDateParameter = new ObjectParameter("serviceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<ResourceWithLastPoint>("GetResourcesWithLastPoint", serviceProviderIdParameter, serviceDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serviceProviderIdContext">No Metadata Documentation available.</param>
        /// <param name="clientIdContext">No Metadata Documentation available.</param>
        /// <param name="recurringServiceIdContext">No Metadata Documentation available.</param>
        /// <param name="seedDate">No Metadata Documentation available.</param>
        /// <param name="frontBackMinimum">No Metadata Documentation available.</param>
        /// <param name="getPrevious">No Metadata Documentation available.</param>
        /// <param name="getNext">No Metadata Documentation available.</param>
        public ObjectResult<ServiceHolder> GetServiceHolders(Nullable<global::System.Guid> serviceProviderIdContext, Nullable<global::System.Guid> clientIdContext, Nullable<global::System.Guid> recurringServiceIdContext, Nullable<global::System.DateTime> seedDate, Nullable<global::System.Int32> frontBackMinimum, Nullable<global::System.Boolean> getPrevious, Nullable<global::System.Boolean> getNext)
        {
            ObjectParameter serviceProviderIdContextParameter;
            if (serviceProviderIdContext.HasValue)
            {
                serviceProviderIdContextParameter = new ObjectParameter("serviceProviderIdContext", serviceProviderIdContext);
            }
            else
            {
                serviceProviderIdContextParameter = new ObjectParameter("serviceProviderIdContext", typeof(global::System.Guid));
            }
    
            ObjectParameter clientIdContextParameter;
            if (clientIdContext.HasValue)
            {
                clientIdContextParameter = new ObjectParameter("clientIdContext", clientIdContext);
            }
            else
            {
                clientIdContextParameter = new ObjectParameter("clientIdContext", typeof(global::System.Guid));
            }
    
            ObjectParameter recurringServiceIdContextParameter;
            if (recurringServiceIdContext.HasValue)
            {
                recurringServiceIdContextParameter = new ObjectParameter("recurringServiceIdContext", recurringServiceIdContext);
            }
            else
            {
                recurringServiceIdContextParameter = new ObjectParameter("recurringServiceIdContext", typeof(global::System.Guid));
            }
    
            ObjectParameter seedDateParameter;
            if (seedDate.HasValue)
            {
                seedDateParameter = new ObjectParameter("seedDate", seedDate);
            }
            else
            {
                seedDateParameter = new ObjectParameter("seedDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter frontBackMinimumParameter;
            if (frontBackMinimum.HasValue)
            {
                frontBackMinimumParameter = new ObjectParameter("frontBackMinimum", frontBackMinimum);
            }
            else
            {
                frontBackMinimumParameter = new ObjectParameter("frontBackMinimum", typeof(global::System.Int32));
            }
    
            ObjectParameter getPreviousParameter;
            if (getPrevious.HasValue)
            {
                getPreviousParameter = new ObjectParameter("getPrevious", getPrevious);
            }
            else
            {
                getPreviousParameter = new ObjectParameter("getPrevious", typeof(global::System.Boolean));
            }
    
            ObjectParameter getNextParameter;
            if (getNext.HasValue)
            {
                getNextParameter = new ObjectParameter("getNext", getNext);
            }
            else
            {
                getNextParameter = new ObjectParameter("getNext", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<ServiceHolder>("GetServiceHolders", serviceProviderIdContextParameter, clientIdContextParameter, recurringServiceIdContextParameter, seedDateParameter, frontBackMinimumParameter, getPreviousParameter, getNextParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="serviceProviderContext">No Metadata Documentation available.</param>
        /// <param name="serviceDate">No Metadata Documentation available.</param>
        public ObjectResult<TaskHolder> GetUnroutedServicesForDate(Nullable<global::System.Guid> serviceProviderContext, Nullable<global::System.DateTime> serviceDate)
        {
            ObjectParameter serviceProviderContextParameter;
            if (serviceProviderContext.HasValue)
            {
                serviceProviderContextParameter = new ObjectParameter("serviceProviderContext", serviceProviderContext);
            }
            else
            {
                serviceProviderContextParameter = new ObjectParameter("serviceProviderContext", typeof(global::System.Guid));
            }
    
            ObjectParameter serviceDateParameter;
            if (serviceDate.HasValue)
            {
                serviceDateParameter = new ObjectParameter("serviceDate", serviceDate);
            }
            else
            {
                serviceDateParameter = new ObjectParameter("serviceDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<TaskHolder>("GetUnroutedServicesForDate", serviceProviderContextParameter, serviceDateParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Block")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Block : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Block object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="navigateUri">Initial value of the NavigateUri property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="loginNotRequired">Initial value of the LoginNotRequired property.</param>
        /// <param name="hideFromNavigation">Initial value of the HideFromNavigation property.</param>
        public static Block CreateBlock(global::System.Guid id, global::System.String name, global::System.String navigateUri, global::System.String link, global::System.Boolean loginNotRequired, global::System.Boolean hideFromNavigation)
        {
            Block block = new Block();
            block.Id = id;
            block.Name = name;
            block.NavigateUri = navigateUri;
            block.Link = link;
            block.LoginNotRequired = loginNotRequired;
            block.HideFromNavigation = hideFromNavigation;
            return block;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NavigateUri
        {
            get
            {
                return _NavigateUri;
            }
            set
            {
                OnNavigateUriChanging(value);
                ReportPropertyChanging("NavigateUri");
                _NavigateUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NavigateUri");
                OnNavigateUriChanged();
            }
        }
        private global::System.String _NavigateUri;
        partial void OnNavigateUriChanging(global::System.String value);
        partial void OnNavigateUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Icon
        {
            get
            {
                return StructuralObject.GetValidValue(_Icon);
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.Byte[] _Icon;
        partial void OnIconChanging(global::System.Byte[] value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LoginNotRequired
        {
            get
            {
                return _LoginNotRequired;
            }
            set
            {
                OnLoginNotRequiredChanging(value);
                ReportPropertyChanging("LoginNotRequired");
                _LoginNotRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginNotRequired");
                OnLoginNotRequiredChanged();
            }
        }
        private global::System.Boolean _LoginNotRequired;
        partial void OnLoginNotRequiredChanging(global::System.Boolean value);
        partial void OnLoginNotRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideFromNavigation
        {
            get
            {
                return _HideFromNavigation;
            }
            set
            {
                OnHideFromNavigationChanging(value);
                ReportPropertyChanging("HideFromNavigation");
                _HideFromNavigation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideFromNavigation");
                OnHideFromNavigationChanged();
            }
        }
        private global::System.Boolean _HideFromNavigation;
        partial void OnHideFromNavigationChanging(global::System.Boolean value);
        partial void OnHideFromNavigationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RoleBlock", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("CoreEntities.RoleBlock", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("CoreEntities.RoleBlock", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Business")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BusinessAccount))]
    public partial class Business : Party
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Business object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Business CreateBusiness(global::System.Guid id)
        {
            Business business = new Business();
            business.Id = id;
            return business;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="BusinessAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessAccount : Business
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static BusinessAccount CreateBusinessAccount(global::System.Guid id)
        {
            BusinessAccount businessAccount = new BusinessAccount();
            businessAccount.Id = id;
            return businessAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean QuickBooksEnabled
        {
            get
            {
                return _QuickBooksEnabled;
            }
            set
            {
                OnQuickBooksEnabledChanging(value);
                ReportPropertyChanging("QuickBooksEnabled");
                _QuickBooksEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuickBooksEnabled");
                OnQuickBooksEnabledChanged();
            }
        }
        private global::System.Boolean _QuickBooksEnabled = false;
        partial void OnQuickBooksEnabledChanging(global::System.Boolean value);
        partial void OnQuickBooksEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuickBooksAccessToken
        {
            get
            {
                return _QuickBooksAccessToken;
            }
            set
            {
                OnQuickBooksAccessTokenChanging(value);
                ReportPropertyChanging("QuickBooksAccessToken");
                _QuickBooksAccessToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuickBooksAccessToken");
                OnQuickBooksAccessTokenChanged();
            }
        }
        private global::System.String _QuickBooksAccessToken;
        partial void OnQuickBooksAccessTokenChanging(global::System.String value);
        partial void OnQuickBooksAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuickBooksAccessTokenSecret
        {
            get
            {
                return _QuickBooksAccessTokenSecret;
            }
            set
            {
                OnQuickBooksAccessTokenSecretChanging(value);
                ReportPropertyChanging("QuickBooksAccessTokenSecret");
                _QuickBooksAccessTokenSecret = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuickBooksAccessTokenSecret");
                OnQuickBooksAccessTokenSecretChanged();
            }
        }
        private global::System.String _QuickBooksAccessTokenSecret;
        partial void OnQuickBooksAccessTokenSecretChanging(global::System.String value);
        partial void OnQuickBooksAccessTokenSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RouteManifestSettings
        {
            get
            {
                return _RouteManifestSettings;
            }
            set
            {
                OnRouteManifestSettingsChanging(value);
                ReportPropertyChanging("RouteManifestSettings");
                _RouteManifestSettings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RouteManifestSettings");
                OnRouteManifestSettingsChanged();
            }
        }
        private global::System.String _RouteManifestSettings;
        partial void OnRouteManifestSettingsChanging(global::System.String value);
        partial void OnRouteManifestSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuickBooksSessionXml
        {
            get
            {
                return _QuickBooksSessionXml;
            }
            set
            {
                OnQuickBooksSessionXmlChanging(value);
                ReportPropertyChanging("QuickBooksSessionXml");
                _QuickBooksSessionXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuickBooksSessionXml");
                OnQuickBooksSessionXmlChanged();
            }
        }
        private global::System.String _QuickBooksSessionXml;
        partial void OnQuickBooksSessionXmlChanging(global::System.String value);
        partial void OnQuickBooksSessionXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxRoutes
        {
            get
            {
                return _MaxRoutes;
            }
            set
            {
                OnMaxRoutesChanging(value);
                ReportPropertyChanging("MaxRoutes");
                _MaxRoutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxRoutes");
                OnMaxRoutesChanged();
            }
        }
        private global::System.Int32 _MaxRoutes = 1;
        partial void OnMaxRoutesChanging(global::System.Int32 value);
        partial void OnMaxRoutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountService", "Service")]
        public EntityCollection<Service> ServicesToProvide
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("CoreEntities.BusinessAccountService", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("CoreEntities.BusinessAccountService", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRoute", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("CoreEntities.BusinessAccountRoute", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("CoreEntities.BusinessAccountRoute", "Route", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountClient", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("CoreEntities.BusinessAccountClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("CoreEntities.BusinessAccountClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRouteTask", "RouteTask")]
        public EntityCollection<RouteTask> RouteTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.BusinessAccountRouteTask", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.BusinessAccountRouteTask", "RouteTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateBusinessAccount", "ServiceTemplate")]
        public EntityCollection<ServiceTemplate> ServiceTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceTemplate>("CoreEntities.ServiceTemplateBusinessAccount", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceTemplate>("CoreEntities.ServiceTemplateBusinessAccount", "ServiceTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRegion", "Region")]
        public EntityCollection<Region> Regions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Region>("CoreEntities.BusinessAccountRegion", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Region>("CoreEntities.BusinessAccountRegion", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeBusinessAccount", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("CoreEntities.EmployeeBusinessAccount", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("CoreEntities.EmployeeBusinessAccount", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountInvoice", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CoreEntities.BusinessAccountInvoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CoreEntities.BusinessAccountInvoice", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountLocation", "Location")]
        public Location DepotLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.BusinessAccountLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.BusinessAccountLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> DepotLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.BusinessAccountLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.BusinessAccountLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        public static Client CreateClient(global::System.Guid id, global::System.DateTime dateAdded, global::System.Guid vendorId)
        {
            Client client = new Client();
            client.Id = id;
            client.DateAdded = dateAdded;
            client.VendorId = vendorId;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salesperson
        {
            get
            {
                return _Salesperson;
            }
            set
            {
                OnSalespersonChanging(value);
                ReportPropertyChanging("Salesperson");
                _Salesperson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Salesperson");
                OnSalespersonChanged();
            }
        }
        private global::System.String _Salesperson;
        partial void OnSalespersonChanging(global::System.String value);
        partial void OnSalespersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Guid _VendorId;
        partial void OnVendorIdChanging(global::System.Guid value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DefaultBillingLocationId
        {
            get
            {
                return _DefaultBillingLocationId;
            }
            set
            {
                OnDefaultBillingLocationIdChanging(value);
                ReportPropertyChanging("DefaultBillingLocationId");
                _DefaultBillingLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultBillingLocationId");
                OnDefaultBillingLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DefaultBillingLocationId;
        partial void OnDefaultBillingLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnDefaultBillingLocationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientParty", "Party")]
        public Party OwnedParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ClientParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ClientParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnedPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ClientParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.ClientParty", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskClient", "RouteTask")]
        public EntityCollection<RouteTask> RouteTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.RouteTaskClient", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.RouteTaskClient", "RouteTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceClient", "Service")]
        public EntityCollection<Service> ServicesToRecieve
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("CoreEntities.ServiceClient", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("CoreEntities.ServiceClient", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationClient", "RouteDestination")]
        public EntityCollection<RouteDestination> RouteDestinations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationClient", "RouteDestination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationClient", "RouteDestination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountClient", "BusinessAccount")]
        public BusinessAccount Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountClient", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountClient", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountClient", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountClient", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceClient", "RecurringService")]
        public EntityCollection<RecurringService> RecurringServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecurringService>("CoreEntities.RecurringServiceClient", "RecurringService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecurringService>("CoreEntities.RecurringServiceClient", "RecurringService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientServiceTemplate", "ServiceTemplate")]
        public EntityCollection<ServiceTemplate> ServiceTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceTemplate>("CoreEntities.ClientServiceTemplate", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceTemplate>("CoreEntities.ClientServiceTemplate", "ServiceTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientTitleClient", "ClientTitle")]
        public EntityCollection<ClientTitle> ClientTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientTitle>("CoreEntities.ClientTitleClient", "ClientTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientTitle>("CoreEntities.ClientTitleClient", "ClientTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientInvoice", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CoreEntities.ClientInvoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CoreEntities.ClientInvoice", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientLocation", "Location")]
        public Location DefaultBillingLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.ClientLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.ClientLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> DefaultBillingLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.ClientLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.ClientLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="ClientTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientTitle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientTitle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        public static ClientTitle CreateClientTitle(global::System.Guid id, global::System.String title, global::System.Guid contactId)
        {
            ClientTitle clientTitle = new ClientTitle();
            clientTitle.Id = id;
            clientTitle.Title = title;
            clientTitle.ContactId = contactId;
            return clientTitle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Guid _ContactId;
        partial void OnContactIdChanging(global::System.Guid value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientTitleClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientTitleClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientTitleClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientTitleClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.ClientTitleClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientTitleContact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ClientTitleContact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ClientTitleContact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ClientTitleContact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CoreEntities.ClientTitleContact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerPartyId">Initial value of the OwnerPartyId property.</param>
        public static Contact CreateContact(global::System.Guid id, global::System.Guid ownerPartyId)
        {
            Contact contact = new Contact();
            contact.Id = id;
            contact.OwnerPartyId = ownerPartyId;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerPartyId
        {
            get
            {
                return _OwnerPartyId;
            }
            set
            {
                OnOwnerPartyIdChanging(value);
                ReportPropertyChanging("OwnerPartyId");
                _OwnerPartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerPartyId");
                OnOwnerPartyIdChanged();
            }
        }
        private global::System.Guid _OwnerPartyId;
        partial void OnOwnerPartyIdChanging(global::System.Guid value);
        partial void OnOwnerPartyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactPerson", "Person")]
        public Person OwnedPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.ContactPerson", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.ContactPerson", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> OwnedPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.ContactPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("CoreEntities.ContactPerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactParty", "Party")]
        public Party OwnerParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnerPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.ContactParty", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientTitleContact", "ClientTitle")]
        public EntityCollection<ClientTitle> ClientTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientTitle>("CoreEntities.ClientTitleContact", "ClientTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientTitle>("CoreEntities.ClientTitleContact", "ClientTitle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="ContactInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static ContactInfo CreateContactInfo(global::System.Guid id, global::System.String type)
        {
            ContactInfo contactInfo = new ContactInfo();
            contactInfo.Id = id;
            contactInfo.Type = type;
            return contactInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PartyId;
        partial void OnPartyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactId;
        partial void OnContactIdChanging(Nullable<global::System.Guid> value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactInfoParty", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactInfoParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactInfoParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.ContactInfoParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.ContactInfoParty", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationContactInfo", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationContactInfo", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationContactInfo", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationContactInfo", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.LocationContactInfo", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="DateTimeField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DateTimeField : Field
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DateTimeField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="earliest">Initial value of the Earliest property.</param>
        /// <param name="latest">Initial value of the Latest property.</param>
        /// <param name="typeInt">Initial value of the TypeInt property.</param>
        public static DateTimeField CreateDateTimeField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required, global::System.DateTime earliest, global::System.DateTime latest, global::System.Int16 typeInt)
        {
            DateTimeField dateTimeField = new DateTimeField();
            dateTimeField.Id = id;
            dateTimeField.Name = name;
            dateTimeField.Group = group;
            dateTimeField.Required = required;
            dateTimeField.Earliest = earliest;
            dateTimeField.Latest = latest;
            dateTimeField.TypeInt = typeInt;
            return dateTimeField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Earliest
        {
            get
            {
                return _Earliest;
            }
            set
            {
                OnEarliestChanging(value);
                ReportPropertyChanging("Earliest");
                _Earliest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Earliest");
                OnEarliestChanged();
            }
        }
        private global::System.DateTime _Earliest;
        partial void OnEarliestChanging(global::System.DateTime value);
        partial void OnEarliestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Latest
        {
            get
            {
                return _Latest;
            }
            set
            {
                OnLatestChanging(value);
                ReportPropertyChanging("Latest");
                _Latest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latest");
                OnLatestChanged();
            }
        }
        private global::System.DateTime _Latest;
        partial void OnLatestChanging(global::System.DateTime value);
        partial void OnLatestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TypeInt
        {
            get
            {
                return _TypeInt;
            }
            set
            {
                OnTypeIntChanging(value);
                ReportPropertyChanging("TypeInt");
                _TypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeInt");
                OnTypeIntChanged();
            }
        }
        private global::System.Int16 _TypeInt;
        partial void OnTypeIntChanging(global::System.Int16 value);
        partial void OnTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.DateTime> _Value;
        partial void OnValueChanging(Nullable<global::System.DateTime> value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employerId">Initial value of the EmployerId property.</param>
        public static Employee CreateEmployee(global::System.Guid id, global::System.Guid employerId)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.EmployerId = employerId;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLineOne
        {
            get
            {
                return _AddressLineOne;
            }
            set
            {
                OnAddressLineOneChanging(value);
                ReportPropertyChanging("AddressLineOne");
                _AddressLineOne = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLineOne");
                OnAddressLineOneChanged();
            }
        }
        private global::System.String _AddressLineOne;
        partial void OnAddressLineOneChanging(global::System.String value);
        partial void OnAddressLineOneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLineTwo
        {
            get
            {
                return _AddressLineTwo;
            }
            set
            {
                OnAddressLineTwoChanging(value);
                ReportPropertyChanging("AddressLineTwo");
                _AddressLineTwo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLineTwo");
                OnAddressLineTwoChanged();
            }
        }
        private global::System.String _AddressLineTwo;
        partial void OnAddressLineTwoChanging(global::System.String value);
        partial void OnAddressLineTwoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Permissions
        {
            get
            {
                return _Permissions;
            }
            set
            {
                OnPermissionsChanging(value);
                ReportPropertyChanging("Permissions");
                _Permissions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Permissions");
                OnPermissionsChanged();
            }
        }
        private global::System.String _Permissions;
        partial void OnPermissionsChanging(global::System.String value);
        partial void OnPermissionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SSN
        {
            get
            {
                return _SSN;
            }
            set
            {
                OnSSNChanging(value);
                ReportPropertyChanging("SSN");
                _SSN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SSN");
                OnSSNChanged();
            }
        }
        private global::System.String _SSN;
        partial void OnSSNChanging(global::System.String value);
        partial void OnSSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LinkedUserAccountId
        {
            get
            {
                return _LinkedUserAccountId;
            }
            set
            {
                OnLinkedUserAccountIdChanging(value);
                ReportPropertyChanging("LinkedUserAccountId");
                _LinkedUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkedUserAccountId");
                OnLinkedUserAccountIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LinkedUserAccountId;
        partial void OnLinkedUserAccountIdChanging(Nullable<global::System.Guid> value);
        partial void OnLinkedUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployerId
        {
            get
            {
                return _EmployerId;
            }
            set
            {
                OnEmployerIdChanging(value);
                ReportPropertyChanging("EmployerId");
                _EmployerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployerId");
                OnEmployerIdChanged();
            }
        }
        private global::System.Guid _EmployerId;
        partial void OnEmployerIdChanging(global::System.Guid value);
        partial void OnEmployerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastCompassDirection
        {
            get
            {
                return _LastCompassDirection;
            }
            set
            {
                OnLastCompassDirectionChanging(value);
                ReportPropertyChanging("LastCompassDirection");
                _LastCompassDirection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCompassDirection");
                OnLastCompassDirectionChanged();
            }
        }
        private Nullable<global::System.Int32> _LastCompassDirection;
        partial void OnLastCompassDirectionChanging(Nullable<global::System.Int32> value);
        partial void OnLastCompassDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLongitude
        {
            get
            {
                return _LastLongitude;
            }
            set
            {
                OnLastLongitudeChanging(value);
                ReportPropertyChanging("LastLongitude");
                _LastLongitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLongitude");
                OnLastLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _LastLongitude;
        partial void OnLastLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLastLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLatitude
        {
            get
            {
                return _LastLatitude;
            }
            set
            {
                OnLastLatitudeChanging(value);
                ReportPropertyChanging("LastLatitude");
                _LastLatitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLatitude");
                OnLastLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _LastLatitude;
        partial void OnLastLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLastLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastTimeStamp
        {
            get
            {
                return _LastTimeStamp;
            }
            set
            {
                OnLastTimeStampChanging(value);
                ReportPropertyChanging("LastTimeStamp");
                _LastTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTimeStamp");
                OnLastTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastTimeStamp;
        partial void OnLastTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastSpeed
        {
            get
            {
                return _LastSpeed;
            }
            set
            {
                OnLastSpeedChanging(value);
                ReportPropertyChanging("LastSpeed");
                _LastSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSpeed");
                OnLastSpeedChanged();
            }
        }
        private Nullable<global::System.Double> _LastSpeed;
        partial void OnLastSpeedChanging(Nullable<global::System.Double> value);
        partial void OnLastSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastSource
        {
            get
            {
                return _LastSource;
            }
            set
            {
                OnLastSourceChanging(value);
                ReportPropertyChanging("LastSource");
                _LastSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastSource");
                OnLastSourceChanged();
            }
        }
        private global::System.String _LastSource;
        partial void OnLastSourceChanging(global::System.String value);
        partial void OnLastSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPushToAzureTimeStamp
        {
            get
            {
                return _LastPushToAzureTimeStamp;
            }
            set
            {
                OnLastPushToAzureTimeStampChanging(value);
                ReportPropertyChanging("LastPushToAzureTimeStamp");
                _LastPushToAzureTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPushToAzureTimeStamp");
                OnLastPushToAzureTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPushToAzureTimeStamp;
        partial void OnLastPushToAzureTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPushToAzureTimeStampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeUserAccount", "UserAccount")]
        public UserAccount LinkedUserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.EmployeeUserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.EmployeeUserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> LinkedUserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.EmployeeUserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("CoreEntities.EmployeeUserAccount", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeBusinessAccount", "BusinessAccount")]
        public BusinessAccount Employer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.EmployeeBusinessAccount", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.EmployeeBusinessAccount", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> EmployerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.EmployeeBusinessAccount", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.EmployeeBusinessAccount", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeePerson", "Person")]
        public Person OwnedPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.EmployeePerson", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.EmployeePerson", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> OwnedPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CoreEntities.EmployeePerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("CoreEntities.EmployeePerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeHistoryEntryEmployee", "EmployeeHistoryEntry")]
        public EntityCollection<EmployeeHistoryEntry> EmployeeHistoryEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeHistoryEntry>("CoreEntities.EmployeeHistoryEntryEmployee", "EmployeeHistoryEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeHistoryEntry>("CoreEntities.EmployeeHistoryEntryEmployee", "EmployeeHistoryEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteEmployee", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("CoreEntities.RouteEmployee", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("CoreEntities.RouteEmployee", "Route", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="EmployeeHistoryEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeHistoryEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeHistoryEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static EmployeeHistoryEntry CreateEmployeeHistoryEntry(global::System.Guid id, global::System.Guid employeeId)
        {
            EmployeeHistoryEntry employeeHistoryEntry = new EmployeeHistoryEntry();
            employeeHistoryEntry.Id = id;
            employeeHistoryEntry.EmployeeId = employeeId;
            return employeeHistoryEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Guid _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Guid value);
        partial void OnEmployeeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeHistoryEntryEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeeHistoryEntryEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeeHistoryEntryEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeeHistoryEntryEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CoreEntities.EmployeeHistoryEntryEmployee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Error")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Error : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Error object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Error CreateError(global::System.Guid id)
        {
            Error error = new Error();
            error.Id = id;
            return error;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                OnUserEmailChanging(value);
                ReportPropertyChanging("UserEmail");
                _UserEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserEmail");
                OnUserEmailChanged();
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorText
        {
            get
            {
                return _ErrorText;
            }
            set
            {
                OnErrorTextChanging(value);
                ReportPropertyChanging("ErrorText");
                _ErrorText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorText");
                OnErrorTextChanged();
            }
        }
        private global::System.String _ErrorText;
        partial void OnErrorTextChanging(global::System.String value);
        partial void OnErrorTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InnerException
        {
            get
            {
                return _InnerException;
            }
            set
            {
                OnInnerExceptionChanging(value);
                ReportPropertyChanging("InnerException");
                _InnerException = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InnerException");
                OnInnerExceptionChanged();
            }
        }
        private global::System.String _InnerException;
        partial void OnInnerExceptionChanging(global::System.String value);
        partial void OnInnerExceptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(OptionsField))]
    [KnownTypeAttribute(typeof(LocationField))]
    [KnownTypeAttribute(typeof(TextBoxField))]
    [KnownTypeAttribute(typeof(NumericField))]
    [KnownTypeAttribute(typeof(DateTimeField))]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        public static Field CreateField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required)
        {
            Field field = new Field();
            field.Id = id;
            field.Name = name;
            field.Group = group;
            field.Required = required;
            return field;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Required
        {
            get
            {
                return _Required;
            }
            set
            {
                OnRequiredChanging(value);
                ReportPropertyChanging("Required");
                _Required = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Required");
                OnRequiredChanged();
            }
        }
        private global::System.Boolean _Required;
        partial void OnRequiredChanging(global::System.Boolean value);
        partial void OnRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tooltip
        {
            get
            {
                return _Tooltip;
            }
            set
            {
                OnTooltipChanging(value);
                ReportPropertyChanging("Tooltip");
                _Tooltip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tooltip");
                OnTooltipChanged();
            }
        }
        private global::System.String _Tooltip;
        partial void OnTooltipChanging(global::System.String value);
        partial void OnTooltipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentFieldId
        {
            get
            {
                return _ParentFieldId;
            }
            set
            {
                OnParentFieldIdChanging(value);
                ReportPropertyChanging("ParentFieldId");
                _ParentFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFieldId");
                OnParentFieldIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentFieldId;
        partial void OnParentFieldIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ServiceTemplateId
        {
            get
            {
                return _ServiceTemplateId;
            }
            set
            {
                OnServiceTemplateIdChanging(value);
                ReportPropertyChanging("ServiceTemplateId");
                _ServiceTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTemplateId");
                OnServiceTemplateIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ServiceTemplateId;
        partial void OnServiceTemplateIdChanging(Nullable<global::System.Guid> value);
        partial void OnServiceTemplateIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "FieldField", "Field1")]
        public EntityCollection<Field> ChildrenFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("CoreEntities.FieldField", "Field1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("CoreEntities.FieldField", "Field1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "FieldField", "Field")]
        public Field ParentField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("CoreEntities.FieldField", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("CoreEntities.FieldField", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> ParentFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("CoreEntities.FieldField", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("CoreEntities.FieldField", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateField", "ServiceTemplate")]
        public ServiceTemplate OwnerServiceTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateField", "ServiceTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateField", "ServiceTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTemplate> OwnerServiceTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateField", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateField", "ServiceTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(PartyImage))]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static File CreateFile(global::System.Guid id, global::System.Byte data, global::System.Guid partyId)
        {
            File file = new File();
            file.Id = id;
            file.Data = data;
            file.PartyId = partyId;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte _Data;
        partial void OnDataChanging(global::System.Byte value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Guid _PartyId;
        partial void OnPartyIdChanging(global::System.Guid value);
        partial void OnPartyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationFile", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFile", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFile", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFile", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.LocationFile", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "FileParty", "Party")]
        public Party OwnerParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.FileParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.FileParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnerPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.FileParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.FileParty", "Party", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="scheduleModeInt">Initial value of the ScheduleModeInt property.</param>
        public static Invoice CreateInvoice(global::System.Guid id, global::System.Int32 scheduleModeInt)
        {
            Invoice invoice = new Invoice();
            invoice.Id = id;
            invoice.ScheduleModeInt = scheduleModeInt;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FixedScheduleOptionInt
        {
            get
            {
                return _FixedScheduleOptionInt;
            }
            set
            {
                OnFixedScheduleOptionIntChanging(value);
                ReportPropertyChanging("FixedScheduleOptionInt");
                _FixedScheduleOptionInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FixedScheduleOptionInt");
                OnFixedScheduleOptionIntChanged();
            }
        }
        private Nullable<global::System.Int32> _FixedScheduleOptionInt;
        partial void OnFixedScheduleOptionIntChanging(Nullable<global::System.Int32> value);
        partial void OnFixedScheduleOptionIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelativeScheduleDays
        {
            get
            {
                return _RelativeScheduleDays;
            }
            set
            {
                OnRelativeScheduleDaysChanging(value);
                ReportPropertyChanging("RelativeScheduleDays");
                _RelativeScheduleDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelativeScheduleDays");
                OnRelativeScheduleDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _RelativeScheduleDays;
        partial void OnRelativeScheduleDaysChanging(Nullable<global::System.Int32> value);
        partial void OnRelativeScheduleDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleModeInt
        {
            get
            {
                return _ScheduleModeInt;
            }
            set
            {
                OnScheduleModeIntChanging(value);
                ReportPropertyChanging("ScheduleModeInt");
                _ScheduleModeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleModeInt");
                OnScheduleModeIntChanged();
            }
        }
        private global::System.Int32 _ScheduleModeInt;
        partial void OnScheduleModeIntChanging(global::System.Int32 value);
        partial void OnScheduleModeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SalesTermId
        {
            get
            {
                return _SalesTermId;
            }
            set
            {
                OnSalesTermIdChanging(value);
                ReportPropertyChanging("SalesTermId");
                _SalesTermId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesTermId");
                OnSalesTermIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SalesTermId;
        partial void OnSalesTermIdChanging(Nullable<global::System.Guid> value);
        partial void OnSalesTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SyncToken
        {
            get
            {
                return _SyncToken;
            }
            set
            {
                OnSyncTokenChanging(value);
                ReportPropertyChanging("SyncToken");
                _SyncToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SyncToken");
                OnSyncTokenChanged();
            }
        }
        private global::System.String _SyncToken;
        partial void OnSyncTokenChanging(global::System.String value);
        partial void OnSyncTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.String _CustomerId;
        partial void OnCustomerIdChanging(global::System.String value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.String _CreateTime;
        partial void OnCreateTimeChanging(global::System.String value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdatedTime
        {
            get
            {
                return _LastUpdatedTime;
            }
            set
            {
                OnLastUpdatedTimeChanging(value);
                ReportPropertyChanging("LastUpdatedTime");
                _LastUpdatedTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdatedTime");
                OnLastUpdatedTimeChanged();
            }
        }
        private global::System.String _LastUpdatedTime;
        partial void OnLastUpdatedTimeChanging(global::System.String value);
        partial void OnLastUpdatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BusinessAccountId
        {
            get
            {
                return _BusinessAccountId;
            }
            set
            {
                OnBusinessAccountIdChanging(value);
                ReportPropertyChanging("BusinessAccountId");
                _BusinessAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessAccountId");
                OnBusinessAccountIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BusinessAccountId;
        partial void OnBusinessAccountIdChanging(Nullable<global::System.Guid> value);
        partial void OnBusinessAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceLocation", "Location")]
        public Location BillToLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.InvoiceLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.InvoiceLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> BillToLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.InvoiceLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.InvoiceLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceSalesTerm", "SalesTerm")]
        public SalesTerm SalesTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTerm>("CoreEntities.InvoiceSalesTerm", "SalesTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTerm>("CoreEntities.InvoiceSalesTerm", "SalesTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesTerm> SalesTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTerm>("CoreEntities.InvoiceSalesTerm", "SalesTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesTerm>("CoreEntities.InvoiceSalesTerm", "SalesTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceServiceTemplate", "ServiceTemplate")]
        public ServiceTemplate ServiceTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.InvoiceServiceTemplate", "ServiceTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.InvoiceServiceTemplate", "ServiceTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTemplate> ServiceTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.InvoiceServiceTemplate", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTemplate>("CoreEntities.InvoiceServiceTemplate", "ServiceTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LineItemInvoice", "LineItem")]
        public EntityCollection<LineItem> LineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineItem>("CoreEntities.LineItemInvoice", "LineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineItem>("CoreEntities.LineItemInvoice", "LineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountInvoice", "BusinessAccount")]
        public BusinessAccount BusinessAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountInvoice", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountInvoice", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> BusinessAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountInvoice", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountInvoice", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientInvoice", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientInvoice", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientInvoice", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientInvoice", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.ClientInvoice", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="LineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="invoiceId">Initial value of the InvoiceId property.</param>
        public static LineItem CreateLineItem(global::System.Guid id, global::System.Guid invoiceId)
        {
            LineItem lineItem = new LineItem();
            lineItem.Id = id;
            lineItem.InvoiceId = invoiceId;
            return lineItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private global::System.Guid _InvoiceId;
        partial void OnInvoiceIdChanging(global::System.Guid value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.String _Amount;
        partial void OnAmountChanging(global::System.String value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LineItemInvoice", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.LineItemInvoice", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.LineItemInvoice", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.LineItemInvoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("CoreEntities.LineItemInvoice", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Location CreateLocation(global::System.Guid id)
        {
            Location location = new Location();
            location.Id = id;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerPartyId
        {
            get
            {
                return _OwnerPartyId;
            }
            set
            {
                OnOwnerPartyIdChanging(value);
                ReportPropertyChanging("OwnerPartyId");
                _OwnerPartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerPartyId");
                OnOwnerPartyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerPartyId;
        partial void OnOwnerPartyIdChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLineOne
        {
            get
            {
                return _AddressLineOne;
            }
            set
            {
                OnAddressLineOneChanging(value);
                ReportPropertyChanging("AddressLineOne");
                _AddressLineOne = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLineOne");
                OnAddressLineOneChanged();
            }
        }
        private global::System.String _AddressLineOne = "";
        partial void OnAddressLineOneChanging(global::System.String value);
        partial void OnAddressLineOneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLineTwo
        {
            get
            {
                return _AddressLineTwo;
            }
            set
            {
                OnAddressLineTwoChanging(value);
                ReportPropertyChanging("AddressLineTwo");
                _AddressLineTwo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLineTwo");
                OnAddressLineTwoChanged();
            }
        }
        private global::System.String _AddressLineTwo = "";
        partial void OnAddressLineTwoChanging(global::System.String value);
        partial void OnAddressLineTwoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PartyId;
        partial void OnPartyIdChanging(Nullable<global::System.Guid> value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RegionId;
        partial void OnRegionIdChanging(Nullable<global::System.Guid> value);
        partial void OnRegionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationContactInfo", "ContactInfo")]
        public EntityCollection<ContactInfo> ContactInfoSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactInfo>("CoreEntities.LocationContactInfo", "ContactInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactInfo>("CoreEntities.LocationContactInfo", "ContactInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// The account which made the location
        /// </LongDescription>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationParty", "Party")]
        public Party OwnerParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// The account which made the location
        /// </LongDescription>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnerPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.LocationParty", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskLocation", "RouteTask")]
        public EntityCollection<RouteTask> RouteTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.RouteTaskLocation", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.RouteTaskLocation", "RouteTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationLocation", "RouteDestination")]
        public EntityCollection<RouteDestination> RouteDestinations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationLocation", "RouteDestination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationLocation", "RouteDestination", value);
                }
            }
        }
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// The actual party at this location
        /// </LongDescription>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationParty1", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty1", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty1", "Party").Value = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// The actual party at this location
        /// </LongDescription>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.LocationParty1", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.LocationParty1", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RegionLocation", "Regions")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("CoreEntities.RegionLocation", "Regions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("CoreEntities.RegionLocation", "Regions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("CoreEntities.RegionLocation", "Regions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("CoreEntities.RegionLocation", "Regions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationFile", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("CoreEntities.LocationFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("CoreEntities.LocationFile", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationSubLocation", "SubLocation")]
        public EntityCollection<SubLocation> SubLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubLocation>("CoreEntities.LocationSubLocation", "SubLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubLocation>("CoreEntities.LocationSubLocation", "SubLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationFieldLocation", "LocationField")]
        public EntityCollection<LocationField> LocationFieldsWhereValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationField>("CoreEntities.LocationFieldLocation", "LocationField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationField>("CoreEntities.LocationFieldLocation", "LocationField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceLocation", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CoreEntities.InvoiceLocation", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CoreEntities.InvoiceLocation", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientLocation", "Client")]
        public EntityCollection<Client> ClientsWhereBillingLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("CoreEntities.ClientLocation", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("CoreEntities.ClientLocation", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountLocation", "BusinessAccount")]
        public EntityCollection<BusinessAccount> BusinessAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessAccount>("CoreEntities.BusinessAccountLocation", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessAccount>("CoreEntities.BusinessAccountLocation", "BusinessAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="LocationField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationField : Field
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="locationFieldTypeInt">Initial value of the LocationFieldTypeInt property.</param>
        public static LocationField CreateLocationField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required, global::System.Int16 locationFieldTypeInt)
        {
            LocationField locationField = new LocationField();
            locationField.Id = id;
            locationField.Name = name;
            locationField.Group = group;
            locationField.Required = required;
            locationField.LocationFieldTypeInt = locationFieldTypeInt;
            return locationField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 LocationFieldTypeInt
        {
            get
            {
                return _LocationFieldTypeInt;
            }
            set
            {
                OnLocationFieldTypeIntChanging(value);
                ReportPropertyChanging("LocationFieldTypeInt");
                _LocationFieldTypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationFieldTypeInt");
                OnLocationFieldTypeIntChanged();
            }
        }
        private global::System.Int16 _LocationFieldTypeInt;
        partial void OnLocationFieldTypeIntChanging(global::System.Int16 value);
        partial void OnLocationFieldTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationFieldLocation", "Location")]
        public Location Value
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFieldLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFieldLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> ValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationFieldLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.LocationFieldLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="LocationOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationOption : Option
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationOption object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="optionsFieldId">Initial value of the OptionsFieldId property.</param>
        public static LocationOption CreateLocationOption(global::System.Guid id, global::System.String name, global::System.Guid optionsFieldId)
        {
            LocationOption locationOption = new LocationOption();
            locationOption.Id = id;
            locationOption.Name = name;
            locationOption.OptionsFieldId = optionsFieldId;
            return locationOption;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="NumericField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NumericField : Field
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NumericField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="mask">Initial value of the Mask property.</param>
        /// <param name="decimalPlaces">Initial value of the DecimalPlaces property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static NumericField CreateNumericField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required, global::System.String mask, global::System.Int32 decimalPlaces, global::System.Decimal minimum, global::System.Decimal maximum)
        {
            NumericField numericField = new NumericField();
            numericField.Id = id;
            numericField.Name = name;
            numericField.Group = group;
            numericField.Required = required;
            numericField.Mask = mask;
            numericField.DecimalPlaces = decimalPlaces;
            numericField.Minimum = minimum;
            numericField.Maximum = maximum;
            return numericField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mask
        {
            get
            {
                return _Mask;
            }
            set
            {
                OnMaskChanging(value);
                ReportPropertyChanging("Mask");
                _Mask = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mask");
                OnMaskChanged();
            }
        }
        private global::System.String _Mask;
        partial void OnMaskChanging(global::System.String value);
        partial void OnMaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DecimalPlaces
        {
            get
            {
                return _DecimalPlaces;
            }
            set
            {
                OnDecimalPlacesChanging(value);
                ReportPropertyChanging("DecimalPlaces");
                _DecimalPlaces = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DecimalPlaces");
                OnDecimalPlacesChanged();
            }
        }
        private global::System.Int32 _DecimalPlaces;
        partial void OnDecimalPlacesChanging(global::System.Int32 value);
        partial void OnDecimalPlacesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                OnMinimumChanging(value);
                ReportPropertyChanging("Minimum");
                _Minimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minimum");
                OnMinimumChanged();
            }
        }
        private global::System.Decimal _Minimum;
        partial void OnMinimumChanging(global::System.Decimal value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                OnMaximumChanging(value);
                ReportPropertyChanging("Maximum");
                _Maximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maximum");
                OnMaximumChanged();
            }
        }
        private global::System.Decimal _Maximum;
        partial void OnMaximumChanging(global::System.Decimal value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Option")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(LocationOption))]
    public partial class Option : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Option object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="optionsFieldId">Initial value of the OptionsFieldId property.</param>
        public static Option CreateOption(global::System.Guid id, global::System.String name, global::System.Guid optionsFieldId)
        {
            Option option = new Option();
            option.Id = id;
            option.Name = name;
            option.OptionsFieldId = optionsFieldId;
            return option;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsChecked
        {
            get
            {
                return _IsChecked;
            }
            set
            {
                OnIsCheckedChanging(value);
                ReportPropertyChanging("IsChecked");
                _IsChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChecked");
                OnIsCheckedChanged();
            }
        }
        private global::System.Boolean _IsChecked = false;
        partial void OnIsCheckedChanging(global::System.Boolean value);
        partial void OnIsCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OptionsFieldId
        {
            get
            {
                return _OptionsFieldId;
            }
            set
            {
                OnOptionsFieldIdChanging(value);
                ReportPropertyChanging("OptionsFieldId");
                _OptionsFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionsFieldId");
                OnOptionsFieldIdChanged();
            }
        }
        private global::System.Guid _OptionsFieldId;
        partial void OnOptionsFieldIdChanging(global::System.Guid value);
        partial void OnOptionsFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index = 0;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tooltip
        {
            get
            {
                return _Tooltip;
            }
            set
            {
                OnTooltipChanging(value);
                ReportPropertyChanging("Tooltip");
                _Tooltip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tooltip");
                OnTooltipChanged();
            }
        }
        private global::System.String _Tooltip;
        partial void OnTooltipChanging(global::System.String value);
        partial void OnTooltipChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "OptionsFieldOption", "OptionsField")]
        public OptionsField OptionsField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionsField>("CoreEntities.OptionsFieldOption", "OptionsField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionsField>("CoreEntities.OptionsFieldOption", "OptionsField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionsField> OptionsFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionsField>("CoreEntities.OptionsFieldOption", "OptionsField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionsField>("CoreEntities.OptionsFieldOption", "OptionsField", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="OptionsField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionsField : Field
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionsField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="allowMultipleSelection">Initial value of the AllowMultipleSelection property.</param>
        /// <param name="typeInt">Initial value of the TypeInt property.</param>
        public static OptionsField CreateOptionsField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required, global::System.Boolean allowMultipleSelection, global::System.Int16 typeInt)
        {
            OptionsField optionsField = new OptionsField();
            optionsField.Id = id;
            optionsField.Name = name;
            optionsField.Group = group;
            optionsField.Required = required;
            optionsField.AllowMultipleSelection = allowMultipleSelection;
            optionsField.TypeInt = typeInt;
            return optionsField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowMultipleSelection
        {
            get
            {
                return _AllowMultipleSelection;
            }
            set
            {
                OnAllowMultipleSelectionChanging(value);
                ReportPropertyChanging("AllowMultipleSelection");
                _AllowMultipleSelection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowMultipleSelection");
                OnAllowMultipleSelectionChanged();
            }
        }
        private global::System.Boolean _AllowMultipleSelection;
        partial void OnAllowMultipleSelectionChanging(global::System.Boolean value);
        partial void OnAllowMultipleSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TypeInt
        {
            get
            {
                return _TypeInt;
            }
            set
            {
                OnTypeIntChanging(value);
                ReportPropertyChanging("TypeInt");
                _TypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeInt");
                OnTypeIntChanged();
            }
        }
        private global::System.Int16 _TypeInt;
        partial void OnTypeIntChanging(global::System.Int16 value);
        partial void OnTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "OptionsFieldOption", "Option")]
        public EntityCollection<Option> Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Option>("CoreEntities.OptionsFieldOption", "Option");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Option>("CoreEntities.OptionsFieldOption", "Option", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Party")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Business))]
    [KnownTypeAttribute(typeof(Person))]
    public partial class Party : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Party object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Party CreateParty(global::System.Guid id)
        {
            Party party = new Party();
            party.Id = id;
            return party;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactInfoParty", "ContactInfo")]
        public EntityCollection<ContactInfo> ContactInfoSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactInfo>("CoreEntities.ContactInfoParty", "ContactInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactInfo>("CoreEntities.ContactInfoParty", "ContactInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationParty", "Location")]
        public EntityCollection<Location> OwnedLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("CoreEntities.LocationParty", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("CoreEntities.LocationParty", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// This is only set if this party is owned by a Client
        /// </LongDescription>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientParty", "Client")]
        public Client ClientOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientParty", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientParty", "Client").Value = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// This is only set if this party is owned by a Client
        /// </LongDescription>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientParty", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.ClientParty", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleParty", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("CoreEntities.VehicleParty", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("CoreEntities.VehicleParty", "Vehicle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyRole", "Role")]
        public EntityCollection<Role> RoleMembership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("CoreEntities.PartyRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("CoreEntities.PartyRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyRole1", "Role")]
        public EntityCollection<Role> OwnedRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("CoreEntities.PartyRole1", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("CoreEntities.PartyRole1", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationParty1", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("CoreEntities.LocationParty1", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("CoreEntities.LocationParty1", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactParty", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CoreEntities.ContactParty", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CoreEntities.ContactParty", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "FileParty", "File")]
        public EntityCollection<File> OwnedFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("CoreEntities.FileParty", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("CoreEntities.FileParty", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyPartyImage", "PartyImage")]
        public PartyImage PartyImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyImage>("CoreEntities.PartyPartyImage", "PartyImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyImage>("CoreEntities.PartyPartyImage", "PartyImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyImage> PartyImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyImage>("CoreEntities.PartyPartyImage", "PartyImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyImage>("CoreEntities.PartyPartyImage", "PartyImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// This is a special class to avoid a 0..1 to 0..1 association between party and file.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="PartyImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyImage : File
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static PartyImage CreatePartyImage(global::System.Guid id, global::System.Byte data, global::System.Guid partyId)
        {
            PartyImage partyImage = new PartyImage();
            partyImage.Id = id;
            partyImage.Data = data;
            partyImage.PartyId = partyId;
            return partyImage;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyPartyImage", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyPartyImage", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyPartyImage", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyPartyImage", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.PartyPartyImage", "Party", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="PartyWithName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyWithName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyWithName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PartyWithName CreatePartyWithName(global::System.Guid id)
        {
            PartyWithName partyWithName = new PartyWithName();
            partyWithName.Id = id;
            return partyWithName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChildName
        {
            get
            {
                return _ChildName;
            }
            set
            {
                OnChildNameChanging(value);
                ReportPropertyChanging("ChildName");
                _ChildName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChildName");
                OnChildNameChanged();
            }
        }
        private global::System.String _ChildName;
        partial void OnChildNameChanging(global::System.String value);
        partial void OnChildNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(UserAccount))]
    public partial class Person : Party
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Person CreatePerson(global::System.Guid id)
        {
            Person person = new Person();
            person.Id = id;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleInitial
        {
            get
            {
                return _MiddleInitial;
            }
            set
            {
                OnMiddleInitialChanging(value);
                ReportPropertyChanging("MiddleInitial");
                _MiddleInitial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleInitial");
                OnMiddleInitialChanged();
            }
        }
        private global::System.String _MiddleInitial;
        partial void OnMiddleInitialChanging(global::System.String value);
        partial void OnMiddleInitialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> GenderInt
        {
            get
            {
                return _GenderInt;
            }
            set
            {
                OnGenderIntChanging(value);
                ReportPropertyChanging("GenderInt");
                _GenderInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderInt");
                OnGenderIntChanged();
            }
        }
        private Nullable<global::System.Int16> _GenderInt;
        partial void OnGenderIntChanging(Nullable<global::System.Int16> value);
        partial void OnGenderIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeePerson", "Employee")]
        public Employee OwnerEmployee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeePerson", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeePerson", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> OwnerEmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CoreEntities.EmployeePerson", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CoreEntities.EmployeePerson", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ContactPerson", "Contact")]
        public Contact OwnerContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ContactPerson", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ContactPerson", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> OwnerContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CoreEntities.ContactPerson", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CoreEntities.ContactPerson", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="RecurringService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecurringService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecurringService object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static RecurringService CreateRecurringService(global::System.Guid id, global::System.Guid clientId)
        {
            RecurringService recurringService = new RecurringService();
            recurringService.Id = id;
            recurringService.ClientId = clientId;
            return recurringService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// A comma seperated list of dates
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcludedDatesString
        {
            get
            {
                return _ExcludedDatesString;
            }
            set
            {
                OnExcludedDatesStringChanging(value);
                ReportPropertyChanging("ExcludedDatesString");
                _ExcludedDatesString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcludedDatesString");
                OnExcludedDatesStringChanged();
            }
        }
        private global::System.String _ExcludedDatesString;
        partial void OnExcludedDatesStringChanging(global::System.String value);
        partial void OnExcludedDatesStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceServiceTemplate", "ServiceTemplate")]
        public ServiceTemplate ServiceTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.RecurringServiceServiceTemplate", "ServiceTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.RecurringServiceServiceTemplate", "ServiceTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTemplate> ServiceTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.RecurringServiceServiceTemplate", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTemplate>("CoreEntities.RecurringServiceServiceTemplate", "ServiceTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceService", "Service")]
        public EntityCollection<Service> GeneratedServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("CoreEntities.RecurringServiceService", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("CoreEntities.RecurringServiceService", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RecurringServiceClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RecurringServiceClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RecurringServiceClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.RecurringServiceClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceRepeat", "Repeat")]
        public Repeat Repeat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repeat>("CoreEntities.RecurringServiceRepeat", "Repeat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repeat>("CoreEntities.RecurringServiceRepeat", "Repeat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Repeat> RepeatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repeat>("CoreEntities.RecurringServiceRepeat", "Repeat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Repeat>("CoreEntities.RecurringServiceRepeat", "Repeat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskRecurringService", "RouteTask")]
        public EntityCollection<RouteTask> RouteTaskChildren
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.RouteTaskRecurringService", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.RouteTaskRecurringService", "RouteTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Region CreateRegion(global::System.Guid id, global::System.String name)
        {
            Region region = new Region();
            region.Id = id;
            region.Name = name;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BusinessAccountId
        {
            get
            {
                return _BusinessAccountId;
            }
            set
            {
                OnBusinessAccountIdChanging(value);
                ReportPropertyChanging("BusinessAccountId");
                _BusinessAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessAccountId");
                OnBusinessAccountIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BusinessAccountId;
        partial void OnBusinessAccountIdChanging(Nullable<global::System.Guid> value);
        partial void OnBusinessAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RegionLocation", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("CoreEntities.RegionLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("CoreEntities.RegionLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRegion", "BusinessAccount")]
        public BusinessAccount BusinessAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRegion", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRegion", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> BusinessAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRegion", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRegion", "BusinessAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Repeat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repeat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Repeat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="repeatEveryTimes">Initial value of the RepeatEveryTimes property.</param>
        /// <param name="frequencyInt">Initial value of the FrequencyInt property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static Repeat CreateRepeat(global::System.Guid id, global::System.Int32 repeatEveryTimes, global::System.Int32 frequencyInt, global::System.DateTime startDate)
        {
            Repeat repeat = new Repeat();
            repeat.Id = id;
            repeat.RepeatEveryTimes = repeatEveryTimes;
            repeat.FrequencyInt = frequencyInt;
            repeat.StartDate = startDate;
            return repeat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EndAfterTimes
        {
            get
            {
                return _EndAfterTimes;
            }
            set
            {
                OnEndAfterTimesChanging(value);
                ReportPropertyChanging("EndAfterTimes");
                _EndAfterTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndAfterTimes");
                OnEndAfterTimesChanged();
            }
        }
        private Nullable<global::System.Int32> _EndAfterTimes;
        partial void OnEndAfterTimesChanging(Nullable<global::System.Int32> value);
        partial void OnEndAfterTimesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepeatEveryTimes
        {
            get
            {
                return _RepeatEveryTimes;
            }
            set
            {
                OnRepeatEveryTimesChanging(value);
                ReportPropertyChanging("RepeatEveryTimes");
                _RepeatEveryTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepeatEveryTimes");
                OnRepeatEveryTimesChanged();
            }
        }
        private global::System.Int32 _RepeatEveryTimes;
        partial void OnRepeatEveryTimesChanging(global::System.Int32 value);
        partial void OnRepeatEveryTimesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FrequencyInt
        {
            get
            {
                return _FrequencyInt;
            }
            set
            {
                OnFrequencyIntChanging(value);
                ReportPropertyChanging("FrequencyInt");
                _FrequencyInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrequencyInt");
                OnFrequencyIntChanged();
            }
        }
        private global::System.Int32 _FrequencyInt;
        partial void OnFrequencyIntChanging(global::System.Int32 value);
        partial void OnFrequencyIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FrequencyDetailInt
        {
            get
            {
                return _FrequencyDetailInt;
            }
            set
            {
                OnFrequencyDetailIntChanging(value);
                ReportPropertyChanging("FrequencyDetailInt");
                _FrequencyDetailInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrequencyDetailInt");
                OnFrequencyDetailIntChanged();
            }
        }
        private Nullable<global::System.Int32> _FrequencyDetailInt;
        partial void OnFrequencyDetailIntChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyDetailIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceRepeat", "RecurringService")]
        public RecurringService RecurringService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceRepeat", "RecurringService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceRepeat", "RecurringService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecurringService> RecurringServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceRepeat", "RecurringService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecurringService>("CoreEntities.RecurringServiceRepeat", "RecurringService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Role CreateRole(global::System.Guid id)
        {
            Role role = new Role();
            role.Id = id;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerPartyId
        {
            get
            {
                return _OwnerPartyId;
            }
            set
            {
                OnOwnerPartyIdChanging(value);
                ReportPropertyChanging("OwnerPartyId");
                _OwnerPartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerPartyId");
                OnOwnerPartyIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerPartyId;
        partial void OnOwnerPartyIdChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerPartyIdChanged();
    
        /// <summary>
        /// The Role&apos;s type. Defaults to custom.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RoleTypeInt
        {
            get
            {
                return _RoleTypeInt;
            }
            set
            {
                OnRoleTypeIntChanging(value);
                ReportPropertyChanging("RoleTypeInt");
                _RoleTypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleTypeInt");
                OnRoleTypeIntChanged();
            }
        }
        private global::System.Int16 _RoleTypeInt = 0;
        partial void OnRoleTypeIntChanging(global::System.Int16 value);
        partial void OnRoleTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RoleBlock", "Block")]
        public EntityCollection<Block> Blocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Block>("CoreEntities.RoleBlock", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Block>("CoreEntities.RoleBlock", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyRole", "Party")]
        public EntityCollection<Party> MemberParties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Party>("CoreEntities.PartyRole", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Party>("CoreEntities.PartyRole", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "PartyRole1", "Party")]
        public Party OwnerParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyRole1", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyRole1", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnerPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.PartyRole1", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.PartyRole1", "Party", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Route")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Route : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Route object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="ownerBusinessAccountId">Initial value of the OwnerBusinessAccountId property.</param>
        /// <param name="routeType">Initial value of the RouteType property.</param>
        public static Route CreateRoute(global::System.Guid id, global::System.DateTime date, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Guid ownerBusinessAccountId, global::System.String routeType)
        {
            Route route = new Route();
            route.Id = id;
            route.Date = date;
            route.StartTime = startTime;
            route.EndTime = endTime;
            route.OwnerBusinessAccountId = ownerBusinessAccountId;
            route.RouteType = routeType;
            return route;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerBusinessAccountId
        {
            get
            {
                return _OwnerBusinessAccountId;
            }
            set
            {
                OnOwnerBusinessAccountIdChanging(value);
                ReportPropertyChanging("OwnerBusinessAccountId");
                _OwnerBusinessAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerBusinessAccountId");
                OnOwnerBusinessAccountIdChanged();
            }
        }
        private global::System.Guid _OwnerBusinessAccountId;
        partial void OnOwnerBusinessAccountIdChanging(global::System.Guid value);
        partial void OnOwnerBusinessAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RouteType
        {
            get
            {
                return _RouteType;
            }
            set
            {
                OnRouteTypeChanging(value);
                ReportPropertyChanging("RouteType");
                _RouteType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RouteType");
                OnRouteTypeChanged();
            }
        }
        private global::System.String _RouteType;
        partial void OnRouteTypeChanging(global::System.String value);
        partial void OnRouteTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteVehicle", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("CoreEntities.RouteVehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("CoreEntities.RouteVehicle", "Vehicle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationRoute", "RouteDestination")]
        public EntityCollection<RouteDestination> RouteDestinations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationRoute", "RouteDestination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteDestination>("CoreEntities.RouteDestinationRoute", "RouteDestination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRoute", "BusinessAccount")]
        public BusinessAccount OwnerBusinessAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRoute", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRoute", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> OwnerBusinessAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRoute", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRoute", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteEmployee", "Employee")]
        public EntityCollection<Employee> Technicians
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("CoreEntities.RouteEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("CoreEntities.RouteEmployee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="RouteDestination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteDestination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteDestination object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="orderInRoute">Initial value of the OrderInRoute property.</param>
        /// <param name="routeId">Initial value of the RouteId property.</param>
        public static RouteDestination CreateRouteDestination(global::System.Guid id, global::System.Int32 orderInRoute, global::System.Guid routeId)
        {
            RouteDestination routeDestination = new RouteDestination();
            routeDestination.Id = id;
            routeDestination.OrderInRoute = orderInRoute;
            routeDestination.RouteId = routeId;
            return routeDestination;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderInRoute
        {
            get
            {
                return _OrderInRoute;
            }
            set
            {
                OnOrderInRouteChanging(value);
                ReportPropertyChanging("OrderInRoute");
                _OrderInRoute = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderInRoute");
                OnOrderInRouteChanged();
            }
        }
        private global::System.Int32 _OrderInRoute;
        partial void OnOrderInRouteChanging(global::System.Int32 value);
        partial void OnOrderInRouteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RouteId
        {
            get
            {
                return _RouteId;
            }
            set
            {
                OnRouteIdChanging(value);
                ReportPropertyChanging("RouteId");
                _RouteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteId");
                OnRouteIdChanged();
            }
        }
        private global::System.Guid _RouteId;
        partial void OnRouteIdChanging(global::System.Guid value);
        partial void OnRouteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteDestinationLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteDestinationLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteDestinationLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.RouteDestinationLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskRouteDestination", "RouteTask")]
        public EntityCollection<RouteTask> RouteTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.RouteTaskRouteDestination", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.RouteTaskRouteDestination", "RouteTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationRoute", "Route")]
        public Route Route
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("CoreEntities.RouteDestinationRoute", "Route").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("CoreEntities.RouteDestinationRoute", "Route").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Route> RouteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("CoreEntities.RouteDestinationRoute", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Route>("CoreEntities.RouteDestinationRoute", "Route", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteDestinationClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteDestinationClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteDestinationClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteDestinationClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.RouteDestinationClient", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="RouteTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="readOnly">Initial value of the ReadOnly property.</param>
        /// <param name="businessAccountId">Initial value of the BusinessAccountId property.</param>
        /// <param name="estimatedDuration">Initial value of the EstimatedDuration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="statusInt">Initial value of the StatusInt property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="orderInRouteDestination">Initial value of the OrderInRouteDestination property.</param>
        public static RouteTask CreateRouteTask(global::System.Guid id, global::System.Boolean readOnly, global::System.Guid businessAccountId, global::System.TimeSpan estimatedDuration, global::System.String name, global::System.Int32 statusInt, global::System.DateTime date, global::System.Int32 orderInRouteDestination)
        {
            RouteTask routeTask = new RouteTask();
            routeTask.Id = id;
            routeTask.ReadOnly = readOnly;
            routeTask.BusinessAccountId = businessAccountId;
            routeTask.EstimatedDuration = estimatedDuration;
            routeTask.Name = name;
            routeTask.StatusInt = statusInt;
            routeTask.Date = date;
            routeTask.OrderInRouteDestination = orderInRouteDestination;
            return routeTask;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RouteDestinationId
        {
            get
            {
                return _RouteDestinationId;
            }
            set
            {
                OnRouteDestinationIdChanging(value);
                ReportPropertyChanging("RouteDestinationId");
                _RouteDestinationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteDestinationId");
                OnRouteDestinationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RouteDestinationId;
        partial void OnRouteDestinationIdChanging(Nullable<global::System.Guid> value);
        partial void OnRouteDestinationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ServiceId;
        partial void OnServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReadOnly
        {
            get
            {
                return _ReadOnly;
            }
            set
            {
                OnReadOnlyChanging(value);
                ReportPropertyChanging("ReadOnly");
                _ReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadOnly");
                OnReadOnlyChanged();
            }
        }
        private global::System.Boolean _ReadOnly;
        partial void OnReadOnlyChanging(global::System.Boolean value);
        partial void OnReadOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusinessAccountId
        {
            get
            {
                return _BusinessAccountId;
            }
            set
            {
                OnBusinessAccountIdChanging(value);
                ReportPropertyChanging("BusinessAccountId");
                _BusinessAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessAccountId");
                OnBusinessAccountIdChanged();
            }
        }
        private global::System.Guid _BusinessAccountId;
        partial void OnBusinessAccountIdChanging(global::System.Guid value);
        partial void OnBusinessAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EstimatedDuration
        {
            get
            {
                return _EstimatedDuration;
            }
            set
            {
                OnEstimatedDurationChanging(value);
                ReportPropertyChanging("EstimatedDuration");
                _EstimatedDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedDuration");
                OnEstimatedDurationChanged();
            }
        }
        private global::System.TimeSpan _EstimatedDuration;
        partial void OnEstimatedDurationChanging(global::System.TimeSpan value);
        partial void OnEstimatedDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusInt
        {
            get
            {
                return _StatusInt;
            }
            set
            {
                OnStatusIntChanging(value);
                ReportPropertyChanging("StatusInt");
                _StatusInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusInt");
                OnStatusIntChanged();
            }
        }
        private global::System.Int32 _StatusInt;
        partial void OnStatusIntChanging(global::System.Int32 value);
        partial void OnStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderInRouteDestination
        {
            get
            {
                return _OrderInRouteDestination;
            }
            set
            {
                OnOrderInRouteDestinationChanging(value);
                ReportPropertyChanging("OrderInRouteDestination");
                _OrderInRouteDestination = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderInRouteDestination");
                OnOrderInRouteDestinationChanged();
            }
        }
        private global::System.Int32 _OrderInRouteDestination;
        partial void OnOrderInRouteDestinationChanging(global::System.Int32 value);
        partial void OnOrderInRouteDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecurringServiceId
        {
            get
            {
                return _RecurringServiceId;
            }
            set
            {
                OnRecurringServiceIdChanging(value);
                ReportPropertyChanging("RecurringServiceId");
                _RecurringServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurringServiceId");
                OnRecurringServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RecurringServiceId;
        partial void OnRecurringServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRecurringServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DelayedChildId
        {
            get
            {
                return _DelayedChildId;
            }
            set
            {
                OnDelayedChildIdChanging(value);
                ReportPropertyChanging("DelayedChildId");
                _DelayedChildId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DelayedChildId");
                OnDelayedChildIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DelayedChildId;
        partial void OnDelayedChildIdChanging(Nullable<global::System.Guid> value);
        partial void OnDelayedChildIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteTaskLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteTaskLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.RouteTaskLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.RouteTaskLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskRouteDestination", "RouteDestination")]
        public RouteDestination RouteDestination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteDestination>("CoreEntities.RouteTaskRouteDestination", "RouteDestination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteDestination>("CoreEntities.RouteTaskRouteDestination", "RouteDestination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteDestination> RouteDestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteDestination>("CoreEntities.RouteTaskRouteDestination", "RouteDestination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteDestination>("CoreEntities.RouteTaskRouteDestination", "RouteDestination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteTaskClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteTaskClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.RouteTaskClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.RouteTaskClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskService", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.RouteTaskService", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.RouteTaskService", "Service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.RouteTaskService", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("CoreEntities.RouteTaskService", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountRouteTask", "BusinessAccount")]
        public BusinessAccount OwnerBusinessAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRouteTask", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRouteTask", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> OwnerBusinessAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRouteTask", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountRouteTask", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskRecurringService", "RecurringService")]
        public RecurringService ParentRecurringService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RouteTaskRecurringService", "RecurringService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RouteTaskRecurringService", "RecurringService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecurringService> ParentRecurringServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RouteTaskRecurringService", "RecurringService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecurringService>("CoreEntities.RouteTaskRecurringService", "RecurringService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="SalesTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesTerm object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SalesTerm CreateSalesTerm(global::System.Guid id, global::System.String name)
        {
            SalesTerm salesTerm = new SalesTerm();
            salesTerm.Id = id;
            salesTerm.Name = name;
            return salesTerm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DueDays
        {
            get
            {
                return _DueDays;
            }
            set
            {
                OnDueDaysChanging(value);
                ReportPropertyChanging("DueDays");
                _DueDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDays");
                OnDueDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _DueDays;
        partial void OnDueDaysChanging(Nullable<global::System.Int32> value);
        partial void OnDueDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceSalesTerm", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CoreEntities.InvoiceSalesTerm", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CoreEntities.InvoiceSalesTerm", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="serviceProviderId">Initial value of the ServiceProviderId property.</param>
        /// <param name="serviceDate">Initial value of the ServiceDate property.</param>
        public static Service CreateService(global::System.Guid id, global::System.Guid clientId, global::System.Guid serviceProviderId, global::System.DateTime serviceDate)
        {
            Service service = new Service();
            service.Id = id;
            service.ClientId = clientId;
            service.ServiceProviderId = serviceProviderId;
            service.ServiceDate = serviceDate;
            return service;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceProviderId
        {
            get
            {
                return _ServiceProviderId;
            }
            set
            {
                OnServiceProviderIdChanging(value);
                ReportPropertyChanging("ServiceProviderId");
                _ServiceProviderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceProviderId");
                OnServiceProviderIdChanged();
            }
        }
        private global::System.Guid _ServiceProviderId;
        partial void OnServiceProviderIdChanging(global::System.Guid value);
        partial void OnServiceProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecurringServiceId
        {
            get
            {
                return _RecurringServiceId;
            }
            set
            {
                OnRecurringServiceIdChanging(value);
                ReportPropertyChanging("RecurringServiceId");
                _RecurringServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurringServiceId");
                OnRecurringServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RecurringServiceId;
        partial void OnRecurringServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRecurringServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServiceDate
        {
            get
            {
                return _ServiceDate;
            }
            set
            {
                OnServiceDateChanging(value);
                ReportPropertyChanging("ServiceDate");
                _ServiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceDate");
                OnServiceDateChanged();
            }
        }
        private global::System.DateTime _ServiceDate;
        partial void OnServiceDateChanging(global::System.DateTime value);
        partial void OnServiceDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ServiceClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ServiceClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ServiceClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.ServiceClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteTaskService", "RouteTask")]
        public EntityCollection<RouteTask> RouteTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteTask>("CoreEntities.RouteTaskService", "RouteTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteTask>("CoreEntities.RouteTaskService", "RouteTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "BusinessAccountService", "BusinessAccount")]
        public BusinessAccount ServiceProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountService", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountService", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> ServiceProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountService", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.BusinessAccountService", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceService", "RecurringService")]
        public RecurringService RecurringServiceParent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceService", "RecurringService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceService", "RecurringService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecurringService> RecurringServiceParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceService", "RecurringService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecurringService>("CoreEntities.RecurringServiceService", "RecurringService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceServiceTemplate", "ServiceTemplate")]
        public ServiceTemplate ServiceTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceServiceTemplate", "ServiceTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceServiceTemplate", "ServiceTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTemplate> ServiceTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceServiceTemplate", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTemplate>("CoreEntities.ServiceServiceTemplate", "ServiceTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="ServiceTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="levelInt">Initial value of the LevelInt property.</param>
        public static ServiceTemplate CreateServiceTemplate(global::System.Guid id, global::System.Int16 levelInt)
        {
            ServiceTemplate serviceTemplate = new ServiceTemplate();
            serviceTemplate.Id = id;
            serviceTemplate.LevelInt = levelInt;
            return serviceTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerServiceProviderId
        {
            get
            {
                return _OwnerServiceProviderId;
            }
            set
            {
                OnOwnerServiceProviderIdChanging(value);
                ReportPropertyChanging("OwnerServiceProviderId");
                _OwnerServiceProviderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerServiceProviderId");
                OnOwnerServiceProviderIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerServiceProviderId;
        partial void OnOwnerServiceProviderIdChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerServiceProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerClientId
        {
            get
            {
                return _OwnerClientId;
            }
            set
            {
                OnOwnerClientIdChanging(value);
                ReportPropertyChanging("OwnerClientId");
                _OwnerClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerClientId");
                OnOwnerClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerClientId;
        partial void OnOwnerClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OwnerServiceTemplateId
        {
            get
            {
                return _OwnerServiceTemplateId;
            }
            set
            {
                OnOwnerServiceTemplateIdChanging(value);
                ReportPropertyChanging("OwnerServiceTemplateId");
                _OwnerServiceTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerServiceTemplateId");
                OnOwnerServiceTemplateIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OwnerServiceTemplateId;
        partial void OnOwnerServiceTemplateIdChanging(Nullable<global::System.Guid> value);
        partial void OnOwnerServiceTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 LevelInt
        {
            get
            {
                return _LevelInt;
            }
            set
            {
                OnLevelIntChanging(value);
                ReportPropertyChanging("LevelInt");
                _LevelInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelInt");
                OnLevelIntChanged();
            }
        }
        private global::System.Int16 _LevelInt;
        partial void OnLevelIntChanging(global::System.Int16 value);
        partial void OnLevelIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateBusinessAccount", "BusinessAccount")]
        public BusinessAccount OwnerServiceProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.ServiceTemplateBusinessAccount", "BusinessAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.ServiceTemplateBusinessAccount", "BusinessAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAccount> OwnerServiceProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAccount>("CoreEntities.ServiceTemplateBusinessAccount", "BusinessAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAccount>("CoreEntities.ServiceTemplateBusinessAccount", "BusinessAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RecurringServiceServiceTemplate", "RecurringService")]
        public RecurringService OwnerRecurringService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceServiceTemplate", "RecurringService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceServiceTemplate", "RecurringService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecurringService> OwnerRecurringServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurringService>("CoreEntities.RecurringServiceServiceTemplate", "RecurringService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecurringService>("CoreEntities.RecurringServiceServiceTemplate", "RecurringService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ClientServiceTemplate", "Client")]
        public Client OwnerClient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientServiceTemplate", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientServiceTemplate", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> OwnerClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CoreEntities.ClientServiceTemplate", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CoreEntities.ClientServiceTemplate", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceServiceTemplate", "Service")]
        public Service OwnerService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.ServiceServiceTemplate", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.ServiceServiceTemplate", "Service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> OwnerServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("CoreEntities.ServiceServiceTemplate", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("CoreEntities.ServiceServiceTemplate", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateServiceTemplate", "ServiceTemplate1")]
        public EntityCollection<ServiceTemplate> ChildrenServiceTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateServiceTemplate", "ServiceTemplate")]
        public ServiceTemplate ParentServiceTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTemplate> ParentServiceTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTemplate>("CoreEntities.ServiceTemplateServiceTemplate", "ServiceTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "ServiceTemplateField", "Field")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("CoreEntities.ServiceTemplateField", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("CoreEntities.ServiceTemplateField", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "InvoiceServiceTemplate", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.InvoiceServiceTemplate", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.InvoiceServiceTemplate", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CoreEntities.InvoiceServiceTemplate", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("CoreEntities.InvoiceServiceTemplate", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="ServiceTemplateWithVendorId")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceTemplateWithVendorId : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceTemplateWithVendorId object.
        /// </summary>
        /// <param name="serviceTemplateId">Initial value of the ServiceTemplateId property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        public static ServiceTemplateWithVendorId CreateServiceTemplateWithVendorId(global::System.Guid serviceTemplateId, global::System.Guid vendorId)
        {
            ServiceTemplateWithVendorId serviceTemplateWithVendorId = new ServiceTemplateWithVendorId();
            serviceTemplateWithVendorId.ServiceTemplateId = serviceTemplateId;
            serviceTemplateWithVendorId.VendorId = vendorId;
            return serviceTemplateWithVendorId;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceTemplateId
        {
            get
            {
                return _ServiceTemplateId;
            }
            set
            {
                if (_ServiceTemplateId != value)
                {
                    OnServiceTemplateIdChanging(value);
                    ReportPropertyChanging("ServiceTemplateId");
                    _ServiceTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceTemplateId");
                    OnServiceTemplateIdChanged();
                }
            }
        }
        private global::System.Guid _ServiceTemplateId;
        partial void OnServiceTemplateIdChanging(global::System.Guid value);
        partial void OnServiceTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                if (_VendorId != value)
                {
                    OnVendorIdChanging(value);
                    ReportPropertyChanging("VendorId");
                    _VendorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VendorId");
                    OnVendorIdChanged();
                }
            }
        }
        private global::System.Guid _VendorId;
        partial void OnVendorIdChanging(global::System.Guid value);
        partial void OnVendorIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="SubLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static SubLocation CreateSubLocation(global::System.Guid id, global::System.String name, global::System.Int32 number)
        {
            SubLocation subLocation = new SubLocation();
            subLocation.Id = id;
            subLocation.Name = name;
            subLocation.Number = number;
            return subLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "LocationSubLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationSubLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationSubLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("CoreEntities.LocationSubLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("CoreEntities.LocationSubLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="TextBoxField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextBoxField : Field
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextBoxField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="isMultiline">Initial value of the IsMultiline property.</param>
        public static TextBoxField CreateTextBoxField(global::System.Guid id, global::System.String name, global::System.String group, global::System.Boolean required, global::System.Boolean isMultiline)
        {
            TextBoxField textBoxField = new TextBoxField();
            textBoxField.Id = id;
            textBoxField.Name = name;
            textBoxField.Group = group;
            textBoxField.Required = required;
            textBoxField.IsMultiline = isMultiline;
            return textBoxField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMultiline
        {
            get
            {
                return _IsMultiline;
            }
            set
            {
                OnIsMultilineChanging(value);
                ReportPropertyChanging("IsMultiline");
                _IsMultiline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMultiline");
                OnIsMultilineChanged();
            }
        }
        private global::System.Boolean _IsMultiline;
        partial void OnIsMultilineChanging(global::System.Boolean value);
        partial void OnIsMultilineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : Person
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static UserAccount CreateUserAccount(global::System.Guid id, global::System.String emailAddress, global::System.DateTime creationDate)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.Id = id;
            userAccount.EmailAddress = emailAddress;
            userAccount.CreationDate = creationDate;
            return userAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivity
        {
            get
            {
                return _LastActivity;
            }
            set
            {
                OnLastActivityChanging(value);
                ReportPropertyChanging("LastActivity");
                _LastActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivity");
                OnLastActivityChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivity;
        partial void OnLastActivityChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "UserAccountUserAccountLogEntry", "UserAccountLogEntry")]
        public EntityCollection<UserAccountLogEntry> UserAccountLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccountLogEntry>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccountLogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccountLogEntry>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccountLogEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "EmployeeUserAccount", "Employee")]
        public EntityCollection<Employee> LinkedEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("CoreEntities.EmployeeUserAccount", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("CoreEntities.EmployeeUserAccount", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="UserAccountLogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountLogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountLogEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        public static UserAccountLogEntry CreateUserAccountLogEntry(global::System.Guid id, global::System.DateTime timeStamp, global::System.Guid userAccountId)
        {
            UserAccountLogEntry userAccountLogEntry = new UserAccountLogEntry();
            userAccountLogEntry.Id = id;
            userAccountLogEntry.TimeStamp = timeStamp;
            userAccountLogEntry.UserAccountId = userAccountId;
            return userAccountLogEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeId;
        partial void OnTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                OnUserAccountIdChanging(value);
                ReportPropertyChanging("UserAccountId");
                _UserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountId");
                OnUserAccountIdChanged();
            }
        }
        private global::System.Guid _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Guid value);
        partial void OnUserAccountIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "UserAccountUserAccountLogEntry", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("CoreEntities.UserAccountUserAccountLogEntry", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerPartyId">Initial value of the OwnerPartyId property.</param>
        public static Vehicle CreateVehicle(global::System.Guid id, global::System.Guid ownerPartyId)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.Id = id;
            vehicle.OwnerPartyId = ownerPartyId;
            return vehicle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.String _VehicleId;
        partial void OnVehicleIdChanging(global::System.String value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Int32> value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicensePlate
        {
            get
            {
                return _LicensePlate;
            }
            set
            {
                OnLicensePlateChanging(value);
                ReportPropertyChanging("LicensePlate");
                _LicensePlate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicensePlate");
                OnLicensePlateChanged();
            }
        }
        private global::System.String _LicensePlate;
        partial void OnLicensePlateChanging(global::System.String value);
        partial void OnLicensePlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VIN
        {
            get
            {
                return _VIN;
            }
            set
            {
                OnVINChanging(value);
                ReportPropertyChanging("VIN");
                _VIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VIN");
                OnVINChanged();
            }
        }
        private global::System.String _VIN;
        partial void OnVINChanging(global::System.String value);
        partial void OnVINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastCompassDirection
        {
            get
            {
                return _LastCompassDirection;
            }
            set
            {
                OnLastCompassDirectionChanging(value);
                ReportPropertyChanging("LastCompassDirection");
                _LastCompassDirection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCompassDirection");
                OnLastCompassDirectionChanged();
            }
        }
        private Nullable<global::System.Int32> _LastCompassDirection;
        partial void OnLastCompassDirectionChanging(Nullable<global::System.Int32> value);
        partial void OnLastCompassDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLongitude
        {
            get
            {
                return _LastLongitude;
            }
            set
            {
                OnLastLongitudeChanging(value);
                ReportPropertyChanging("LastLongitude");
                _LastLongitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLongitude");
                OnLastLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _LastLongitude;
        partial void OnLastLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLastLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastLatitude
        {
            get
            {
                return _LastLatitude;
            }
            set
            {
                OnLastLatitudeChanging(value);
                ReportPropertyChanging("LastLatitude");
                _LastLatitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLatitude");
                OnLastLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _LastLatitude;
        partial void OnLastLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLastLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastTimeStamp
        {
            get
            {
                return _LastTimeStamp;
            }
            set
            {
                OnLastTimeStampChanging(value);
                ReportPropertyChanging("LastTimeStamp");
                _LastTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTimeStamp");
                OnLastTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastTimeStamp;
        partial void OnLastTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastSpeed
        {
            get
            {
                return _LastSpeed;
            }
            set
            {
                OnLastSpeedChanging(value);
                ReportPropertyChanging("LastSpeed");
                _LastSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSpeed");
                OnLastSpeedChanged();
            }
        }
        private Nullable<global::System.Double> _LastSpeed;
        partial void OnLastSpeedChanging(Nullable<global::System.Double> value);
        partial void OnLastSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastSource
        {
            get
            {
                return _LastSource;
            }
            set
            {
                OnLastSourceChanging(value);
                ReportPropertyChanging("LastSource");
                _LastSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastSource");
                OnLastSourceChanged();
            }
        }
        private global::System.String _LastSource;
        partial void OnLastSourceChanging(global::System.String value);
        partial void OnLastSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerPartyId
        {
            get
            {
                return _OwnerPartyId;
            }
            set
            {
                OnOwnerPartyIdChanging(value);
                ReportPropertyChanging("OwnerPartyId");
                _OwnerPartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerPartyId");
                OnOwnerPartyIdChanged();
            }
        }
        private global::System.Guid _OwnerPartyId;
        partial void OnOwnerPartyIdChanging(global::System.Guid value);
        partial void OnOwnerPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPushToAzureTimeStamp
        {
            get
            {
                return _LastPushToAzureTimeStamp;
            }
            set
            {
                OnLastPushToAzureTimeStampChanging(value);
                ReportPropertyChanging("LastPushToAzureTimeStamp");
                _LastPushToAzureTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPushToAzureTimeStamp");
                OnLastPushToAzureTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPushToAzureTimeStamp;
        partial void OnLastPushToAzureTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPushToAzureTimeStampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleMaintenanceLogEntryVehicle", "VehicleMaintenanceLogEntry")]
        public EntityCollection<VehicleMaintenanceLogEntry> VehicleMaintenanceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "VehicleMaintenanceLogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "VehicleMaintenanceLogEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "RouteVehicle", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("CoreEntities.RouteVehicle", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("CoreEntities.RouteVehicle", "Route", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleParty", "Party")]
        public Party OwnerParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.VehicleParty", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.VehicleParty", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> OwnerPartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("CoreEntities.VehicleParty", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("CoreEntities.VehicleParty", "Party", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="VehicleMaintenanceLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleMaintenanceLineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleMaintenanceLineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vehicleMaintenanceLogEntryId">Initial value of the VehicleMaintenanceLogEntryId property.</param>
        public static VehicleMaintenanceLineItem CreateVehicleMaintenanceLineItem(global::System.Guid id, global::System.Guid vehicleMaintenanceLogEntryId)
        {
            VehicleMaintenanceLineItem vehicleMaintenanceLineItem = new VehicleMaintenanceLineItem();
            vehicleMaintenanceLineItem.Id = id;
            vehicleMaintenanceLineItem.VehicleMaintenanceLogEntryId = vehicleMaintenanceLogEntryId;
            return vehicleMaintenanceLineItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VehicleMaintenanceLogEntryId
        {
            get
            {
                return _VehicleMaintenanceLogEntryId;
            }
            set
            {
                OnVehicleMaintenanceLogEntryIdChanging(value);
                ReportPropertyChanging("VehicleMaintenanceLogEntryId");
                _VehicleMaintenanceLogEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleMaintenanceLogEntryId");
                OnVehicleMaintenanceLogEntryIdChanged();
            }
        }
        private global::System.Guid _VehicleMaintenanceLogEntryId;
        partial void OnVehicleMaintenanceLogEntryIdChanging(global::System.Guid value);
        partial void OnVehicleMaintenanceLogEntryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry")]
        public VehicleMaintenanceLogEntry VehicleMaintenanceLogEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleMaintenanceLogEntry> VehicleMaintenanceLogEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleMaintenanceLogEntry>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "VehicleMaintenanceLogEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CoreEntities", Name="VehicleMaintenanceLogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleMaintenanceLogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleMaintenanceLogEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static VehicleMaintenanceLogEntry CreateVehicleMaintenanceLogEntry(global::System.Guid id, global::System.Guid vehicleId)
        {
            VehicleMaintenanceLogEntry vehicleMaintenanceLogEntry = new VehicleMaintenanceLogEntry();
            vehicleMaintenanceLogEntry.Id = id;
            vehicleMaintenanceLogEntry.VehicleId = vehicleId;
            return vehicleMaintenanceLogEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private Nullable<global::System.Int32> _Mileage;
        partial void OnMileageChanging(Nullable<global::System.Int32> value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServicedBy
        {
            get
            {
                return _ServicedBy;
            }
            set
            {
                OnServicedByChanging(value);
                ReportPropertyChanging("ServicedBy");
                _ServicedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServicedBy");
                OnServicedByChanged();
            }
        }
        private global::System.String _ServicedBy;
        partial void OnServicedByChanging(global::System.String value);
        partial void OnServicedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.Guid _VehicleId;
        partial void OnVehicleIdChanging(global::System.Guid value);
        partial void OnVehicleIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleMaintenanceLogEntryVehicle", "Vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("CoreEntities.VehicleMaintenanceLogEntryVehicle", "Vehicle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CoreEntities", "VehicleMaintenanceLogEntryLineItem", "LineItem")]
        public EntityCollection<VehicleMaintenanceLineItem> LineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VehicleMaintenanceLineItem>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "LineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VehicleMaintenanceLineItem>("CoreEntities.VehicleMaintenanceLogEntryLineItem", "LineItem", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CoreEntities", Name="ResourceWithLastPoint")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ResourceWithLastPoint : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceWithLastPoint object.
        /// </summary>
        /// <param name="lastTimeStamp">Initial value of the LastTimeStamp property.</param>
        public static ResourceWithLastPoint CreateResourceWithLastPoint(global::System.DateTime lastTimeStamp)
        {
            ResourceWithLastPoint resourceWithLastPoint = new ResourceWithLastPoint();
            resourceWithLastPoint.LastTimeStamp = lastTimeStamp;
            return resourceWithLastPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private Nullable<global::System.Guid> _VehicleId;
        partial void OnVehicleIdChanging(Nullable<global::System.Guid> value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompassHeading
        {
            get
            {
                return _CompassHeading;
            }
            set
            {
                OnCompassHeadingChanging(value);
                ReportPropertyChanging("CompassHeading");
                _CompassHeading = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompassHeading");
                OnCompassHeadingChanged();
            }
        }
        private Nullable<global::System.Int32> _CompassHeading;
        partial void OnCompassHeadingChanging(Nullable<global::System.Int32> value);
        partial void OnCompassHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastTimeStamp
        {
            get
            {
                return _LastTimeStamp;
            }
            set
            {
                OnLastTimeStampChanging(value);
                ReportPropertyChanging("LastTimeStamp");
                _LastTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTimeStamp");
                OnLastTimeStampChanged();
            }
        }
        private global::System.DateTime _LastTimeStamp;
        partial void OnLastTimeStampChanging(global::System.DateTime value);
        partial void OnLastTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private Nullable<global::System.Decimal> _Speed;
        partial void OnSpeedChanging(Nullable<global::System.Decimal> value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackSource
        {
            get
            {
                return _TrackSource;
            }
            set
            {
                OnTrackSourceChanging(value);
                ReportPropertyChanging("TrackSource");
                _TrackSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackSource");
                OnTrackSourceChanged();
            }
        }
        private global::System.String _TrackSource;
        partial void OnTrackSourceChanging(global::System.String value);
        partial void OnTrackSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RouteId
        {
            get
            {
                return _RouteId;
            }
            set
            {
                OnRouteIdChanging(value);
                ReportPropertyChanging("RouteId");
                _RouteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteId");
                OnRouteIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RouteId;
        partial void OnRouteIdChanging(Nullable<global::System.Guid> value);
        partial void OnRouteIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CoreEntities", Name="ServiceHolder")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiceHolder : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceHolder object.
        /// </summary>
        /// <param name="occurDate">Initial value of the OccurDate property.</param>
        public static ServiceHolder CreateServiceHolder(global::System.DateTime occurDate)
        {
            ServiceHolder serviceHolder = new ServiceHolder();
            serviceHolder.OccurDate = occurDate;
            return serviceHolder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecurringServiceId
        {
            get
            {
                return _RecurringServiceId;
            }
            set
            {
                OnRecurringServiceIdChanging(value);
                ReportPropertyChanging("RecurringServiceId");
                _RecurringServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurringServiceId");
                OnRecurringServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RecurringServiceId;
        partial void OnRecurringServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRecurringServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ServiceId;
        partial void OnServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OccurDate
        {
            get
            {
                return _OccurDate;
            }
            set
            {
                OnOccurDateChanging(value);
                ReportPropertyChanging("OccurDate");
                _OccurDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccurDate");
                OnOccurDateChanged();
            }
        }
        private global::System.DateTime _OccurDate;
        partial void OnOccurDateChanging(global::System.DateTime value);
        partial void OnOccurDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CoreEntities", Name="TaskHolder")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TaskHolder : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskHolder object.
        /// </summary>
        /// <param name="occurDate">Initial value of the OccurDate property.</param>
        /// <param name="statusInt">Initial value of the StatusInt property.</param>
        public static TaskHolder CreateTaskHolder(global::System.DateTime occurDate, global::System.Int32 statusInt)
        {
            TaskHolder taskHolder = new TaskHolder();
            taskHolder.OccurDate = occurDate;
            taskHolder.StatusInt = statusInt;
            return taskHolder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecurringServiceId
        {
            get
            {
                return _RecurringServiceId;
            }
            set
            {
                OnRecurringServiceIdChanging(value);
                ReportPropertyChanging("RecurringServiceId");
                _RecurringServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurringServiceId");
                OnRecurringServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RecurringServiceId;
        partial void OnRecurringServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRecurringServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ServiceId;
        partial void OnServiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine
        {
            get
            {
                return _AddressLine;
            }
            set
            {
                OnAddressLineChanging(value);
                ReportPropertyChanging("AddressLine");
                _AddressLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine");
                OnAddressLineChanged();
            }
        }
        private global::System.String _AddressLine;
        partial void OnAddressLineChanging(global::System.String value);
        partial void OnAddressLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OccurDate
        {
            get
            {
                return _OccurDate;
            }
            set
            {
                OnOccurDateChanging(value);
                ReportPropertyChanging("OccurDate");
                _OccurDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccurDate");
                OnOccurDateChanged();
            }
        }
        private global::System.DateTime _OccurDate;
        partial void OnOccurDateChanging(global::System.DateTime value);
        partial void OnOccurDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusInt
        {
            get
            {
                return _StatusInt;
            }
            set
            {
                OnStatusIntChanging(value);
                ReportPropertyChanging("StatusInt");
                _StatusInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusInt");
                OnStatusIntChanged();
            }
        }
        private global::System.Int32 _StatusInt;
        partial void OnStatusIntChanging(global::System.Int32 value);
        partial void OnStatusIntChanged();

        #endregion

    }

    #endregion

    
}
