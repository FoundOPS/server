1. ON DELETE SET NULL ON UPDATE NO ACTION; //This will remove RouteTasks from a destination when it is deleted

ALTER TABLE [dbo].[RouteTasks]
ADD CONSTRAINT [FK_RouteTaskRouteDestination]
    FOREIGN KEY ([RouteDestinationId])
    REFERENCES [dbo].[RouteDestinations]
        ([Id])
-----> ON DELETE NO ACTION ON UPDATE NO ACTION;  

2. Replace all NONCLUSTERED w CLUSTERED (4 of them)

3. Create PartiesWithName view

Delete
IF OBJECT_ID(N'[CoreEntitiesStoreContainer].[PartiesWithName]', 'U') IS NOT NULL
    DROP TABLE [CoreEntitiesStoreContainer].[PartiesWithName];
GO

and Delete
-- Creating table 'PartiesWithNames'
CREATE TABLE [dbo].[PartiesWithNames] (
    [Id] uniqueidentifier  NOT NULL,
    [ChildName] nvarchar(max)  NULL
);
GO

and Delete
-- Creating primary key on [Id] in table 'PartiesWithNames'
ALTER TABLE [dbo].[PartiesWithNames]
ADD CONSTRAINT [PK_PartiesWithNames]
    PRIMARY KEY CLUSTERED ([Id] ASC);
GO

and Add
CREATE VIEW [dbo].[PartiesWithName]
AS
SELECT        dbo.Parties.Id, ISNULL(dbo.Parties_Person.LastName, '') + ' ' +  ISNULL(dbo.Parties_Person.FirstName, '') +' ' +  ISNULL(dbo.Parties_Person.MiddleInitial, '')  AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Person ON dbo.Parties.Id = dbo.Parties_Person.Id
UNION
SELECT        dbo.Parties.Id, dbo.Parties_Business.Name AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Business ON dbo.Parties.Id = dbo.Parties_Business.Id

GO