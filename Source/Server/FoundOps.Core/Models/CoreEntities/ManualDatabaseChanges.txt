1. ON DELETE SET NULL ON UPDATE NO ACTION; //This will remove RouteTasks from a destination when it is deleted

ALTER TABLE [dbo].[RouteTasks]
ADD CONSTRAINT [FK_RouteTaskRouteDestination]
    FOREIGN KEY ([RouteDestinationId])
    REFERENCES [dbo].[RouteDestinations]
        ([Id])
-----> ON DELETE NO ACTION ON UPDATE NO ACTION;  

2. Replace all NONCLUSTERED w CLUSTERED (4 of them)

3. Create PartiesWithName view

Delete
IF OBJECT_ID(N'[CoreEntitiesStoreContainer].[PartiesWithName]', 'U') IS NOT NULL
    DROP TABLE [CoreEntitiesStoreContainer].[PartiesWithName];
GO

and Delete
-- Creating table 'PartiesWithNames'
CREATE TABLE [dbo].[PartiesWithNames] (
    [Id] uniqueidentifier  NOT NULL,
    [ChildName] nvarchar(max)  NULL
);
GO

and Delete
-- Creating primary key on [Id] in table 'PartiesWithNames'
ALTER TABLE [dbo].[PartiesWithNames]
ADD CONSTRAINT [PK_PartiesWithNames]
    PRIMARY KEY CLUSTERED ([Id] ASC);
GO

and Add
CREATE VIEW [dbo].[PartiesWithName]
AS
SELECT        dbo.Parties.Id, ISNULL(dbo.Parties_Person.LastName, '') + ' ' +  ISNULL(dbo.Parties_Person.FirstName, '') +' ' +  ISNULL(dbo.Parties_Person.MiddleInitial, '')  AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Person ON dbo.Parties.Id = dbo.Parties_Person.Id
UNION
SELECT        dbo.Parties.Id, dbo.Parties_Business.Name AS 'ChildName'
FROM            dbo.Parties INNER JOIN
                         dbo.Parties_Business ON dbo.Parties.Id = dbo.Parties_Business.Id

GO

4. After generating database from model need to fix the PartiesWithNames view in the CoreEntities.edmx

Replace  <EntitySet Name="PartiesWithNames" EntityType="CoreEntities.Store.PartiesWithNames" store:Type="Tables" Schema="dbo" />
with
 <EntitySet Name="PartiesWithName" EntityType="CoreEntities.Store.PartiesWithName" store:Type="Views" store:Schema="dbo" store:Name="PartiesWithName">
            <DefiningQuery>SELECT 
      [PartiesWithName].[Id] AS [Id], 
      [PartiesWithName].[ChildName] AS [ChildName]
      FROM [dbo].[PartiesWithName] AS [PartiesWithName]</DefiningQuery>
 </EntitySet>

Replace
<EntitySetMapping Name="PartiesWithNames">
   <EntityTypeMapping TypeName="IsTypeOf(CoreEntities.PartiesWithName)">
      <MappingFragment StoreEntitySet="PartiesWithNames">
         <ScalarProperty Name="Id" ColumnName="Id" />
         <ScalarProperty Name="ChildName" ColumnName="ChildName" />
      </MappingFragment>
   </EntityTypeMapping>
</EntitySetMapping>
with
<EntitySetMapping Name="PartiesWithNames">
   <EntityTypeMapping TypeName="CoreEntities.PartiesWithName">
      <MappingFragment StoreEntitySet="PartiesWithName">
         <ScalarProperty Name="ChildName" ColumnName="ChildName" />
         <ScalarProperty Name="Id" ColumnName="Id" />
      </MappingFragment>
   </EntityTypeMapping>
</EntitySetMapping>