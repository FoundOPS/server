<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ServiceModel.DomainServices.Tools.TextTemplate</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeBuilderException">
            <summary>
            An exception that provides contextual information for exceptions
            that occur during attribute building.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.AttributeBuilderException.#ctor(System.Exception,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeBuilderException"/> class.
            </summary>
            <param name="innerException">
            The <see cref="T:System.Exception"/> that was thrown during the attribute building process.
            </param>
            <param name="attributeType">The type of attribute that caused the exception.</param>
            <param name="attributePropertyName">
            The name of the property on the <see cref="T:System.Attribute"/> that caused the exception.
            </param>
            <remarks>
            The message for this exception represents the code comment error as well as the
            prefix for the build warning.
            <para>
            The message of the <see cref="P:System.Exception.InnerException"/> is used for the exception
            details.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration">
            <summary>
            Type used to represent an <see cref="T:System.Attribute"/> declaration and its requirements.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.#ctor(System.Type)">
            <summary>
            Constructor accepting the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
            <param name="attributeType">The <see cref="T:System.Attribute"/> <see cref="T:System.Type"/> to represent. Cannot be null.</param>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.HasErrors">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> has errors.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.AttributeType">
            <summary>
            Gets the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.ConstructorArguments">
            <summary>
            Gets a collection of constructor arguments.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.Errors">
            <summary>
            Gets a collection of error messages.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.NamedParameters">
            <summary>
            Gets a dictionary of named parameters.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.RequiredTypes">
            <summary>
            Gets a collection of required shared types.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.RequiredMethods">
            <summary>
            Gets a collection of required shared methods.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration.RequiredProperties">
            <summary>
            Gets a collection of required shared properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.CustomValidationCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder to deal with CustomValidationAttribute.
            </summary>
            <remarks>This class exists primarily to do type-checking during code generation.  A [CustomValidation]
            attribute is flagged as an error if the named type and validation methods cannot be located. If the 
            validator type is visible to the client the attribute will be propagated.
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.ValidationCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder for ValidationAttributes containing globalized resources.
            </summary>
            <remarks>
            This subclass of StandardCustomAttributeBuilder is aware of the subset of attributes
            that contain globalized resources and validates that they are correct prior to generating code
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder.
            </summary>
            <remarks>This custom attribute builder class generates a CodeDom custom attribute declaration
            for most well-formed custom attribute types.  To be well formed, an attribute must either expose
            public setters for every public property it exposes, or it must provide a constructor whose
            parameter names match properties for which there is no public setter.
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.ICustomAttributeBuilder">
            <summary>
            Contract for codegen attribute builders.
            </summary>    
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.ICustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An <see cref="T:System.Attribute"/> instance to create a <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
            <exception cref="T:System.ArgumentException">if it cannot generate the provided <paramref name="attribute"/>.</exception>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Given the name of a property from which we fetched a property, returns the
            name of the property we should use to set the value.  A null return means
            this property should be ignored by code gen.
            </summary>
            <param name="propertyInfo">The getter property to consider.</param>
            <param name="attribute">The current attribute instance we are considering.</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.DefaultInstanceForType(System.Type)">
            <summary>
            Returns the default object instance for the given type, effectively default(T)
            </summary>
            <param name="t">The type whose default is needed</param>
            <returns>The default value for that type.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.CanValueBeAssignedToType(System.Type,System.Object)">
            <summary>
            Determines whether the given value may legally be assigned to the specified type
            </summary>
            <param name="type">The type to which it will be assigned</param>
            <param name="value">The value to test</param>
            <returns><c>true</c> if the value can legally be assigned</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.GetUnsettableProperties(System.Collections.Generic.IEnumerable{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap})">
            <summary>
            Retrieves the list of properties that have no public setter
            </summary>
            <param name="propertyMaps">A list of properties to consider</param>
            <returns>The subset of the input list containing all properties lacking a public setter</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.FindBestConstructor(System.Collections.Generic.ICollection{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            Locates the best constructor that allows all the given properties to be set.
            </summary>
            <param name="propertyMaps">The set of properties we want to set via a constructor</param>
            <param name="currentValues">The set of current values for these properties</param>
            <param name="attributeType">The type of attribute whose ctor we need to call</param>
            <returns>The list of constructor parameters, in the order they must be passed to the ctor, to invoke the best constructor.  
            Null means no constructor is available that can set them.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.ParametersAcceptAllProperties(System.Reflection.ParameterInfo[],System.Collections.Generic.ICollection{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Determines whether the given set of constuctor parameters can legally be assigned the
            given set of property values.
            </summary>
            <param name="parameters">The list of constructor parameters to consider</param>
            <param name="propertyMaps">The list of properties we would assign into these parameters</param>
            <param name="currentValues">The current values for the properties</param>
            <returns><c>true</c> if all the properties can be assigned to those parameters</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.GetPropertyValues(System.Collections.Generic.IEnumerable{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute)">
            <summary>
            Builds and returns a dictionary of all the current values for all the specified properties in a given
            object instance.
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The attribute instance to fetch the property values from</param>
            <returns>The dictionary of name-value pairs, one per property</returns>
            <exception cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeBuilderException">When a property on the attribute throws an exception</exception>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.GetDefaultPropertyValues(System.Collections.Generic.IEnumerable{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Builds and returns a dictionary of all the default values for the given properties for a given attribute type
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The current attribute instance</param>
            <param name="currentValues">The current values for the attribute instance for which we are generating code</param>
            <returns>The dictionary of name-value pairs containing default values for each property</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.GetNonDefaultProperties(System.Collections.Generic.IEnumerable{Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Retrieves the list of properties that contain values other than the defaults for an attribute
            </summary>
            <remarks>This list becomes the set of properties for which explicit code gen is required, assuming
            that if they are not set, they will retain their default values.</remarks>
            <param name="propertyMaps">The set of properties to consider</param>
            <param name="currentValues">The current values for the properties</param>
            <param name="defaultValues">The default values for the properties</param>
            <returns>The set of properties whose current values are other than their default values</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.CanPropertyBeSetDeclaratively(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given property could legally be set via an
            Attribute declaration, where only constants or arrays of constants are allowed
            </summary>
            <param name="property">The property to test</param>
            <returns><c>true</c> means the property could be set via an Attribute declaration</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.BuildPropertyMaps(System.Attribute)">
            <summary>
            Constructs a collection of PropertyMaps.  A PropertyMap allows a "getter" property to
            redirect to a different "setter" property.  Properties that should not be treated by
            code gen don't appear in the map.  The getter/setter mapping is done because it is
            a relatively common scenario to have calculated properties that either cannot be set
            directly or should be effectively set through a different property.
            </summary>
            <param name="attribute">The current attribute instance</param>
            <returns>A list of <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap">
            <summary>
            Helper class used internally.  A PropertyMap is simply a tuple that relates a property getter with its appropriate setter.
            Normally these are identical, but a surprising number of attributes expose calculated getters that are actually influenced
            by some other setter.  By keeping these concepts separate, it is easier to allow derived classes to map computed getters
            to a better property.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.#ctor(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> class.
            </summary>
            <param name="getter">The property's getter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <param name="setter">The property's setter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Getter">
            <summary>
            Gets the property's getter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Setter">
            <summary>
            Gets the property's setter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.ValidationCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.ValidationCustomAttributeBuilder.RegisterSharedResources(System.ComponentModel.DataAnnotations.ValidationAttribute,Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Registers any resource type used by the given <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> that must be shared and 
            have a named resource property available.
            </summary>
            <param name="validationAttribute">The <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> instance to check.</param>
            <param name="attributeDeclaration">The <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> used to describe <paramref name="validationAttribute"/>.</param>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.DataMemberAttributeBuilder">
            <summary>
            DataMemberAttribute custom attribute builder.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.DataMemberAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove Order from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> type, this method returns null if the property 
            name is "Order".</remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.DisplayCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Display] attribute
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.DomainIdentifierAttributeBuilder">
            <summary>
            DomainIdentifierAttribute custom attribute builder.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.DomainIdentifierAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove CodeProcessor from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:System.ServiceModel.DomainServices.DomainIdentifierAttribute"/> type, this method returns null if the property 
            name is "CodeProcessor".</remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.EditableAttributeBuilder">
            <summary>
            Custom attribute builder generates <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representations of
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.EditableAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Generates a <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representation of an 
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instance.
            </summary>
            <param name="attribute">The <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</param>
            <returns>A <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.AttributeDeclaration"/> representation of 
            <paramref name="attribute"/>.</returns>
            <exception cref="T:System.InvalidCastException">if <paramref name="attribute"/> is 
            not a <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</exception>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.RangeCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Range] attribute
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.UIHintCustomAttributeBuilder">
            <summary>
            Class to generate code for the [UIHint] attribute.
            </summary>
            <remarks>
            Specialization is required for the non-standard way this attribute allows a variable number
            of parameters and composes them into a dictionary of name value pairs.
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.Naming">
            <summary>
            Contains code useful for creating and validating names. 
            Pluralization support, unique name creating, valid identifiers, etc.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.Naming.MakePluralName(System.String)">
            <summary>
            Changes the string in name to be plural. In place string edit.
            </summary>
            <param name="name">The name to pluralize.</param>
            <returns>A reference to name for convenience.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.SharedTypes.VirtualType">
            <summary>
            Subclass of <see cref="T:System.Type"/> used to create hypothetical types
            that may not yet exist.
            </summary>
            <remarks>
            Instances of this class are not fully-fledged types but are
            intended simply to let us describe a Type using conventions
            already known by Reflection clients.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.SharedTypes.VirtualType.#ctor(System.String,System.String,System.Reflection.Assembly,System.Type)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The simple type name for this virtual type.</param>
            <param name="namespaceName">The namespace for this virtual type</param>
            <param name="assembly">The assembly to which this virtual type belongs.</param>
            <param name="baseType">The base type to use for this virtual type.  It may be null.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.SharedTypes.VirtualType.#ctor(System.Type)">
            <summary>
            Creates a new instance using the given <paramref name="sourceType"/>
            </summary>
            <param name="sourceType">The type to use as the source to copy.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.SharedTypes.VirtualType.AddDeclaredMember(System.Reflection.MemberInfo)">
            <summary>
            Adds the given member into the internal list of declared
            members.
            </summary>
            <param name="memberInfo">The member to consider declared by this type</param>
        </member>
        <member name="M:System.ServiceModel.DomainServices.BinaryTypeUtility.IsTypeBinary(System.Type)">
            <summary>
            Returns whether the <paramref name="type"/> <c>is System.Data.Linq.Binary</c>.
            </summary>
            <remarks>
            We test Binary by Type Name so our client framework assembly can avoid taking an
            assembly reference to <c>System.Data.Linq</c>. If a type is determined to be
            binary, that type will be used to check reference equality for all subsequent
            invocations.
            </remarks>
            <param name="type">The type to check</param>
            <returns>Whether the <paramref name="type"/> is binary</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.BinaryTypeUtility.GetByteArrayFromBinary(System.Object)">
            <summary>
            Returns the <paramref name="binary"/> converted to a <c>byte[]</c>.
            </summary>
            <param name="binary">The binary to convert</param>
            <returns>The byte[] form of the binary</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.BinaryTypeUtility.GetBinaryFromByteArray(System.Byte[])">
            <summary>
            Returns the <paramref name="bytes"/> converted to a <c>System.Data.Linq.Binary</c>.
            </summary>
            <param name="bytes">The bytes to convert</param>
            <returns>The binary form of the bytes</returns>
        </member>
        <member name="F:System.ServiceModel.DomainServices.TypeUtility.systemAssemblyPublicKeyTokens">
            <summary>
            List of public key tokens used for System assemblies
            </summary>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsNullableType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a nullable type</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.GetNonNullableType(System.Type)">
            <summary>
            If the given type is <see cref="T:System.Nullable"/>, returns the element type,
            otherwise simply returns the input type
            </summary>
            <param name="type">The type to test that may or may not be Nullable</param>
            <returns>Either the input type or, if it was Nullable, its element type</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsPredefinedType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a primitive type or one
            of our standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, or one of our standard generic types whose generic
            argument is primitive or simple (e.g. Nullable, IEnumerable, IDictionary&lt;TKey,TValue&gt;).
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsPredefinedListType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is <see cref="T:System.Collections.Generic.IEnumerable`1"/> or an <see cref="T:System.Collections.IList"/> type, 
            and is either an interface, an array, or has a default constructor.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsSupportedCollectionType(System.Type)">
            <summary>
            Returns <c>true</c> if specified type is a supported collection Type. This method only checks the collection
            Type itself, not whether the element Type is supported.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a suppored collection Type.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsPredefinedDictionaryType(System.Type)">
            <summary>
            Returns <c>true</c> if <paramref name="type"/> implements <see cref="T:System.Collections.Generic.IDictionary`2"/> and
            its generic type arguments are acceptable predefined simple types.
            </summary>
            <param name="type">The type to test.</param>
            <returns><c>true</c> if the type is a <see cref="T:System.Collections.Generic.IDictionary`2"/> with supported generic type arguments.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsPredefinedSimpleType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is either primitive or one of our
            standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, etc
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsComplexType(System.Type)">
            <summary>
            This method determines if the specified Type should be treated as a
            complex type by the framework.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the type is a complex type, false otherwise.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsComplexTypeCollection(System.Type)">
            <summary>
            Determines whether the specified type is one of the supported collection types
            with a complex element type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the type is a supported complex collection type, false otherwise.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsSupportedComplexType(System.Type)">
            <summary>
            Determines whether the specified type is a complex type or a collection of
            complex types.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the specified type is a complex type or a collection of
            complex types, false otherwise.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.GetElementType(System.Type)">
            <summary>
            Returns the underlying element type starting from a given type.
            </summary>
            <remarks>
            Simple types simply return the input type.
            If the given type is an array, this method returns the array's
            element type.
            If the type is a generic type of <see cref="T:System.Collections.IEnumerable"/>, 
            or <see cref="T:System.Nullable"/>, this method returns the element
            type of the generic parameter
            </remarks>
            <param name="type"><see cref="T:System.Type"/> to examine.</param>
            <returns>The underlying element type starting from the given type</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.DefinitionIsAssignableFrom(System.Type,System.Type)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.DefinitionIsAssignableFrom(System.Type,System.Type,System.Type@)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <param name="genericType">The generic base class or interface implemented by the derived
            type that can be made from the <paramref name="genericTypeDefinition"/>. This value is
            null when the method return false.
            </param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsSystemAssembly(System.Reflection.Assembly)">
            <summary>
            Performs a check against an assembly to determine if it's a known
            System assembly.
            </summary>
            <param name="assembly">The assembly to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsSystemAssembly(System.Reflection.AssemblyName)">
            <summary>
            Performs a check against an <see cref="T:System.Reflection.AssemblyName"/> to determine if it's a known
            System assembly.
            </summary>
            <param name="assemblyName">The assembly name to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.TypeUtility.IsSystemAssembly(System.String)">
            <summary>
            Performs a check against an assembly's full name to determine if it's a known
            System assembly.
            </summary>
            <remarks>
            We can't use Assembly.GetName().GetPublicKeyToken() since that requires FileIOPermissions.
            </remarks>
            <param name="assemblyFullName">The <see cref="P:System.Reflection.AssemblyName.FullName"/> to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.ExceptionHandlingUtility.IsFatal(System.Exception)">
            <summary>
            Determines if an <see cref="T:System.Exception"/> is fatal and therefore should not be handled.
            </summary>
            <example>
            try
            {
                // Code that may throw
            }
            catch (Exception ex)
            {
                if (ex.IsFatal())
                {
                    throw;
                }
                
                // Handle exception
            }
            </example>
            <param name="exception">The exception to check</param>
            <returns><c>true</c> if the exception is fatal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.SerializationUtility.GetClientType(System.Type)">
            <summary>
            Gets the type that should be used on the client for the specified type.
            </summary>
            <param name="t">The type to get the client type for.</param>
            <returns>The client type.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.SerializationUtility.GetClientValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the client.
            </summary>
            <remarks>
            This method should be kept in sync with DataContractSurrogateGenerator.EmitToClientConversion.
            </remarks>
            <param name="targetType">The type used by the client.</param>
            <param name="value">The value on the server.</param>
            <returns>A value that can be used by the client.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.SerializationUtility.GetServerValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the server.
            </summary>
            <remarks>
            This method should be kept in sync with DataContractSurrogateGenerator.EmitToServerConversion.
            </remarks>
            <param name="targetType">The type used by the server.</param>
            <param name="value">The value from the client.</param>
            <returns>A value that can be used by the server.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.SerializationUtility.IsSerializableDataMember(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if the specified property is a data member that should be serialized
            </summary>
            <param name="propertyDescriptor">The property to inspect</param>
            <returns>true if the specified property is a data member that should be serialized</returns>
        </member>
        <member name="T:System.ServiceModel.DomainServices.Server.TypeDescriptorExtensions">
            <summary>
            Extension methods for TypeDescriptors
            </summary>
        </member>
        <member name="M:System.ServiceModel.DomainServices.Server.TypeDescriptorExtensions.ExplicitAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Extension method to extract only the explicitly specified attributes from a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <remarks>
            Normal TypeDescriptor semantics are to inherit the attributes of a property's type.  This method
            exists to suppress those inherited attributes.
            </remarks>
            <param name="propertyDescriptor">The property descriptor whose attributes are needed.</param>
            <returns>A new <see cref="T:System.ComponentModel.AttributeCollection"/> stripped of any attributes from the property's type.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.Server.TypeDescriptorExtensions.Attributes(System.Type)">
            <summary>
            Extension method to extract attributes from a type taking into account the inheritance type of attributes
            </summary>
            <remarks>
            Normal TypeDescriptor semantics are to inherit the attributes of a type's base type, regardless of their 
            inheritance type.
            </remarks>
            <param name="type">The type whose attributes are needed.</param>
            <returns>A new <see cref="T:System.ComponentModel.AttributeCollection"/> stripped of any incorrectly inherited attributes from the type.</returns>
        </member>
        <member name="M:System.ServiceModel.DomainServices.Server.TypeDescriptorExtensions.ContainsAttributeType``1(System.ComponentModel.AttributeCollection)">
            <summary>
            Checks to see if an attribute collection contains any attributes of the provided type.
            </summary>
            <typeparam name="TAttribute">The attribute type to check for</typeparam>
            <param name="attributes">The attribute collection to inspect</param>
            <returns><c>True</c> if an attribute of the provided type is contained in the attribute collection.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGeneratorTextTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ComplexObjectGenerator">
            <summary>
            Proxy generator for a complex object.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DataContractProxyGenerator">
            <summary>
            Base class to generate proxy for a data contract type.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DataContractProxyGenerator.GenerateDataContractProxy">
            <summary>
            Generates proxy code in a specific language.
            </summary>
            <returns>Actual code for the proxy.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DataContractProxyGenerator.Type">
            <summary>
            Gets or sets the type for which the proxy is to be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DataContractProxyGenerator.ClientCodeGenerator">
            <summary>
            Gets or sets the ClientCodeGenerator object.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ComplexObjectGenerator.Generate(System.Type,System.ServiceModel.DomainServices.Server.DomainServiceDescription,Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator)">
            <summary>
            Generates complex object code.
            </summary>
            <param name="complexObjectType">Type of the complex object for which the proxy is to be generates.</param>
            <param name="domainServiceDescription">The DomainServiceDescription for the domain service associated with this complex type.</param>
            <param name="clientCodeGenerator">ClientCodeGenerator object for this instance.</param>
            <returns>The generated complex object code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ComplexObjectGenerator.DomainServiceDescription">
            <summary>
            Gets the DomainServiceDescription for the domain service associated with this complex type.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.AttributeGeneratorHelper.KnownBuilderTypes">
            <summary>
            Gets the dictionary mapping custom attribute types to their known custom attribute builder types
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.AttributeGeneratorHelper.KnownBuilders">
            <summary>
            Gets the dictionary mapping custom attribute types to their builder instances
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator">
            <summary>
            C# generator for complex types.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The list of attributes to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Boolean)">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The attributes to be generated.</param>
            <param name="forcePropagation">Causes the attributes to be generated even if the attribute verification fails.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateClassDeclaration">
            <summary>
            Generates the type declaration.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateConstructor">
            <summary>
            Generates the data contract type constructor.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Generates the code for a property.
            <param name="propertyDescriptor">The PropertyDescriptor for which the property is to be generated.</param>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateNotificationMethods">
            <summary>
            Generates the notification methods on the class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateDataContractProxy">
            <summary>
            Generates complex type in C#.
            </summary>
            <returns>Generated complex type code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateBody">
            <summary>
            Generates the body of the complex type.
            </summary>
            <remarks>
            The default implementation of this method invokes <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateConstructor"/>,
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateProperties"/> and <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateNotificationMethods"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.GenerateProperties">
            <summary>
            Generates the type properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpComplexObjectGenerator.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator">
            <summary>
            C# Generator for DomainService proxies.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DomainContextGenerator">
            <summary>
            Proxy generator for DomainServices.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DomainContextGenerator.Generate(System.ServiceModel.DomainServices.Server.DomainServiceDescription,Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator)">
            <summary>
            Geterates the DomainContext class.
            </summary>
            <param name="domainServiceDescription">DomainServcieDescription for the domain service for which the proxy is to be generated.</param>
            <param name="clientCodeGenerator">ClientCodeGenerator object for this instance.</param>
            <returns>The generated DomainContext class code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DomainContextGenerator.GenerateDomainContextClass">
            <summary>
            Generates the DomainContext code in a specific language.
            </summary>
            <returns>The generated code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DomainContextGenerator.DomainServiceDescription">
            <summary>
            Gets the DomainServiceDescription for the DomainService to be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.DomainContextGenerator.ClientCodeGenerator">
            <summary>
            Gets the ClientCodeGenerator object.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateClassDeclaration">
            <summary>
            Generates the DomainContext class declaration.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateConstructors">
            <summary>
            Generates the DomainContext class constructors.
            </summary>	
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateEntityContainer">
            <summary>
            Generates the EntityContriner property and the nested EntityContainer nested class.
            </summary>		
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateExtensibilityMethods">
            <summary>
            Generates the DomainContext class extensibility methods.
            </summary>	
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateCustomMethods">
            <summary>
            Generates the custom methods.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateCustomMethod(System.ServiceModel.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Generates a custom method.
            </summary>
            <param name="domainMethod">The custom method to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateEntitySets">
            <summary>
            Generates the EntitySet properties.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateEntitySet(System.Type)">
            <summary>
            Generates the EntitySet property.
            </summary>
            <param name="entityType">The type of the EntitySet to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateQueryMethods">
            <summary>
            Generates the query methods.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateQueryMethod(System.ServiceModel.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Generates a query method.
            </summary>
            <param name="domainOperationEntry">The query method to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateInvokeOperations">
            <summary>
            Generates invoke operations.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateInvokeOperation(System.ServiceModel.DomainServices.Server.DomainOperationEntry,System.Boolean)">
            <summary>
            Generates an invoke operation.
            </summary>
            <param name="domainOperationEntry">The invoke operation to be generated.</param>
            <param name="generateCallback">If set to true, causes callback to be generated on the method.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateServiceContractInterface">
            <summary>
            Generates the DomainContext class constructors.
            </summary>	
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The list of attributes to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Boolean)">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The attributes to be generated.</param>
            <param name="forcePropagation">Causes the attributes to be generated even if the attribute verification fails.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateDomainContextClass">
            <summary>
            Generates DomainContext code in C#.
            </summary>
            <returns>The generated code</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateBody">
            <summary>
            Generates DomainContext class body.
            </summary>
            <remarks>
            The default implementation of this method invokes <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateConstructors"/>,
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateEntityContainer"/>, <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateQueryMethods"/>,
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateCustomMethods"/>, <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateInvokeOperations"/>, 
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateEntitySets"/>, <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateServiceContractInterface"/> 
            and <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.GenerateExtensibilityMethods"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpDomainContextGenerator.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator">
            <summary>
            C# generator for entity types.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator">
            <summary>
            Proxy generator for an entity.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.Generate(System.Type,System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Server.DomainServiceDescription},Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator)">
            <summary>
            Generates the entity class on the client.
            </summary>
            <param name="entityType">The type of the entity to be generated</param>
            <param name="domainServiceDescriptions">The list of all the DomainServiceDescription objects.</param>
            <param name="clientCodeGenerator">The ClientCodeGenerator object for this instance.</param>
            <returns>Generated entity class code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.CanGeneratePropertyIfPolymorphic(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines whether the specified property belonging to the
            current entity is polymorphic, and if so whether it is legal to generate it.
            </summary>
            <param name="pd">The property to validate</param>
            <returns><c>true</c> if it is not polymorphic or it is legal to generate it, else <c>false</c></returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptions">
            <summary>
            Gets the list of all the DomainServiceDescription objects.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Server.DomainServiceDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate"/> class.
            </summary>
            <param name="domainServiceDescriptions">The descriptions that exposes the entity type.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.GetEntityBaseType(System.Type)">
            <summary>
            Gets the base type of the given entity type.
            </summary>
            <param name="entityType">The entity type whose base type is required.</param>
            <returns>The base type or <c>null</c> if the given
            <paramref name="entityType"/> had no visible base types.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.GetRootEntityType(System.Type)">
            <summary>
            Returns the root type for the given entity type.
            </summary>
            <remarks>
            The root type is the least derived entity type in the entity type
            hierarchy that is exposed through a <see cref="T:System.ServiceModel.DomainServices.Server.DomainService"/>.
            </remarks>
            <param name="entityType">The entity type whose root is required.</param>
            <returns>The type of the root or <c>null</c> if the given <paramref name="entityType"/>
            has no base types.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.DomainServiceDescriptions">
            <summary>
            Gets all the <see cref="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription"/> that expose this entity.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.ComplexTypes">
            <summary>
            Gets an enumerable representing the union of all complex types exposed
            by each <see cref="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.EntityTypes">
            <summary>
            Gets an enumerable representing the union of all entity types exposed
            by each <see cref="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EntityGenerator.DomainServiceDescriptionAggregate.IsShared">
            <summary>
            Returns true if the entity is shared.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateGetIdentityMethod">
            <summary>
            Generates the GetIdentity() method on the entity.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateClassDeclaration">
            <summary>
            Generates the type declaration.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateConstructor">
            <summary>
            Generates the data contract type constructor.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Generates the code for a property.
            <param name="propertyDescriptor">The PropertyDescriptor for which the property is to be generated.</param>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateNotificationMethods">
            <summary>
            Generates the notification methods on the class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The list of attributes to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Boolean)">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The attributes to be generated.</param>
            <param name="forcePropagation">Causes the attributes to be generated even if the attribute verification fails.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateDataContractProxy">
            <summary>
            Generates entity class in C#.
            </summary>
            <returns>Generated entity class code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateBody">
            <summary>
            Generates entity class body.
            </summary>
            <remarks>
            The default implementation of this method invokes <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateConstructor"/>,
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateProperties"/>, <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateExtensibilityMethods"/> and <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateCustomMethods"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateProperties">
            <summary>
            Generates entity properties.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateAssociation(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Generates association property.
            </summary>
            <param name="pd">PropertyDescriptor for the association property to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateExtensibilityMethods">
            <summary>
            Generates extensibility methods.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.GenerateCustomMethods">
            <summary>
            Generates the custom methods on the entity.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEntityGenerator.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator">
            <summary>
            C# generator for enums.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EnumGenerator">
            <summary>
            Generator for an enum.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EnumGenerator.GenerateEnums(System.Collections.Generic.HashSet{System.Type},Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator)">
            <summary>
            Generates enums on the client. It calls the GenerateEnums method to generate the actual code in a specific language.
            </summary>
            <param name="enumsToGenerate">The list of all the enums to generate.</param>
            <param name="clientCodeGenerator">The ClientCodeGenerator object for this instance.</param>
            <returns>The generated enum code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EnumGenerator.GenerateEnums">
            <summary>
            When overridden in a derived class, it generates the actual enum code in a specific language.
            </summary>
            <returns>The generated enum code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EnumGenerator.EnumsToGenerate">
            <summary>
            Gets the set of enums to generate.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.EnumGenerator.ClientCodeGenerator">
            <summary>
            Gets the ClientCodeGenerator object.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The list of attributes to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Boolean)">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The attributes to be generated.</param>
            <param name="forcePropagation">Causes the attributes to be generated even if the attribute verification fails.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.GenerateEnums">
            <summary>
            Generated enums in C#
            </summary>
            <returns>Generated enum code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.GenerateEnum(System.Type)">
            <summary>
            Generates enum in C#.
            </summary>
            <param name="enumType">Type of enum for which code is to be generated.</param>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpEnumGenerator.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator">
            <summary>
            Generator to generate DomainService proxies in C#.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator">
            <summary>
            Generator class to generate a domain service proxy using Text Templates.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.GenerateCode(Microsoft.ServiceModel.DomainServices.Tools.ICodeGenerationHost,System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Server.DomainServiceDescription},Microsoft.ServiceModel.DomainServices.Tools.ClientCodeGenerationOptions)">
            <summary>
            This method is part of the <see cref="T:Microsoft.ServiceModel.DomainServices.Tools.IDomainServiceClientCodeGenerator"/> interface. The RIA Services Code Generation process uses this method as the entry point into the code generator.
            </summary>
            <param name="codeGenerationHost">The code generation host for this instance.</param>
            <param name="domainServiceDescriptions">The list of all the DomainServiceDescription objects.</param>
            <param name="options">The code generation objects.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.GenerateCode">
            <summary>
            When overridden in the derived class generates code in specific to a language (C#, VB etc).
            </summary>
            <returns>The generated code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.EntityGenerator">
            <summary>
            Gets the generator object that generates entity classes on the client.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.ComplexObjectGenerator">
            <summary>
            Gets the generator object that generates complex types on the client.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.DomainContextGenerator">
            <summary>
            Gets the generator object that generates DomainContexts on the client.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.WebContextGenerator">
            <summary>
            Gets the generator object that generates the application wide WebContext class on the client.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.EnumGenerator">
            <summary>
            Gets the generator object that generates enums.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.Options">
            <summary>
            Gets the code generation options. 
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.CodeGenerationHost">
            <summary>
            Gets the code generation host for this code generation instance.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator.DomainServiceDescriptions">
            <summary>
            Gets the list of all DomainServiceDescriptions.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.#ctor">
            <summary>
            Default constructor for CSharpClientCodeGenerator. It initializes contained generators with their default values.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.GenerateCode">
            <summary>
            Generates proxy class code in C#.
            </summary>
            <returns>Generated C# code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.EntityGenerator">
            <summary>
            Gets the C# entity generator.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.ComplexObjectGenerator">
            <summary>
            Gets the C# complex object generator.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.DomainContextGenerator">
            <summary>
            Gets the C# DomainContext generator.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.WebContextGenerator">
            <summary>
            Gets the C# WebContext generator.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator.EnumGenerator">
            <summary>
            Gets the C# enum generator.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator">
            <summary>
            C# generator for the WebContext class.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.WebContextGenerator">
            <summary>
            Generator class that generates WebContext classes.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.WebContextGenerator.Generate(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Server.DomainServiceDescription},Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.ClientCodeGenerator)">
            <summary>
            Generates the WebContext class. It calls the GenerateWebContextClass method to generate the actual code in a specific language.
            </summary>
            <param name="domainServiceDescriptions">The list of all the DomainServiceDesctiption objects.</param>
            <param name="clientCodeGenerator">The ClientCodeGenerator object for this instance.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.WebContextGenerator.GenerateWebContextClass">
            <summary>
            When overridden in a derived class, generates WebContext class in a specific language.
            </summary>
            <returns>The generated code.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.WebContextGenerator.ClientCodeGenerator">
            <summary>
            Gets the ClientCodeGenerator object.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.WebContextGenerator.DomainServiceDescriptions">
            <summary>
            Gets the list of all the DomainServiceDescription objects.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateClassDeclaration">
            <summary>
            Generates the class declaration for the WebContext class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateExtensibilityMethods">
            <summary>
            Generates extensibility methods on the web context class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateProperties">
            <summary>
            Generates the properties on the WebContext class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The list of attributes to be generated.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateAttributes(System.Collections.Generic.IEnumerable{System.Attribute},System.Boolean)">
            <summary>
            Generates attribute declarations in C#.
            </summary>
            <param name="attributes">The attributes to be generated.</param>
            <param name="forcePropagation">Causes the attributes to be generated even if the attribute verification fails.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateWebContextClass">
            <summary>
            Generates WebContext class code in C#.
            </summary>
            <returns>Generated WebContext code.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateBody">
            <summary>
            Generates WebContext class body.
            </summary>
            <remarks>
            The default implementation of this method invokes <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateConstructor"/>,
            <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateExtensibilityMethods"/> and <see cref="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.GenerateProperties"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpWebContextGenerator.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.ComplexObjectGeneratorNotFound">
            <summary>
              Looks up a localized string similar to Complex object generator not found..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.DomainContextGeneratorNotFound">
            <summary>
              Looks up a localized string similar to DomainContext generator not found..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.EntityGeneratorNotFound">
            <summary>
              Looks up a localized string similar to Entity generator not found.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.EnumGeneratorNotFound">
            <summary>
              Looks up a localized string similar to Enum generator not found..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.NonCSharpLanguageNotSupported">
            <summary>
              Looks up a localized string similar to Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CSharpGenerators.CSharpClientCodeGenerator supports only C# code generation. Please use the default code generator for VB code generation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.TextTemplateResource.WebContextGeneratorNotFound">
            <summary>
              Looks up a localized string similar to WebContext generator not found..
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGenUtilities.GetSafeName(System.String)">
            <summary>
            Checks if the variable name is a keyword, in which case appends a '@' sign before the name
            </summary>
            <param name="name">Name of the variable</param>
            <returns>Valid variable name</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGenUtilities.MakeCompliantFieldName(System.String)">
            <summary>
             Gets the fieldName from the name of the property.
            </summary>
            <param name="fieldName">Original fieldName.</param>
            <returns>Compliant field name.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGenUtilities.GetTypeName(System.Type)">
            <summary>
            Gets the full name of the type to be used in the generated code.
            </summary>
            <param name="type">Type of which the name is to be returned.</param>
            <returns>The full name of the type.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGenUtilities.GetValidTypeName(System.String)">
            <summary>
            This method handles cases where the name of the type is some keyword like "@namespace". But we want to leave out the cases where the keyword is the type, like "int".
            </summary>
            <param name="typeName">The name of the type.</param>
            <returns>The modified valid name of the type.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.DomainServices.Tools.TextTemplate.CodeGenUtilities.GetGenericTypeName(System.Type)">
            <summary>
            Returns the full name of the generic type.
            </summary>
            <param name="type">The generic type.</param>
            <returns>Full name of the type.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.DomainServices.Tools.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Analyzing_Project_Files">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for shared source files..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Analyzing_Project_References">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for project references..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Assembly_Load_Error">
             <summary>
               Looks up a localized string similar to Assembly &apos;{0}&apos; could not be loaded and will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Assembly_Load_Type_Error">
             <summary>
               Looks up a localized string similar to Failed to load types from assembly &apos;{0}&apos; so the assembly will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate">
            <summary>
              Looks up a localized string similar to The following attributes were not generated:.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate_ErrorTemplate">
            <summary>
              Looks up a localized string similar to - {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_Parameter_FailedToGenerate">
            <summary>
              Looks up a localized string similar to Unable to generate the following attributes for parameter &apos;{0}&apos; due to the following errors:.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresBuilder">
             <summary>
               Looks up a localized string similar to The attribute &apos;{0}&apos; was not generated because a suitable attribute generator was not found.
            
            Please ensure that the attribute type follows recommended .NET Framework guidelines and meets the following requirements:
             - The attribute has one or more public constructors.
             - All public properties have public setter methods.
               OR
             - A public constructor exists that accepts parameters matching all public properties without public setter methods.  (Matching is performed by case-insensitive name and type.).
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresDataAnnotations">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; requires a reference to System.ComponentModel.DataAnnotations in the client project &apos;{1}&apos;. Skipping generation of attribute. Please add a reference to System.ComponentModel.DataAnnotations to ensure generation of the attribute..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; is not visible in the client project &apos;{1}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Method">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a method &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; in assembly &apos;{1}&apos;
            was not generated in the proxy classes for client project &apos;{2}&apos;
            because there was insufficient information to determine whether it is visible to the client project.
            If this attribute type is intended to be used in shared code, avoid the use of
            automatic properties, provide at least a default constructor,
            and be sure a PDB is available for analysis..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Property">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a property &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; that is not accessible in the client project &apos;{2}&apos;. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; from assembly &apos;{2}&apos;. The type is not visible to the client project &apos;{3}&apos; because either a PDB file does not exist or the type does not contain user-defined code..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred generating the &apos;{1}&apos; property on attribute of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeMethod">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; method of the &apos;{2}&apos; class.  Exception message: {3}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeMethodParameter">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; parameter to the &apos;{2}&apos; method of the &apos;{3}&apos; class.  Exception message: {4}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeType">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; type.  Exception message: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeTypeMember">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; member of the &apos;{2}&apos; type.  Exception message: {3}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Cannot_Have_Include_And_Exclude">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in type &apos;{1}&apos; is marked with both IncludeAttribute and ExcludeAttribute.  Ignoring IncludeAttribute. Please remove the ExcludeAttribute if you want the association in the generated code..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_ComplexTypesCannotBeShared_Reference">
            <summary>
              Looks up a localized string similar to The Complex Type &apos;{0}&apos; already exists in another assembly. Complex Types cannot be defined in multiple assemblies..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Copying_File">
            <summary>
              Looks up a localized string similar to Copying file &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Deleting_Orphan">
            <summary>
              Looks up a localized string similar to Deleting previously generated file &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Deleting_Orphan_Folder">
            <summary>
              Looks up a localized string similar to Deleting empty folder &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Domain_Op_Enum_Error">
            <summary>
              Looks up a localized string similar to DomainOperationEntry &apos;{0}&apos; in DomainService &apos;{1}&apos; will not be generated because it uses the Enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CannotBeNested">
            <summary>
              Looks up a localized string similar to Cannot generate DomainService &apos;{0}&apos;. Nested DomainService types are not supported..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_ExceptionCaught">
            <summary>
              Looks up a localized string similar to CodeProcessor type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; threw an Exception: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_InvalidConstructorSignature">
            <summary>
              Looks up a localized string similar to CodeProcessor type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; must have a constructor accepting one parameter of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_NotValidType">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; is not a valid CodeProcessor implementation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_DomainService_Inheritance_Not_Allowed">
            <summary>
              Looks up a localized string similar to DomainService &apos;{0}&apos; derives from DomainService &apos;{1}&apos;. Only the leaf DomainService in the inheritance hierarchy may have the EnableClientAccessAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_EmptyDomainService">
            <summary>
              Looks up a localized string similar to DomainService &apos;{0}&apos; does not contain any public domain operations..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_EntityTypesCannotBeShared_Reference">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; already exists in another assembly. Entity types cannot be defined in multiple assemblies..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Failed_Delete_Folder">
            <summary>
              Looks up a localized string similar to Could not delete folder &apos;{0}&apos;.  {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Failed_To_Load">
            <summary>
              Looks up a localized string similar to Failed to load one or more types from assembly &apos;{0}&apos;: {1}.  Continuing with the types that loaded successfully..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Input_Assembly_Not_Found">
            <summary>
              Looks up a localized string similar to Could not find necessary input file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_InvalidDomainServiceType">
            <summary>
              Looks up a localized string similar to Code cannot be generated for the DomainService &apos;{0}&apos; because it isn&apos;t marked with EnableClientAccessAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Namespace_Required">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must appear inside a namespace..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_NamingCollision_MemberAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate DomainService &apos;{0}&apos; due to a naming conflict with an existing member.  DomainOperationEntry &apos;{1}&apos; conflicts with an auto-generated property with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_No_Input_Assemblies">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; project must be built before client proxy classes can be generated..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_OutputFiles_Are">
            <summary>
              Looks up a localized string similar to The client proxy task generated or is reusing existing copies of these files:{0}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Property_Enum_Error">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; will not be generated because it uses the Enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_PropertyType_Not_Shared">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in entity type &apos;{1}&apos; cannot be generated because its type &apos;{2}&apos; is not visible in the client project &apos;{3}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Skipping_CodeGen">
            <summary>
              Looks up a localized string similar to Skipping code generation because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_Skipping_Copy">
            <summary>
              Looks up a localized string similar to Skipping copy because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_ValidationAttribute_Requires_ResourceType_And_Name">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; contains ErrorMessageResourceType=&apos;{1}&apos; and ErrorMessageResourceName=&apos;{2}&apos;.  You must specify values for both or neither..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientCodeGen_ValidationAttribute_ResourcePropertyNotFound">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; contains ErrorMessageResourceName=&apos;{1}&apos; which was not found on declared ErrorMessageResourceType &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ClientProxyGenerator_Initialize_Not_Called">
            <summary>
              Looks up a localized string similar to &apos;ClientProxyGenerator.Initialize&apos; must be called before use..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Code_Generator_Incorrect_Type">
            <summary>
              Looks up a localized string similar to The requested code generator &apos;{0}&apos; cannot be used because it does not implement &apos;IDomainServiceClientCodeGenerator&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Code_Generator_Instantiation_Error">
             <summary>
               Looks up a localized string similar to The requested code generator &apos;{0}&apos; cannot be instantiated:
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Code_Generator_Not_Found">
             <summary>
               Looks up a localized string similar to No code generator named &apos;{0}&apos; is available for &apos;{1}&apos;.
            If a generator with this name exists elsewhere, add a reference to its assembly to the
            &apos;{2}&apos; project.
            Otherwise, manually edit the &apos;{3}&apos; project
            to add a &lt;RiaClientCodeGeneratorName&gt; property to name a valid generator.
            To specify the default generator add this property:
              &lt;RiaClientCodeGeneratorName&gt;{4}&lt;/RiaClientCodeGeneratorName&gt;
            .
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Complex_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; class..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_CreateEntityContainer_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to A new container instance..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_CreateEntityContainer_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Creates a new EntityContainer for this DomainContext&apos;s EntitySets..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Default_Constructor_Summary_Comments">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainClient_Custom_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Invokes the &apos;{0}&apos; method of the specified &lt;see cref=&quot;{1}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The DomainContext corresponding to the &apos;{0}&apos; DomainService..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Custom_Method_Entity_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The &lt;see cref=&quot;{0}&quot;/&gt; entity instance..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Custom_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter for this action..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Callback_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Callback to invoke when the operation completes..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of this action..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Asynchronously invokes the &apos;{0}&apos; method of the DomainService..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_UserState_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Value to pass to the callback.  It can be &lt;c&gt;null&lt;/c&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Returns_Comment">
            <summary>
              Looks up a localized string similar to An operation instance that can be used to manage the asynchronous request..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_AsyncState_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Optional state object..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Callback_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Callback to invoke on completion..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of this action..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An IAsyncResult that can be used to monitor the request..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Asynchronously invokes the &apos;{0}&apos; operation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_SubmitMethod_Changeset_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The change-set to submit..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The IAsyncResult returned from &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; returned from the &apos;{1}&apos; operation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Completes the asynchronous operation begun by &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_SubmitMethod_Returns_Comment">
            <summary>
              Looks up a localized string similar to The collection of change-set entry elements returned from &apos;SubmitChanges&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Summary_Comment">
            <summary>
              Looks up a localized string similar to Service contract for the &apos;{0}&apos; DomainService..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_CanInvoke_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets a value indicating whether the &apos;{0}&apos; method can be invoked on this entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Class_Context_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &lt;see cref=&quot;{0}&quot;/&gt; context..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Class_Shared_Summary_Comment">
            <summary>
              Looks up a localized string similar to This entity is shared between the following contexts:.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; entity class..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Collection_Association_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the collection of associated &lt;see cref=&quot;{0}&quot;/&gt; entity instances..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Custom_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value to pass to the server method&apos;s &apos;{0}&apos; parameter..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Custom_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Invokes the &apos;{0}&apos; action on this entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_IsInvoked_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets a value indicating whether the &apos;{0}&apos; action has been invoked on this entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets or sets the &apos;{0}&apos; value..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Singleton_Association_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets or sets the associated &lt;see cref=&quot;{0}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Entity_Singleton_Association_ReadOnly_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the associated &lt;see cref=&quot;{0}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_EntitySet_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the set of &lt;see cref=&quot;{0}&quot;/&gt; entity instances that have been loaded into this &lt;see cref=&quot;{1}&quot;/&gt; instance..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Execution_Time">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation finished in {0} seconds..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Generating_DomainService">
            <summary>
              Looks up a localized string similar to Generating proxy classes for the DomainService &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Generating_Proxies">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation starting for project &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Generating_WebContext">
            <summary>
              Looks up a localized string similar to Generating WebContext class..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_GetIdentify_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An object instance that uniquely identifies this entity instance..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_GetIdentify_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Computes a value from the key fields that uniquely identifies this entity instance..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_No_Pdb">
             <summary>
               Looks up a localized string similar to Shared file analysis cannot be done on assembly &apos;{0}&apos; because it has no corresponding PDB file.
            Change its project file to set DebugType to &apos;full&apos; or &apos;pdbonly&apos; if you intend to share code..
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Query_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of the query..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Query_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An EntityQuery that can be loaded to retrieve &lt;see cref=&quot;{0}&quot;/&gt; entity instances..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGen_Shared_Files">
            <summary>
              Looks up a localized string similar to Files visible to both the client and the server are:{0}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CodeGenerator_Threw_Exception">
             <summary>
               Looks up a localized string similar to The code generator &apos;{0}&apos; encountered a fatal exception and could not generate code for project &apos;{1}&apos;:
            {2}.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.CommentOnCreated">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            This method is invoked from the constructor once initialization is complete and
            can be used for further object setup.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Deleting_Empty_File">
            <summary>
              Looks up a localized string similar to Deleting file {0} because no client proxy classes have been generated..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_DomainClient">
            <summary>
              Looks up a localized string similar to The DomainClient instance to use for this DomainContext..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_ServiceUri">
            <summary>
              Looks up a localized string similar to The {0} service URI..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_DomainClientAccumulating">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class with the specified &lt;paramref name=&quot;domainClient&quot;/&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_DomainContext">
            <summary>
              Looks up a localized string similar to Gets an EntityQuery instance that can be used to load &lt;see cref=&quot;{0}&quot;/&gt; entity instances using the &apos;{1}&apos; query..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_ServiceUri">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class with the specified service URI..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_DuplicateCustomMethodName">
            <summary>
              Looks up a localized string similar to The custom method named &apos;{0}&apos; associated with entity type &apos;{1}&apos; is defined more than once in the &apos;{2}&apos; and &apos;{3}&apos; DomainService classes..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_EntityKey_KeyTypeNotSupported">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; is marked as a key property and is of type &apos;{2}&apos;, which is not a supported type for a key member..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_EntityKey_PropertyNotSerializable">
            <summary>
              Looks up a localized string similar to The property &apos;{0}.{1}&apos; is marked as a key property, but it&apos;s not serializable. Are you missing DataMemberAttribute?.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_Generating_GuardProperty">
            <summary>
              Looks up a localized string similar to Generating custom method guard property &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_Generating_GuardUpdateMethod">
            <summary>
              Looks up a localized string similar to Generating update method for guard properties....
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_Generating_InvokeMethod">
            <summary>
              Looks up a localized string similar to Generating domain invoke method &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_NamingCollision_EntityCustomMethodNameAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate entity &apos;{0}&apos; due to a naming conflict with an existing member.  Custom method &apos;{1}&apos; conflicts with a field with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_RoundtripOriginalOnBaseType">
            <summary>
              Looks up a localized string similar to There is a RoundtripOriginalAttribute on derived type &apos;{0}&apos; but not on base type &apos;{1}&apos;. RoundtripOriginalAttribute needs to be on the least derived entity type in an inheritance hierarchy..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.EntityCodeGen_SharedEntityMustBeLeastDerived">
            <summary>
              Looks up a localized string similar to Sharing entity types within an inheritance hierarchy is not allowed unless all DomainServices expose the same least derived entity. Entity &apos;{0}&apos; is the least derived entity on DomainService &apos;{1}&apos;,  Entity &apos;{2}&apos; is the least derived Entity on DomainService &apos;{3}&apos;, and Entity &apos;{4}&apos; is exposed from both DomainServices..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Enum_Type_Cannot_Gen_System">
            <summary>
              Looks up a localized string similar to The Enum type is not visible to the client and belongs to the System namespace.  Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Enum_Type_Must_Be_Public">
            <summary>
              Looks up a localized string similar to The Enum type must be public and cannot be nested..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Copy_File">
            <summary>
              Looks up a localized string similar to Failed to copy file &apos;{0}&apos; to &apos;{1}&apos;. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Create_Composition_Container">
             <summary>
               Looks up a localized string similar to The following exception occurred creating the MEF composition container:
            {0}
            The default code generator will be used..
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Create_Folder">
            <summary>
              Looks up a localized string similar to Failed to create folder &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Delete_File">
            <summary>
              Looks up a localized string similar to Failed to delete file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Delete_File_Error">
            <summary>
              Looks up a localized string similar to Could not delete file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Modify_ReadOnly">
            <summary>
              Looks up a localized string similar to Failed to modify the read-only attribute of file &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Open_PDB">
            <summary>
              Looks up a localized string similar to An error was encountered attempting to read the PDB file for &apos;{0}&apos; so it will not be possible to detect shared files in that assembly.  {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Open_Project">
            <summary>
              Looks up a localized string similar to An error was encountered attempting to open project &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Read_File_From_VS">
            <summary>
              Looks up a localized string similar to Failed to read the contents of &apos;{0}&apos; from Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Rename_File">
            <summary>
              Looks up a localized string similar to Failed to move/rename file &apos;{0}&apos; to &apos;{1}&apos;. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Write_File">
            <summary>
              Looks up a localized string similar to Failed to write file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Failed_To_Write_File_To_VS">
            <summary>
              Looks up a localized string similar to Failed to write the generated contents of &apos;{0}&apos; to Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.HttpRuntimeInitializationError">
            <summary>
              Looks up a localized string similar to There was a problem initializing the HttpRuntime..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Multiple_Custom_Code_Generators">
             <summary>
               Looks up a localized string similar to Multiple custom code generators are available for {0}:
            {1}Please set the RiaClientCodeGeneratorName property in the client project to select which of these you wish to use.
            .
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Multiple_Custom_Code_Generators_Using_Default">
             <summary>
               Looks up a localized string similar to Multiple custom code generators are available for &apos;{0}&apos;:
            {1}The default generator will be used because none was specified.
            To specify one manually edit the &apos;{2}&apos; project
            and add a property like this:
              &lt;RiaClientCodeGeneratorName&gt;{3}&lt;/RiaClientCodeGeneratorName&gt;
            To specify the default generator add this property:
              &lt;RiaClientCodeGeneratorName&gt;{4}&lt;/RiaClientCodeGeneratorName&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Multiple_Named_Code_Generators">
             <summary>
               Looks up a localized string similar to Multiple code generators named &apos;{0}&apos; are available for &apos;{1}&apos;:
            {2}Remove all but one from &apos;{3}&apos;,
            modify them to have unique names,
            or manually edit the &apos;{4}&apos; project
            to add a property that fully qualifies one, like this:
                &lt;RiaClientCodeGeneratorName&gt;{5}&lt;/RiaClientCodeGeneratorName&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Null_Language_Property">
            <summary>
              Looks up a localized string similar to The &apos;ClientProxyCodeGenerationOptions.Language&apos; property cannot be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Null_Logger_Property">
            <summary>
              Looks up a localized string similar to The Logger property cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Project_Does_Not_Exist">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Project_References_Found">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; contains project references to:.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.ProjectPath_Argument_Required">
            <summary>
              Looks up a localized string similar to ProjectPath property is required when relative paths are used..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Property_Not_Found">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contain a property named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Region_ExtensibilityMethodDefinitions">
            <summary>
              Looks up a localized string similar to Extensibility Method Definitions.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.RIA_Link_Present">
            <summary>
              Looks up a localized string similar to A WCF RIA Services Link exists between project &apos;{0}&apos; and project &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.RIA_Link_Prevents_Copy">
            <summary>
              Looks up a localized string similar to Shared files will not be copied from &apos;{0}&apos; due to an existing WCF RIA Services Link from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Server_Project_File_Does_Not_Exist">
             <summary>
               Looks up a localized string similar to The Silverlight project &apos;{0}&apos; has a WCF RIA Services Link to the project &apos;{1}&apos; which does not exist.
            Did you rename or move that project?
            Please modify the Project Properties of &apos;{0}&apos; and set the WCF RIA Services Link to point to a valid project..
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Shared_DomainContext_Skipped">
            <summary>
              Looks up a localized string similar to Skipping proxy class generation for &apos;{0}&apos; because a DomainContext for it already exists in another assembly..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.SharedCodeServiceParameters_Parameter_Null">
            <summary>
              Looks up a localized string similar to SharedCodeServiceParameters.{0} cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Type_Must_Be_Attribute">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not derived from Attribute..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Unspecified_Resource_Element">
            <summary>
              Looks up a localized string similar to &lt;unspecified&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Using_Custom_Code_Generator">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; custom code generator will be used to generate the proxy classes..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.WebContext_CommentClass">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Context for the RIA application.
            &lt;/summary&gt;
            &lt;remarks&gt;
            This context extends the base to make application services and types available
            for consumption from code and xaml.
            &lt;/remarks&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.WebContext_CommentConstructor">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Initializes a new instance of the WebContext class.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.WebContext_CommentCurrent">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets the context that is registered as a lifetime object with the current application.
            &lt;/summary&gt;
            &lt;exception cref=&quot;InvalidOperationException&quot;&gt; is thrown if there is no current application,
            no contexts have been added, or more than one context has been added.
            &lt;/exception&gt;
            &lt;seealso cref=&quot;System.Windows.Application.ApplicationLifetimeObjects&quot;/&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.WebContext_CommentUser">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets a user representing the authenticated identity.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.WebContext_ManyAuthServices">
            <summary>
              Looks up a localized string similar to More than one AuthenticationService exists in the project. No AuthenticationService is set as the default in WebContext.\n{0}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.DomainServices.Tools.Resource.Writing_Generated_Code">
            <summary>
              Looks up a localized string similar to Writing generated client proxy classes to &apos;{0}&apos;..
            </summary>
        </member>
    </members>
</doc>
