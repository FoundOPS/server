<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FoundOps.SLClient.Data</name>
    </assembly>
    <members>
        <member name="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem">
            <summary>
            The 'VehicleMaintenanceLineItem' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.Cost">
            <summary>
            Gets or sets the 'Cost' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.Details">
            <summary>
            Gets or sets the 'Details' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntry">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntry"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem.VehicleMaintenanceLogEntryId">
            <summary>
            Gets or sets the 'VehicleMaintenanceLogEntryId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Vehicle">
            <summary>
            The 'Vehicle' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Vehicle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Vehicle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.LicensePlate">
            <summary>
            Gets or sets the 'LicensePlate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Make">
            <summary>
            Gets or sets the 'Make' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Mileage">
            <summary>
            Gets or sets the 'Mileage' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Model">
            <summary>
            Gets or sets the 'Model' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.RouteVehicleToRouteSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteVehicle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.VehicleMaintenanceLog">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.VIN">
            <summary>
            Gets or sets the 'VIN' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Year">
            <summary>
            Gets or sets the 'Year' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Vehicle.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entities.
            </summary>
        </member>
        <member name="T:FoundOps.Common.NET.Address">
            <summary>
            The 'Address' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.NET.Address.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Common.NET.Address"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.NET.Address.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Common.NET.Address.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.Key">
            <summary>
            Gets or sets the 'Key' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.Address.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="T:FoundOps.Common.NET.GeocoderResult">
            <summary>
            The 'GeocoderResult' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Common.NET.GeocoderResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Common.NET.GeocoderResult"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.GeocoderResult.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.GeocoderResult.Precision">
            <summary>
            Gets or sets the 'Precision' value.
            </summary>
        </member>
        <member name="P:FoundOps.Common.NET.GeocoderResult.Radius">
            <summary>
            Gets or sets the 'Radius' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.Account.Extensions.WebContextUser">
            <summary>
            The 'WebContextUser' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.Account.Extensions.WebContextUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.Account.Extensions.WebContextUser.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.Account.Extensions.WebContextUser.IsInRole(System.String)">
            <summary>
            Return whether the principal is in the role.
            </summary>
            <remarks>
            Returns whether the specified role is contained in the roles.
            This implementation is case sensitive.
            </remarks>
            <param name="role">The name of the role for which to check membership.</param>
            <returns>Whether the principal is in the role.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.Account.Extensions.WebContextUser.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.Account.Extensions.WebContextUser.Roles">
            <summary>
            Gets or sets the 'Roles' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.Account.Extensions.WebContextUser.IsAuthenticated">
            <summary>
            Gets a value indicating whether the identity is authenticated.
            </summary>
            <remarks>
            This value is <c>true</c> if <see cref="P:FoundOps.Core.Models.Account.Extensions.WebContextUser.Name"/> is not <c>null</c> or empty.
            </remarks>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Block">
            <summary>
            The 'Block' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Block.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Block"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Block.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.FileName">
            <summary>
            Gets or sets the 'FileName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.HideFromNavigation">
            <summary>
            Gets or sets the 'HideFromNavigation' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.Link">
            <summary>
            Gets or sets the 'Link' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.LoginNotRequired">
            <summary>
            Gets or sets the 'LoginNotRequired' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.NavigateUri">
            <summary>
            Gets or sets the 'NavigateUri' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.RoleBlockToRoleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RoleBlock"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Block.Roles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entities.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Business">
            <summary>
            The 'Business' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Party">
            <summary>
            The 'Party' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Party.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Party.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.ClientOwner">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.ContactInfoSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.Contacts">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.Locations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.OfClients">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.OwnedFiles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.OwnedLocations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.OwnedRoles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.PartyImage">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Party.PartyImage"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.PartyRoleToRoleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.PartyRole"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.Vehicles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Party.RoleMembership">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entities.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Business.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Business"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Business.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.BusinessAccount">
            <summary>
            The 'BusinessAccount' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.BusinessAccount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.Clients">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.Employees">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.Invoices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.QuickBooksAccessToken">
            <summary>
            Gets or sets the 'QuickBooksAccessToken' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.QuickBooksAccessTokenSecret">
            <summary>
            Gets or sets the 'QuickBooksAccessTokenSecret' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.QuickBooksEnabled">
            <summary>
            Gets or sets the 'QuickBooksEnabled' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.QuickBooksSessionXml">
            <summary>
            Gets or sets the 'QuickBooksSessionXml' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.Regions">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.RouteManifestSettings">
            <summary>
            Gets or sets the 'RouteManifestSettings' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.ServicesToProvide">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.BusinessAccount.ServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Client">
            <summary>
            The 'Client' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Client.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.ClientTitles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.DateAdded">
            <summary>
            Gets or sets the 'DateAdded' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.Invoices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.LinkedParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.LinkedPartyId">
            <summary>
            Gets or sets the 'LinkedPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.OwnedParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.RecurringServices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.Salesperson">
            <summary>
            Gets or sets the 'Salesperson' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.ServicesToRecieve">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.ServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.Vendor">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.VendorId">
            <summary>
            Gets or sets the 'VendorId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Client.EntityGraphToRemove">
            <summary>
            Gets the entity graph of Client to remove.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.ClientTitle">
            <summary>
            The 'ClientTitle' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ClientTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ClientTitle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Contact">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Contact"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.ContactId">
            <summary>
            Gets or sets the 'ContactId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ClientTitle.Title">
            <summary>
            Gets or sets the 'Title' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Contact">
            <summary>
            The 'Contact' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Contact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Contact.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.ClientTitles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.OwnedPerson">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Person"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Contact.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.ContactInfo">
            <summary>
            The 'ContactInfo' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ContactInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ContactInfo.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.ContactId">
            <summary>
            Gets or sets the 'ContactId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Data">
            <summary>
            Gets or sets the 'Data' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Label">
            <summary>
            Gets or sets the 'Label' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ContactInfo.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.DateTimeField">
            <summary>
            The 'DateTimeField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Field">
            <summary>
            The 'Field' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            A generic Field to be extended. Not intended to be created.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Field.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Field.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.ChildrenFields">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.Group">
            <summary>
            Gets or sets the 'Group' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.OwnerServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.ParentField">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.ParentFieldId">
            <summary>
            Gets or sets the 'ParentFieldId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.Required">
            <summary>
            Gets or sets the 'Required' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.ServiceTemplateId">
            <summary>
            Gets or sets the 'ServiceTemplateId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.Tooltip">
            <summary>
            Gets or sets the 'Tooltip' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Field.ThisField">
            <summary>
            Gets the this field. For bindings that require arbitrary NotifyPropertyChanged("ThisField") 
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.DateTimeField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.DateTimeField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.DateTimeField.Earliest">
            <summary>
            Gets or sets the 'Earliest' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.DateTimeField.Latest">
            <summary>
            Gets or sets the 'Latest' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.DateTimeField.TypeInt">
            <summary>
            Gets or sets the 'TypeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.DateTimeField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Employee">
            <summary>
            The 'Employee' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Employee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Employee.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.Comments">
            <summary>
            Gets or sets the 'Comments' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.EmployeeHistoryEntries">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.Employer">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.EmployerId">
            <summary>
            Gets or sets the 'EmployerId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.HireDate">
            <summary>
            Gets or sets the 'HireDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.LinkedUserAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.UserAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.LinkedUserAccountId">
            <summary>
            Gets or sets the 'LinkedUserAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.OwnedPerson">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Person"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.Permissions">
            <summary>
            Gets or sets the 'Permissions' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.RouteEmployeeToRouteSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteEmployee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.SSN">
            <summary>
            Gets or sets the 'SSN' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Employee.Routes">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entities.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry">
            <summary>
            The 'EmployeeHistoryEntry' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Employee">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Employee"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.EmployeeId">
            <summary>
            Gets or sets the 'EmployeeId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Summary">
            <summary>
            Gets or sets the 'Summary' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry.Type">
            <summary>
            Gets or sets the 'Type' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.File">
            <summary>
            The 'File' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.File.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.File.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.Data">
            <summary>
            Gets or sets the 'Data' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.File.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.File.ByteData">
            <summary>
            Gets the byte data of the file.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Invoice">
            <summary>
            The 'Invoice' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Invoice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Invoice.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.BillToLocation">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.BusinessAccount">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Invoice.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.BusinessAccountId">
            <summary>
            Gets or sets the 'BusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Invoice.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.CreateTime">
            <summary>
            Gets or sets the 'CreateTime' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.CustomerId">
            <summary>
            Gets or sets the 'CustomerId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.DueDate">
            <summary>
            Gets or sets the 'DueDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.FixedScheduleOptionInt">
            <summary>
            Gets or sets the 'FixedScheduleOptionInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.LastUpdatedTime">
            <summary>
            Gets or sets the 'LastUpdatedTime' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.Memo">
            <summary>
            Gets or sets the 'Memo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.RelativeScheduleDays">
            <summary>
            Gets or sets the 'RelativeScheduleDays' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.SalesTerm">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Invoice.SalesTerm"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.SalesTermId">
            <summary>
            Gets or sets the 'SalesTermId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.ScheduleModeInt">
            <summary>
            Gets or sets the 'ScheduleModeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.ServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Invoice.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Invoice.SyncToken">
            <summary>
            Gets or sets the 'SyncToken' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Location">
            <summary>
            The 'Location' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Location.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Location.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.AddressLineOne">
            <summary>
            Gets or sets the 'AddressLineOne' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.AddressLineTwo">
            <summary>
            Gets or sets the 'AddressLineTwo' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.City">
            <summary>
            Gets or sets the 'City' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.ContactInfoSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Files">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Invoices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.LocationFieldsWhereValue">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.LocationField"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Location.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Location.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.Region">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Location.Region"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.RegionId">
            <summary>
            Gets or sets the 'RegionId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.State">
            <summary>
            Gets or sets the 'State' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.SubLocations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.SubLocation"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Location.ZipCode">
            <summary>
            Gets or sets the 'ZipCode' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.LocationField">
            <summary>
            The 'LocationField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.LocationField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.LocationField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.LocationField.LocationFieldTypeInt">
            <summary>
            Gets or sets the 'LocationFieldTypeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.LocationField.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.LocationField.Value">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.LocationOption">
            <summary>
            The 'LocationOption' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Option">
            <summary>
            The 'Option' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Option.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Option"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Option.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.Index">
            <summary>
            Gets or sets the 'Index' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.IsChecked">
            <summary>
            Gets or sets the 'IsChecked' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.OptionsField">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Option.OptionsField"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.OptionsFieldId">
            <summary>
            Gets or sets the 'OptionsFieldId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Option.Tooltip">
            <summary>
            Gets or sets the 'Tooltip' value.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.LocationOption.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.LocationOption"/> class.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.NumericField">
            <summary>
            The 'NumericField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.NumericField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.NumericField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.NumericField.DecimalPlaces">
            <summary>
            Gets or sets the 'DecimalPlaces' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.NumericField.Mask">
            <summary>
            Gets or sets the 'Mask' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.NumericField.Maximum">
            <summary>
            Gets or sets the 'Maximum' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.NumericField.Minimum">
            <summary>
            Gets or sets the 'Minimum' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.NumericField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.OptionsField">
            <summary>
            The 'OptionsField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.OptionsField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.OptionsField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.OptionsField.AllowMultipleSelection">
            <summary>
            Gets or sets the 'AllowMultipleSelection' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.OptionsField.Options">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Option"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.OptionsField.TypeInt">
            <summary>
            Gets or sets the 'TypeInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.OptionsField.OptionsWrapper">
            <summary>
            Wraps the Options and orders by the Option.Index
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.PartyImage">
            <summary>
            The 'PartyImage' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.PartyImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.PartyImage"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyImage.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.PartyImage.Party"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.PartyRole">
            <summary>
            The 'PartyRole' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.PartyRole.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.PartyRole"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.PartyRole.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.PartyRole.AttachRoleToParty(FoundOps.Core.Models.CoreEntities.PartyRole,FoundOps.Core.Models.CoreEntities.Party,FoundOps.Core.Models.CoreEntities.Role)">
            <summary>
            This method attaches Party and Role to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="party"></param>
            <param name="role"></param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.PartyRole.AttachPartyToRole(FoundOps.Core.Models.CoreEntities.PartyRole,FoundOps.Core.Models.CoreEntities.Role,FoundOps.Core.Models.CoreEntities.Party)">
            <summary>
            This method attaches Role and Party to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="role"></param>
            <param name="party"></param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyRole.Party">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.PartyRole.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyRole.PartyId">
            <summary>
            Gets or sets the 'PartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyRole.Role">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.PartyRole.Role"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyRole.RoleId">
            <summary>
            Gets or sets the 'RoleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.PartyRole.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Person">
            <summary>
            The 'Person' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Person.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Person"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.DateOfBirth">
            <summary>
            Gets or sets the 'DateOfBirth' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.FirstName">
            <summary>
            Gets or sets the 'FirstName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.GenderInt">
            <summary>
            Gets or sets the 'GenderInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.LastName">
            <summary>
            Gets or sets the 'LastName' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.MiddleInitial">
            <summary>
            Gets or sets the 'MiddleInitial' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.OwnerContact">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Person.OwnerEmployee">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RecurringService">
            <summary>
            The 'RecurringService' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RecurringService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RecurringService.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RecurringService.RepeatChangedObservable">
            <summary>
            An observable that publishes this Repeat's PropertyChangedEventArgs.
            </summary>
            <returns></returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RecurringService.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.ExcludedDatesString">
            <summary>
            Gets or sets the 'ExcludedDatesString' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.GeneratedServices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.Repeat">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RecurringService.Repeat"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.ServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RecurringService.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RecurringService.ExcludedDates">
            <summary>
            Gets or sets the excluded dates.
            </summary>
            <value>
            The excluded dates.
            </value>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Region">
            <summary>
            The 'Region' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Region.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Region.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.BusinessAccount">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Region.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.BusinessAccountId">
            <summary>
            Gets or sets the 'BusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.Color">
            <summary>
            Gets or sets the 'Color' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.Locations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Region.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Repeat">
            <summary>
            The 'Repeat' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Repeat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Repeat"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Repeat.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Repeat.NextRepeatDateOnOrAfterDate(System.DateTime)">
            <summary>
            Returns the next scheduled date.
            </summary>
            <param name="onOrAfterDate">The on or after date.</param>
            <returns>The next repeat date on or after the <param name="onOrAfterDate"/> </returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Repeat.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Gets the occurrences.
            </summary>
            <param name="startRangeInclusive">The start range to iterate from (inclusive).</param>
            <param name="endRangeInclusive">The end range to iterate to (inclusive).</param>
            <returns></returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.EndAfterTimes">
            <summary>
            Gets or sets the 'EndAfterTimes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.EndDate">
            <summary>
            Gets or sets the 'EndDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.FrequencyDetailInt">
            <summary>
            Gets or sets the 'FrequencyDetailInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.FrequencyInt">
            <summary>
            Gets or sets the 'FrequencyInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.RecurringService">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Repeat.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.RepeatEveryTimes">
            <summary>
            Gets or sets the 'RepeatEveryTimes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.StartDate">
            <summary>
            Gets or sets the 'StartDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Repeat.NextRepeatDate">
            <summary>
            Gets the next repeat date.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Role">
            <summary>
            The 'Role' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Role.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Role.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.Description">
            <summary>
            Gets or sets the 'Description' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.OwnerParty">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.OwnerPartyId">
            <summary>
            Gets or sets the 'OwnerPartyId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.PartyRoleToPartySet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.PartyRole"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.RoleBlockToBlockSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RoleBlock"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.Blocks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Block"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Role.MemberParties">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entities.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RoleBlock">
            <summary>
            The 'RoleBlock' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RoleBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RoleBlock"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RoleBlock.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RoleBlock.AttachBlockToRole(FoundOps.Core.Models.CoreEntities.RoleBlock,FoundOps.Core.Models.CoreEntities.Role,FoundOps.Core.Models.CoreEntities.Block)">
            <summary>
            This method attaches Role and Block to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="role"></param>
            <param name="block"></param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RoleBlock.AttachRoleToBlock(FoundOps.Core.Models.CoreEntities.RoleBlock,FoundOps.Core.Models.CoreEntities.Block,FoundOps.Core.Models.CoreEntities.Role)">
            <summary>
            This method attaches Block and Role to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="block"></param>
            <param name="role"></param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RoleBlock.Block">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RoleBlock.Block"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RoleBlock.BlockId">
            <summary>
            Gets or sets the 'BlockId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RoleBlock.Role">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RoleBlock.Role"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RoleBlock.RoleId">
            <summary>
            Gets or sets the 'RoleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RoleBlock.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Route">
            <summary>
            The 'Route' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Route.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Route.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.EndTime">
            <summary>
            Gets or sets the 'EndTime' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.OwnerBusinessAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.OwnerBusinessAccountId">
            <summary>
            Gets or sets the 'OwnerBusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.RouteDestinations">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.RouteEmployeeToEmployeeSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteEmployee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.RouteType">
            <summary>
            Gets or sets the 'RouteType' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.RouteVehicleToVehicleSet">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteVehicle"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.StartTime">
            <summary>
            Gets or sets the 'StartTime' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.Vehicles">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> entities.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Route.Technicians">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entities.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RouteDestination">
            <summary>
            The 'RouteDestination' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteDestination.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteDestination.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.OrderInRoute">
            <summary>
            Gets or sets the 'OrderInRoute' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteDestination.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteDestination.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RouteEmployee">
            <summary>
            The 'RouteEmployee' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteEmployee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RouteEmployee"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteEmployee.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteEmployee.AttachEmployeeToRoute(FoundOps.Core.Models.CoreEntities.RouteEmployee,FoundOps.Core.Models.CoreEntities.Route,FoundOps.Core.Models.CoreEntities.Employee)">
            <summary>
            This method attaches Route and Employee to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="route"></param>
            <param name="employee"></param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteEmployee.AttachRouteToEmployee(FoundOps.Core.Models.CoreEntities.RouteEmployee,FoundOps.Core.Models.CoreEntities.Employee,FoundOps.Core.Models.CoreEntities.Route)">
            <summary>
            This method attaches Employee and Route to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="employee"></param>
            <param name="route"></param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.Employee">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.Employee"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.EmployeeId">
            <summary>
            Gets or sets the 'EmployeeId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteEmployee.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RouteTask">
            <summary>
            The 'RouteTask' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteTask.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteTask.Clone(System.Boolean)">
            <summary>
            Clones the RouteTask.
            </summary>
            <param name="withService">if set to <c>true</c> [clones the service and service template as well].</param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.BusinessAccountId">
            <summary>
            Gets or sets the 'BusinessAccountId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteTask.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.EstimatedDuration">
            <summary>
            Gets or sets the 'EstimatedDuration' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.GeneratedOnServer">
            <summary>
            Gets or sets the 'GeneratedOnServer' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteTask.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.OwnerBusinessAccount">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.ReadOnly">
            <summary>
            Gets or sets the 'ReadOnly' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.ReadyToInvoice">
            <summary>
            Gets or sets the 'ReadyToInvoice' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.RouteDestination">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteTask.RouteDestination"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.RouteDestinationId">
            <summary>
            Gets or sets the 'RouteDestinationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.Service">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteTask.Service"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteTask.ServiceId">
            <summary>
            Gets or sets the 'ServiceId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RouteVehicle">
            <summary>
            The 'RouteVehicle' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
            <summary>
            This class provides access to the entity's entity set and contains methods for attaching
            to entities to the link table in a single action.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteVehicle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RouteVehicle"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteVehicle.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteVehicle.AttachVehicleToRoute(FoundOps.Core.Models.CoreEntities.RouteVehicle,FoundOps.Core.Models.CoreEntities.Route,FoundOps.Core.Models.CoreEntities.Vehicle)">
            <summary>
            This method attaches Route and Vehicle to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="route"></param>
            <param name="vehicle"></param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RouteVehicle.AttachRouteToVehicle(FoundOps.Core.Models.CoreEntities.RouteVehicle,FoundOps.Core.Models.CoreEntities.Vehicle,FoundOps.Core.Models.CoreEntities.Route)">
            <summary>
            This method attaches Vehicle and Route to the current join table entity, in such a way
            that both navigation properties are set before an INotifyCollectionChanged event is fired.
            </summary>
            <param name="r"></param>
            <param name="vehicle"></param>
            <param name="route"></param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.Route">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.Route"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.RouteId">
            <summary>
            Gets or sets the 'RouteId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.Vehicle">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.Vehicle"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.RouteVehicle.RiaServicesContrib#IExtendedEntity#EntitySet">
            <summary>
            Gets the EntitySet the link table entity is contained in.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.SalesTerm">
            <summary>
            The 'SalesTerm' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.SalesTerm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.SalesTerm"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.SalesTerm.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SalesTerm.DueDays">
            <summary>
            Gets or sets the 'DueDays' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SalesTerm.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SalesTerm.Invoices">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SalesTerm.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.Service">
            <summary>
            The 'Service' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Service.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Service.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Service.TrackChanges">
            <summary>
            Track this Entity's Changes
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.Client">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Service.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ClientId">
            <summary>
            Gets or sets the 'ClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.Generated">
            <summary>
            Gets or sets the 'Generated' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.RecurringServiceId">
            <summary>
            Gets or sets the 'RecurringServiceId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.RecurringServiceParent">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.RouteTasks">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceDate">
            <summary>
            Gets or sets the 'ServiceDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceProvider">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceProviderId">
            <summary>
            Gets or sets the 'ServiceProviderId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.Service.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceHasChanges">
            <summary>
            Allow for tracking changes
            Ex. Used in ServicesVM so that services generated from recurring services which do not have changes are not added to the database
            </summary>
            <value>
              <c>true</c> if [service has changes]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceIsNew">
            <summary>
            Allow for tracking if this was New this session
            Ex. Used in ServicesVM so that New entities with ServiceHasChanges == false can be removed
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.Service.ServiceType">
            <summary>
             This Service's service type. The property is used for Service's who's ServiceTemplate isn't generated yet.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate">
            <summary>
            The 'ServiceTemplate' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ServiceTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ServiceTemplate.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ServiceTemplate.MakeChildSilverlight(FoundOps.Core.Models.CoreEntities.ServiceTemplateLevel)">
            <summary>
            Makes a child of this ServiceTemplate.
            </summary>
            <param name="serviceTemplateLevel">The service template level of the child.</param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.ServiceTemplate.MakeSibling">
            <summary>
            Similar to MakeChild. It copies the ServiceTemplate/Fields. It keeps the same ServiceTemplateLevel.
            It sets the parents to this ServiceTemplate's Parent and this Field's Parents
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.ChildrenServiceTemplates">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.Fields">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.Invoice">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.Invoice"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.LevelInt">
            <summary>
            Gets or sets the 'LevelInt' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerClient">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerClientId">
            <summary>
            Gets or sets the 'OwnerClientId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerRecurringService">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerService">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerServiceProvider">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerServiceProviderId">
            <summary>
            Gets or sets the 'OwnerServiceProviderId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.OwnerServiceTemplateId">
            <summary>
            Gets or sets the 'OwnerServiceTemplateId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.ServiceTemplate.ParentServiceTemplate">
            <summary>
            Gets or sets the associated <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.SubLocation">
            <summary>
            The 'SubLocation' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.SubLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.SubLocation"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.SubLocation.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Location">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.SubLocation.Location"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.LocationId">
            <summary>
            Gets or sets the 'LocationId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Name">
            <summary>
            Gets or sets the 'Name' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Notes">
            <summary>
            Gets or sets the 'Notes' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.SubLocation.Number">
            <summary>
            Gets or sets the 'Number' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.TextBoxField">
            <summary>
            The 'TextBoxField' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.TextBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.TextBoxField"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TextBoxField.IsMultiline">
            <summary>
            Gets or sets the 'IsMultiline' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TextBoxField.Value">
            <summary>
            Gets or sets the 'Value' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.TrackPoint">
            <summary>
            The 'TrackPoint' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.TrackPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.TrackPoint"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.TrackPoint.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.CompassDirection">
            <summary>
            Gets or sets the 'CompassDirection' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.Latitude">
            <summary>
            Gets or sets the 'Latitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.Longitude">
            <summary>
            Gets or sets the 'Longitude' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.Timestamp">
            <summary>
            Gets or sets the 'Timestamp' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.UserAccount">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.TrackPoint.UserAccount"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.TrackPoint.UserAccountId">
            <summary>
            Gets or sets the 'UserAccountId' value.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.UserAccount">
            <summary>
            The 'UserAccount' entity class.
            This entity is shared between the following contexts:
            The <see cref="!:CoreDomainContext"/> context.
            The <see cref="!:TechnicianDomainContext"/> context.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.UserAccount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.UserAccount"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.UserAccount.CreationDate">
            <summary>
            Gets or sets the 'CreationDate' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.UserAccount.EmailAddress">
            <summary>
            Gets or sets the 'EmailAddress' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.UserAccount.LastActivity">
            <summary>
            Gets or sets the 'LastActivity' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.UserAccount.OfEmployees">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.UserAccount.TrackPoints">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.TrackPoint"/> entity instances.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry">
            <summary>
            The 'VehicleMaintenanceLogEntry' entity class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.GetIdentity">
            <summary>
            Computes a value from the key fields that uniquely identifies this entity instance.
            </summary>
            <returns>An object instance that uniquely identifies this entity instance.</returns>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Comments">
            <summary>
            Gets or sets the 'Comments' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Date">
            <summary>
            Gets or sets the 'Date' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Id">
            <summary>
            Gets or sets the 'Id' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.LineItems">
            <summary>
            Gets the collection of associated <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Mileage">
            <summary>
            Gets or sets the 'Mileage' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.ServicedBy">
            <summary>
            Gets or sets the 'ServicedBy' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Vehicle">
            <summary>
            Gets or sets the associated <see cref="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.Vehicle"/> entity.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.VehicleId">
            <summary>
            Gets or sets the 'VehicleId' value.
            </summary>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry.TotalCost">
            <summary>
             Sums the total cost of the LineItems
            </summary>
        </member>
        <member name="T:FoundOps.Server.Services.AuthenticationContext">
            <summary>
            The DomainContext corresponding to the 'AuthenticationService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.AuthenticationContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.AuthenticationContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The AuthenticationService service URI.</param>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.AuthenticationContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.GetUserQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances using the 'GetUser' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.LoginQuery(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances using the 'Login' query.
            </summary>
            <param name="userName">The value for the 'userName' parameter of the query.</param>
            <param name="password">The value for the 'password' parameter of the query.</param>
            <param name="isPersistent">The value for the 'isPersistent' parameter of the query.</param>
            <param name="customData">The value for the 'customData' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.LogoutQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances using the 'Logout' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <member name="P:FoundOps.Server.Services.AuthenticationContext.WebContextUsers">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.Account.Extensions.WebContextUser"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.AuthenticationContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract">
            <summary>
            Service contract for the 'AuthenticationService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginGetUser(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetUser' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndGetUser(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetUser'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetUser'.</param>
            <returns>The 'QueryResult' returned from the 'GetUser' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginLogin(System.String,System.String,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'Login' operation.
            </summary>
            <param name="userName">The value for the 'userName' parameter of this action.</param>
            <param name="password">The value for the 'password' parameter of this action.</param>
            <param name="isPersistent">The value for the 'isPersistent' parameter of this action.</param>
            <param name="customData">The value for the 'customData' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndLogin(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginLogin'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginLogin'.</param>
            <returns>The 'QueryResult' returned from the 'Login' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginLogout(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'Logout' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndLogout(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginLogout'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginLogout'.</param>
            <returns>The 'QueryResult' returned from the 'Logout' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.AuthenticationContext.IAuthenticationServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.Server.Services.TechnicianDomainContext">
            <summary>
            The DomainContext corresponding to the 'TechnicianDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The TechnicianDomainService service URI.</param>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetFilesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances using the 'GetFiles' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances using the 'GetLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetPartiesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'GetParties' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetRouteDestinationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetRouteDestinations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetRoutesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances using the 'GetRoutes' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetTechniciansRouteDestinationsAuthorizedQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetTechniciansRouteDestinationsAuthorized' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetTestTechniciansRoutesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances using the 'GetTestTechniciansRoutes' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.GetTrackPointsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.TrackPoint"/> entity instances using the 'GetTrackPoints' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.TrackPoint"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.InsertTrackPoint(System.Int64,System.Int64,System.DateTime,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' method of the DomainService.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.InsertTrackPoint(System.Int64,System.Int64,System.DateTime)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' method of the DomainService.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.Files">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.Locations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.Parties">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.RouteDestinations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.Routes">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.TechnicianDomainContext.TrackPoints">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.TrackPoint"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.TechnicianDomainContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract">
            <summary>
            Service contract for the 'TechnicianDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetFiles(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetFiles' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetFiles(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetFiles'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetFiles'.</param>
            <returns>The 'QueryResult' returned from the 'GetFiles' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetParties(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetParties' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetParties(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetParties'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetParties'.</param>
            <returns>The 'QueryResult' returned from the 'GetParties' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetRouteDestinations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteDestinations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetRouteDestinations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteDestinations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteDestinations'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteDestinations' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetRoutes(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoutes' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetRoutes(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoutes'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoutes'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoutes' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTechniciansRouteDestinationsAuthorized(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTechniciansRouteDestinationsAuthorized' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTechniciansRouteDestinationsAuthorized(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTechniciansRouteDestinationsAuthorized'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTechniciansRouteDestinationsAuthorized'.</param>
            <returns>The 'QueryResult' returned from the 'GetTechniciansRouteDestinationsAuthorized' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTestTechniciansRoutes(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTestTechniciansRoutes' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTestTechniciansRoutes(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTestTechniciansRoutes'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTestTechniciansRoutes'.</param>
            <returns>The 'QueryResult' returned from the 'GetTestTechniciansRoutes' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginGetTrackPoints(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTrackPoints' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndGetTrackPoints(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTrackPoints'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTrackPoints'.</param>
            <returns>The 'QueryResult' returned from the 'GetTrackPoints' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginInsertTrackPoint(System.Int64,System.Int64,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'InsertTrackPoint' operation.
            </summary>
            <param name="latitude">The value for the 'latitude' parameter of this action.</param>
            <param name="longitude">The value for the 'longitude' parameter of this action.</param>
            <param name="timeStamp">The value for the 'timeStamp' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndInsertTrackPoint(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginInsertTrackPoint'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginInsertTrackPoint'.</param>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.TechnicianDomainContext.ITechnicianDomainServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext">
            <summary>
            The DomainContext corresponding to the 'CoreDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> class with the specified service URI.
            </summary>
            <param name="serviceUri">The CoreDomainService service URI.</param>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> class with the specified <paramref name="domainClient"/>.
            </summary>
            <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.BusinessAccountWithClientsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity instances using the 'BusinessAccountWithClientsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.BusinessAccount"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.BusinessForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Business"/> entity instances using the 'BusinessForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Business"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.CurrentUserAccountQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.UserAccount"/> entity instances using the 'CurrentUserAccount' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.UserAccount"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetAddressesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Common.NET.Address"/> entity instances using the 'GetAddresses' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Common.NET.Address"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetAllUserAccountsQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'GetAllUserAccounts' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetBusinessAccountsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'GetBusinessAccountsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetClientsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity instances using the 'GetClientsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetClientTitlesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances using the 'GetClientTitles' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetClientTitlesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances using the 'GetClientTitlesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetContactInfoSetQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> entity instances using the 'GetContactInfoSet' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetContactsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances using the 'GetContacts' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetContactsForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances using the 'GetContactsForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetEmployeeHistoryEntriesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances using the 'GetEmployeeHistoryEntries' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetEmployeeHistoryEntriesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances using the 'GetEmployeeHistoryEntriesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetEmployeesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances using the 'GetEmployees' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetEmployeesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances using the 'GetEmployeesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity instances using the 'GetFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetFilesForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances using the 'GetFilesForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetInvoicesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances using the 'GetInvoices' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetLocationFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.LocationField"/> entity instances using the 'GetLocationFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.LocationField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances using the 'GetLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetLocationsToAdministerForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances using the 'GetLocationsToAdministerForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetOptionsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Option"/> entity instances using the 'GetOptions' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Option"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetOptionsFieldQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.OptionsField"/> entity instances using the 'GetOptionsField' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.OptionsField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetOptionsFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.OptionsField"/> entity instances using the 'GetOptionsFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.OptionsField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetPartysQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'GetPartys' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetPublicBlocksQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Block"/> entity instances using the 'GetPublicBlocks' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Block"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRecurringServicesForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity instances using the 'GetRecurringServicesForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRegionsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances using the 'GetRegions' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRegionsForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances using the 'GetRegionsForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRepeatsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Repeat"/> entity instances using the 'GetRepeats' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Repeat"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRolesQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entity instances using the 'GetRoles' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRouteDestinationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances using the 'GetRouteDestinations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRouteLogForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances using the 'GetRouteLogForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetRoutesForServiceProviderOnDayQuery(System.Guid,System.DateTime)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances using the 'GetRoutesForServiceProviderOnDay' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="dateOfRoutes">The value for the 'dateOfRoutes' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetSalesTermsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.SalesTerm"/> entity instances using the 'GetSalesTerms' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.SalesTerm"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetServicesForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances using the 'GetServicesForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetServiceTemplatesForServiceProviderQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances using the 'GetServiceTemplatesForServiceProvider' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetSubLocationsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.SubLocation"/> entity instances using the 'GetSubLocations' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.SubLocation"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetTextBoxFieldsQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.TextBoxField"/> entity instances using the 'GetTextBoxFields' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.TextBoxField"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetUnroutedRouteTasksQuery(System.Guid,System.DateTime)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances using the 'GetUnroutedRouteTasks' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="selectedDate">The value for the 'selectedDate' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetVehicleMaintenanceLineItemQuery">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances using the 'GetVehicleMaintenanceLineItem' query.
            </summary>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetVehicleMaintenanceLineItemsForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances using the 'GetVehicleMaintenanceLineItemsForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetVehicleMaintenanceLogQuery(System.Guid,System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances using the 'GetVehicleMaintenanceLog' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <param name="vehicleId">The value for the 'vehicleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetVehicleMaintenanceLogForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances using the 'GetVehicleMaintenanceLogForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.GetVehiclesForPartyQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> entity instances using the 'GetVehiclesForParty' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.PartyForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'PartyForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.PartyToAdministerForRoleQuery(System.Guid)">
            <summary>
            Gets an EntityQuery instance that can be used to load <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances using the 'PartyToAdministerForRole' query.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of the query.</param>
            <returns>An EntityQuery that can be loaded to retrieve <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ContactInfoLabelsForParty(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{System.String}}},System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ContactInfoLabelsForParty(System.Guid)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ContactInfoTypesForParty(System.Guid,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{System.String}}},System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ContactInfoTypesForParty(System.Guid)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' method of the DomainService.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.TryGeocode(System.String,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{System.Collections.Generic.IEnumerable{FoundOps.Common.NET.GeocoderResult}}},System.Object)">
            <summary>
            Asynchronously invokes the 'TryGeocode' method of the DomainService.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <param name="callback">Callback to invoke when the operation completes.</param>
            <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.TryGeocode(System.String)">
            <summary>
            Asynchronously invokes the 'TryGeocode' method of the DomainService.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.CreateEntityContainer">
            <summary>
            Creates a new EntityContainer for this DomainContext's EntitySets.
            </summary>
            <returns>A new container instance.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.RejectChanges" -->
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Addresses">
            <summary>
            Gets the set of <see cref="T:FoundOps.Common.NET.Address"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Parties">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Party"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Clients">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Client"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ClientTitles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.ClientTitle"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ContactInfos">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.ContactInfo"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Contacts">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Contact"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.EmployeeHistoryEntries">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.EmployeeHistoryEntry"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Employees">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Employee"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Fields">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Field"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Files">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.File"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Invoices">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Invoice"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Locations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Location"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Options">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Option"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Blocks">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Block"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.RecurringServices">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.RecurringService"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Regions">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Region"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Repeats">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Repeat"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Roles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Role"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.RouteDestinations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.RouteDestination"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Routes">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Route"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.SalesTerms">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.SalesTerm"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Services">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Service"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ServiceTemplates">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.ServiceTemplate"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.SubLocations">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.SubLocation"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.RouteTasks">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.RouteTask"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.VehicleMaintenanceLineItems">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLineItem"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.VehicleMaintenanceLogEntries">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.VehicleMaintenanceLogEntry"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="P:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.Vehicles">
            <summary>
            Gets the set of <see cref="T:FoundOps.Core.Models.CoreEntities.Vehicle"/> entity instances that have been loaded into this <see cref="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext"/> instance.
            </summary>
        </member>
        <member name="T:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract">
            <summary>
            Service contract for the 'CoreDomainService' DomainService.
            </summary>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginBusinessAccountWithClientsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'BusinessAccountWithClientsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndBusinessAccountWithClientsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginBusinessAccountWithClientsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginBusinessAccountWithClientsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'BusinessAccountWithClientsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginBusinessForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'BusinessForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndBusinessForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginBusinessForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginBusinessForRole'.</param>
            <returns>The 'QueryResult' returned from the 'BusinessForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginContactInfoLabelsForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoLabelsForParty' operation.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndContactInfoLabelsForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginContactInfoLabelsForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginContactInfoLabelsForParty'.</param>
            <returns>The 'IEnumerable`1' returned from the 'ContactInfoLabelsForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginContactInfoTypesForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'ContactInfoTypesForParty' operation.
            </summary>
            <param name="currentPartyId">The value for the 'currentPartyId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndContactInfoTypesForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginContactInfoTypesForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginContactInfoTypesForParty'.</param>
            <returns>The 'IEnumerable`1' returned from the 'ContactInfoTypesForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginCurrentUserAccount(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'CurrentUserAccount' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndCurrentUserAccount(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginCurrentUserAccount'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginCurrentUserAccount'.</param>
            <returns>The 'QueryResult' returned from the 'CurrentUserAccount' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetAddresses(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetAddresses' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetAddresses(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetAddresses'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetAddresses'.</param>
            <returns>The 'QueryResult' returned from the 'GetAddresses' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetAllUserAccounts(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetAllUserAccounts' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetAllUserAccounts(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetAllUserAccounts'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetAllUserAccounts'.</param>
            <returns>The 'QueryResult' returned from the 'GetAllUserAccounts' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetBusinessAccountsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetBusinessAccountsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetBusinessAccountsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetBusinessAccountsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetBusinessAccountsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetBusinessAccountsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetClientsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientTitles(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientTitles' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetClientTitles(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientTitles'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientTitles'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientTitles' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetClientTitlesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetClientTitlesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetClientTitlesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetClientTitlesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetClientTitlesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetClientTitlesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetContactInfoSet(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContactInfoSet' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetContactInfoSet(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContactInfoSet'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContactInfoSet'.</param>
            <returns>The 'QueryResult' returned from the 'GetContactInfoSet' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetContacts(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContacts' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetContacts(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContacts'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContacts'.</param>
            <returns>The 'QueryResult' returned from the 'GetContacts' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetContactsForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetContactsForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetContactsForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetContactsForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetContactsForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetContactsForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeeHistoryEntries(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeeHistoryEntries' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeeHistoryEntries(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeeHistoryEntries'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeeHistoryEntries'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeeHistoryEntries' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeeHistoryEntriesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeeHistoryEntriesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeeHistoryEntriesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeeHistoryEntriesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeeHistoryEntriesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeeHistoryEntriesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployees(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployees' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployees(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployees'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployees'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployees' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetEmployeesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetEmployeesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetEmployeesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetEmployeesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetEmployeesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetEmployeesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetFilesForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetFilesForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetFilesForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetFilesForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetFilesForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetFilesForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetInvoices(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetInvoices' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetInvoices(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetInvoices'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetInvoices'.</param>
            <returns>The 'QueryResult' returned from the 'GetInvoices' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocationFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocationFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetLocationFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocationFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocationFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocationFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetLocationsToAdministerForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetLocationsToAdministerForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetLocationsToAdministerForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetLocationsToAdministerForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetLocationsToAdministerForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetLocationsToAdministerForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptions(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptions' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetOptions(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptions'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptions'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptions' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptionsField(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptionsField' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetOptionsField(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptionsField'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptionsField'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptionsField' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetOptionsFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetOptionsFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetOptionsFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetOptionsFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetOptionsFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetOptionsFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetPartys(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetPartys' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetPartys(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetPartys'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetPartys'.</param>
            <returns>The 'QueryResult' returned from the 'GetPartys' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetPublicBlocks(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetPublicBlocks' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetPublicBlocks(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetPublicBlocks'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetPublicBlocks'.</param>
            <returns>The 'QueryResult' returned from the 'GetPublicBlocks' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRecurringServicesForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRecurringServicesForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRecurringServicesForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRecurringServicesForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRecurringServicesForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRecurringServicesForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRegions(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRegions' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRegions(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRegions'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRegions'.</param>
            <returns>The 'QueryResult' returned from the 'GetRegions' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRegionsForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRegionsForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRegionsForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRegionsForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRegionsForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRegionsForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRepeats(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRepeats' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRepeats(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRepeats'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRepeats'.</param>
            <returns>The 'QueryResult' returned from the 'GetRepeats' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRoles(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoles' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRoles(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoles'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoles'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoles' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRouteDestinations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteDestinations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRouteDestinations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteDestinations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteDestinations'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteDestinations' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRouteLogForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRouteLogForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRouteLogForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRouteLogForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRouteLogForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetRouteLogForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetRoutesForServiceProviderOnDay(System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetRoutesForServiceProviderOnDay' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="dateOfRoutes">The value for the 'dateOfRoutes' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetRoutesForServiceProviderOnDay(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetRoutesForServiceProviderOnDay'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetRoutesForServiceProviderOnDay'.</param>
            <returns>The 'QueryResult' returned from the 'GetRoutesForServiceProviderOnDay' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetSalesTerms(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetSalesTerms' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetSalesTerms(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetSalesTerms'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetSalesTerms'.</param>
            <returns>The 'QueryResult' returned from the 'GetSalesTerms' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetServicesForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetServicesForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetServicesForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetServicesForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetServicesForRole'.</param>
            <returns>The 'QueryResult' returned from the 'GetServicesForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetServiceTemplatesForServiceProvider(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetServiceTemplatesForServiceProvider' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetServiceTemplatesForServiceProvider(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetServiceTemplatesForServiceProvider'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetServiceTemplatesForServiceProvider'.</param>
            <returns>The 'QueryResult' returned from the 'GetServiceTemplatesForServiceProvider' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetSubLocations(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetSubLocations' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetSubLocations(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetSubLocations'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetSubLocations'.</param>
            <returns>The 'QueryResult' returned from the 'GetSubLocations' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetTextBoxFields(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetTextBoxFields' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetTextBoxFields(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetTextBoxFields'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetTextBoxFields'.</param>
            <returns>The 'QueryResult' returned from the 'GetTextBoxFields' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetUnroutedRouteTasks(System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetUnroutedRouteTasks' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="selectedDate">The value for the 'selectedDate' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetUnroutedRouteTasks(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetUnroutedRouteTasks'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetUnroutedRouteTasks'.</param>
            <returns>The 'QueryResult' returned from the 'GetUnroutedRouteTasks' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLineItem(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLineItem' operation.
            </summary>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLineItem(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLineItem'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLineItem'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLineItem' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLineItemsForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLineItemsForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLineItemsForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLineItemsForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLineItemsForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLineItemsForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLog(System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLog' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="vehicleId">The value for the 'vehicleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLog(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLog'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLog'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLog' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehicleMaintenanceLogForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehicleMaintenanceLogForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetVehicleMaintenanceLogForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehicleMaintenanceLogForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehicleMaintenanceLogForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehicleMaintenanceLogForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginGetVehiclesForParty(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'GetVehiclesForParty' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndGetVehiclesForParty(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginGetVehiclesForParty'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginGetVehiclesForParty'.</param>
            <returns>The 'QueryResult' returned from the 'GetVehiclesForParty' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginPartyForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'PartyForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndPartyForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginPartyForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginPartyForRole'.</param>
            <returns>The 'QueryResult' returned from the 'PartyForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginPartyToAdministerForRole(System.Guid,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'PartyToAdministerForRole' operation.
            </summary>
            <param name="roleId">The value for the 'roleId' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndPartyToAdministerForRole(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginPartyToAdministerForRole'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginPartyToAdministerForRole'.</param>
            <returns>The 'QueryResult' returned from the 'PartyToAdministerForRole' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginTryGeocode(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'TryGeocode' operation.
            </summary>
            <param name="searchText">The value for the 'searchText' parameter of this action.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndTryGeocode(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginTryGeocode'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginTryGeocode'.</param>
            <returns>The 'IEnumerable`1' returned from the 'TryGeocode' operation.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.BeginSubmitChanges(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry},System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously invokes the 'SubmitChanges' operation.
            </summary>
            <param name="changeSet">The change-set to submit.</param>
            <param name="callback">Callback to invoke on completion.</param>
            <param name="asyncState">Optional state object.</param>
            <returns>An IAsyncResult that can be used to monitor the request.</returns>
        </member>
        <member name="M:FoundOps.Server.Services.CoreDomainService.CoreDomainContext.ICoreDomainServiceContract.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            </summary>
            <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
        </member>
        <member name="T:FoundOps.SLClient.Data.WebContext">
            <summary>
            Context for the RIA application.
            </summary>
            <remarks>
            This context extends the base to make application services and types available
            for consumption from code and xaml.
            </remarks>
        </member>
        <member name="M:FoundOps.SLClient.Data.WebContext.#ctor">
            <summary>
            Initializes a new instance of the WebContext class.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.WebContext.Current">
            <summary>
            Gets the context that is registered as a lifetime object with the current application.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if there is no current application,
            no contexts have been added, or more than one context has been added.
            </exception>
            <seealso cref="P:System.Windows.Application.ApplicationLifetimeObjects"/>
        </member>
        <member name="P:FoundOps.SLClient.Data.WebContext.User">
            <summary>
            Gets a user representing the authenticated identity.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1">
            <summary>
            A view model which encapsulates some standard collection logic/properties for an entity type.
            Properties: DomainCollectionView, SelectedEntity
            Commands: Add, Delete, Save, Discard Changes
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="T:FoundOps.SLClient.Data.ViewModels.CoreEntityVM">
            <summary>
            A view model which encapsulates some standard logic/properties for an entity.
            Commands: Save, Discard Changes
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.ViewModels.DataFedVM">
            <summary>
            A VM that requires data to be loaded.
            It will only update the data when there are controls that require this viewmodel.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.DataFedVM.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.ViewModels.DataFedVM"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.DataFedVM.DependentWhenVisible(System.Windows.FrameworkElement)">
            <summary>
            Whenever the dependentFrameworkElement is Loaded it will require this VM
            </summary>
            <param name="dependentFrameworkElement">The dependent FrameworkElement</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.DataFedVM.SubscribeWhenActive``1(System.IObservable{``0},System.Action{``0})">
            <summary>
            Whenever this ViewModel's ObservationState is Active, subscribe.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.DataFedVM.IsLoading">
            <summary>
            	<c>true</c> if this instance is loading; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.DataFedVM.IsLoadingObservable">
            <summary>
             An observable of the IsLoading stream
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.DataFedVM.ObservationState">
            <summary>
            The stream of ObservationState notifications
            </summary>
            <value>
                <c>ObservationState.Active</c> if there are > 0 ControlsThatCurrentlyRequireThisVM; 
                otherwise, <c>ObservationState.Suspended</c>.
            </value>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.DataFedVM.ControlsThatCurrentlyRequireThisVM">
            <summary>
             A list of controls that require this VM
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.DataFedVM.CurrentDispatcher">
            <summary>
            Gets the current dispatcher.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.DataManager">
            <summary>
            The DataManager.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.#ctor(FoundOps.SLClient.Data.Services.DataManager)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.ViewModels.CoreEntityVM"/> class.
            </summary>
            <param name="dataManager">The data manager.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.BeforeDiscardCommand">
            <summary>
            Before the discard command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.OnDiscard">
            <summary>
            Called when after changes are Discarded.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.BeforeSaveCommand">
            <summary>
            Before the save command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.OnSave(System.ServiceModel.DomainServices.Client.SubmitOperation)">
            <summary>
            Called after changes are saved.
            </summary>
            <param name="submitOperation">The submit operation.</param>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.SaveCommand">
            <summary>
            A command for saving changes.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.DiscardCommand">
            <summary>
            A command for discarding changes.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.NavigateToObservable">
            <summary>
            Publishes a stream of NavigateTo message uris (as strings)
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.Context">
            <summary>
            Gets or sets the CoreDomainContext.
            </summary>
            <value>
            The CoreDomainContext.
            </value>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.ContextManager">
            <summary>
            Gets the context manager.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.DiscardObservable">
            <summary>
            Gets an observable which streams the DateTimes discards are called.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.CanSaveObservable">
            <summary>
            Determines whether this instance can save (in addition to CanSave). This is now the preferred method over CanSave.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityVM.CanDiscardObservable">
            <summary>
            Determines whether this instance can discard.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DomainCollectionViewObservable">
            <summary>
            The DomainCollectionView observable.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DisableSaveDiscardCancel">
            <summary>
            Used to disable SaveDiscardCancel
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.CanAddSubject">
            <summary>
            An entry to the CanAddSubject to be updated by extended classes. NOTE: Make sure to merge with existing when extending.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.CanDeleteSubject">
            <summary>
            An entry to the CanDeleteSubject to be updated by extended classes. NOTE: Make sure to merge with existing when extending.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.KeepTrackLastSelectedEntity">
            <summary>
            An option to keep track of the last selected entity.
            Usually this prevents double code execution because bindings trigger SelectedEntity twice sometimes.
            In certain scenarios this will need to be set to false.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DirectSetSelectedEntity(`0)">
            <summary>
            Sets the SelectedEntity directly without executing the SelectedEntity Logic (SelectionChanged, etc).
            </summary>
            <param name="entity">The entity to set as selected.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.SetupMainQuery(System.Object,System.Action{Microsoft.Windows.Data.DomainServices.EntityList{`0}},System.String,System.Boolean)">
            <summary>
            Sets up the main query for loading Data. Will setup the IsLoadingObservable and the DomainCollectionView.
            </summary>
            <param name="queryKey">The query key.</param>
            <param name="action">Optional: An action to perform after loading the data.</param>
            <param name="sortBy">Optional: a SortDescription to add</param>
            <param name="selectFirstEntity">Optional: Whether or not to select the first entity. Defaults to true.</param>
            <returns>The EntityList Observable</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.BeforeDiscardCommand">
            <summary>
            If your logic is true, when overriding, call this at the end
            </summary>
            <returns>Whether you can discard</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.BeforeSaveCommand">
            <summary>
            If your logic is true, when overriding, call this at the end
            </summary>
            <returns>Whether you can save</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.AddNewEntity(System.Object)">
            <summary>
            The method called for the AddCommand to create an entity. Defaults to DomainCollectionView.AddNew()
            </summary>
            <param name="commandParameter">The command parameter.</param>
            <returns>The entity to add.</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DeleteEntity(`0)">
            <summary>
            The logic to delete an entity
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DomainContextHasRelatedChanges">
            <summary>
            Whether or not the DomainContext has related changes to this view model.
            This is used to prevent navigation.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.CanNavigateFrom(System.Action)">
            <summary>
            Determines whether this instance [can be navigated from]. If it can, then execute <param name="navigate"/> 
            </summary>
            <param name="navigate">The navigate action to execute, if this CanNavigateFrom.</param>
            <returns>
              <c>true</c> if this instance [can navigate from] the specified navigate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.BeforeSelectedEntityChanges(`0,`0)">
            <summary>
            Before the selected entity changes.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.EntityAdded">
            <summary>
            Called after an Entity is added
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.OnAddEntity(`0)">
            <summary>
            Called when an Entity is being added
            </summary>
            <param name="newEntity">The new entity.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.OnDeleteEntity(`0)">
            <summary>
            Called when an Entity is being deleted
            </summary>
            <param name="entityToDelete">The entity to delete.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.OnNavigateFrom">
            <summary>
            Logic to execute after navigating from this ViewModel
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.OnSelectedEntityChanged(`0,`0)">
            <summary>
            Called when the selected entity changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.CanAdd">
            <summary>
            Gets a value indicating whether this instance can add.
            </summary>
            <value>
              <c>true</c> if this instance can add; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.AddCommand">
            <summary>
            A command for adding an entity
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.CanDelete">
            <summary>
            Gets a value indicating whether this instance can delete.
            </summary>
            <value>
            	<c>true</c> if this instance can delete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DeleteCommand">
            <summary>
            A command for deleting an entity
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.DomainCollectionView">
            <summary>
            Gets or sets the domain collection view.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.SelectedEntityObservable">
            <summary>
            Gets the selected entity observable.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionVM`1.SelectedEntity">
            <summary>
            Gets or sets the selected entity.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.Manager">
            <summary>
            Imports all the manager classes
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.Manager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.Services.Manager"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.Manager.Analytics">
            <summary>
            Gets or sets the analytics.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.Manager.Context">
            <summary>
            Gets or sets the context manager.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.Manager.AggregateCatalogService">
            <summary>
            Gets or sets the aggregate catalog service.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.Manager.Data">
            <summary>
            Gets or sets the data manager.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.DataManager">
            <summary>
            Subscribes to ContextManager to load the proper data
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager._observationStateQueries">
            <summary>
            Stores each query's CombinedObservationState.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager._queriesIsLoadingSubjects">
            <summary>
            Stores each query's loading status observable.
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager._queriesEntityListObservables">
            <summary>
            Stores each query's entityList subject. NOTE: object is a BehaviorSubject'EntityList' (could not figure a way to make it covariant)
            It is a BehaviorSubject so that it remembers the last loaded entities
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.#ctor(FoundOps.SLClient.Data.Services.ContextManager,FoundOps.Server.Services.CoreDomainService.CoreDomainContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.Services.DataManager"/> class.
            </summary>
            <param name="contextManager">The context manager.</param>
            <param name="coreDomainContext">The core domain context.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.Subscribe``1(System.Object,System.IObservable{FoundOps.Common.Models.ObservationState},System.Action{Microsoft.Windows.Data.DomainServices.EntityList{``0}})">
            <summary>
            Subscribes to an EntityList IObservable that will publish as they are loaded.
            </summary>
            <param name="queryKey">The key of the query you want to subscribe to.</param>
            <param name="observableObservationState">The observable ObservationState watching the EntityList. 
            It will only update when the RoleId changes and at least one observable is active.</param>
            <param name="action">Action to invoke for each element in the observable sequence.</param>
            <returns>The isLoading Observable</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.GetIsLoadingObservable(System.Object)">
            <summary>
             Get the IsLoadingObservable for a Query.
            </summary>
            <param name="queryKey">The key of the query to track.</param>
            <returns>An Observable that tracks if a Query is loading.</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.GetEntityListObservable``1(System.Object)">
            <summary>
             Gets the EntityListObservable for a Query.
            </summary>
            <param name="queryKey">The key of the query to track.</param>
            <returns>An Observable that passes the loaded entity list.</returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.AddQuery``1(System.Object,System.Func{System.Guid,System.ServiceModel.DomainServices.Client.EntityQuery{``0}},System.ServiceModel.DomainServices.Client.EntitySet{``0},System.IObservable{System.Guid})">
            <summary>
            Add a Query to the DataManager.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="queryKey">The query.</param>
            <param name="entityQuery">The entity query function (it is passed the roleId).</param>
            <param name="entitySet">The entity set.</param>
            <param name="loadQuery">Optional: The query will load whenever this has changed. It defaults to the RoleId stream. </param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.SetupQuery``1(FoundOps.SLClient.Data.Services.DataManager.Query,System.Func{System.Guid,System.ServiceModel.DomainServices.Client.EntityQuery{``0}},System.ServiceModel.DomainServices.Client.EntitySet{``0})">
            <summary>
            Setup the Query on the DataManager. Register the EntityListObservable and setup the QueryExecution
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="query">The query.</param>
            <param name="entityQuery">The entity query function (it is passed the roleId).</param>
            <param name="entitySet">The entity set.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.SetupExecuteQueryHelper``1(System.Object,System.Func{System.Guid,System.ServiceModel.DomainServices.Client.EntityQuery{``0}},System.ServiceModel.DomainServices.Client.EntitySet{``0},System.IObservable{System.Guid})">
            <summary>
            Setup the ExecuteObservable and subscribe the query's execution to it.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="queryKey">The key of the query.</param>
            <param name="entityQuery">The entity query function (it is passed the roleId).</param>
            <param name="entitySet">The entity set.</param>
            <param name="loadQuery">Optional: The query will load whenever this has changed. It defaults to the RoleId stream. </param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.ExecuteQuery``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.Collections.Generic.IEnumerable{``0}},System.IObserver{System.Boolean})">
            <summary>
            Executes the query on the common CoreDomainContext.
            </summary>
            <typeparam name="T">The entity Type</typeparam>
            <param name="query">The EntityQuery.</param>
            <param name="response">The response.</param>
            <param name="isLoadingObserver">The is loading observer.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.SetupExecuteObservable(System.Object,System.IObservable{System.Guid})">
            <summary>
            Fires a stream of RoleIds when you should reload.
            This happens whenever an Observer is active and loadQuery (or the RoleId) has changed
            </summary>
            <param name="queryKey">The key of the query to setup the execute observable for</param>
            <param name="loadQuery">Optional: A Guid stream. The query will load whenever this has changed. It defaults to the RoleId stream. </param>
            <returns>
            An Observable that fires the RoleId whenever data should be updated.
            </returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.RemoveEntities(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity})">
            <summary>
            Removes the entities from the Context.
            </summary>
            <param name="entitiesToRemove">The entities to remove.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.DetachEntities(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity})">
            <summary>
            Detaches the entities from the Context.
            </summary>
            <param name="entitiesToDetach">The entities to detach.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.EnqueueSubmitOperation(System.Action{System.ServiceModel.DomainServices.Client.SubmitOperation})">
            <summary>
            Queues a SubmitOperation. Returns an observable which publishes the submitOperationCallback.
            </summary>
            <param name="action">An action to perform on completed.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.EnqueueSubmitOperation">
            <summary>
            Queues a SubmitOperation. Returns an observable which publishes the submitOperationCallback.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.PerformNextSubmitOperation">
            <summary>
            It dequeues the _nextSubmitOperationsQueue observables and performs a single SubmitOperation.
            When the SubmitOperation is completed it publishes the submitOperationCallback on the dequeued observables.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.DataManager.SaveDiscardCancelPrompt(System.Action,System.Action,System.Action,System.Action,System.Action,System.Action)">
            <summary>
            Open a Save Discard Cancel prompt (only one at a time).
            </summary>
            <param name="beforeSave">The action to perform after the user selects save.</param>
            <param name="afterSave">The action to perform after saving.</param>
            <param name="beforeDiscard">The action to perform after the user selects discard.</param>
            <param name="customDiscardAction">A replacement action for discarding.</param>
            <param name="afterDiscard">The action to perform after discarding.</param>
            <param name="afterCancel">The action to perform after canceling.</param>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.DataManager.ContextManager">
            <summary>
            The ContextManager
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.DataManager.Context">
            <summary>
            The CoreDomainContext
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.DataManager.Query">
            <summary>
            Each query of the DataManager.
            This is used to setup each query's: a) list of ObservationState observables and b) isLoading observable
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.BusinessAccounts">
            <summary>
             Loads all of the BusinessAccounts related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Clients">
            <summary>
             Loads all of the Clients related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Contacts">
            <summary>
             Loads all of the Contacts related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.ClientTitles">
            <summary>
             Loads all of the Contacts's ClientTitles related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Employees">
            <summary>
             Loads all of the Employee's related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.EmployeeHistory">
            <summary>
            Loads all of the EmployeeHistory related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Locations">
            <summary>
            Loads all of the Locations related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.RecurringServices">
            <summary>
            Loads all of the RecurringServices related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Regions">
            <summary>
            Loads all of the Regions related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.RouteLog">
            <summary>
            Loads all of the RouteLog related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Services">
            <summary>
            Loads all of the existing Services related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.ServiceTemplates">
            <summary>
            Loads all of the ServiceTemplates related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.UserAccounts">
            <summary>
            Loads all of the UserAccounts related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.Vehicles">
            <summary>
             Loads all of the Vehicle's related to the current RoleId
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.DataManager.Query.VehicleMaintenance">
            <summary>
            Loads all of the Vehicles' maintenance related to the current RoleId
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Tools.GetContextObservableValue">
            <summary>
            Gets the ContextObservable from the ContextManager for the ContextType, and returns the value whenever it changes. 
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Tools.GetContextObservableValue.ContextManagerProperty">
            <summary>
            ContextManager Dependency Property.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Tools.GetContextObservableValue.ContextManager">
            <summary>
            ContextManager
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Tools.GetContextObservableValue.ContextType">
            <summary>
            The ContextType to get the context observable for.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Tools.DataFedVMExtensions">
            <summary>
             Extensions methods for DataFedVM
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Tools.DataFedVMExtensions.DependentWhenVisible(System.Windows.FrameworkElement,FoundOps.SLClient.Data.ViewModels.DataFedVM)">
             <summary>
             Whenever the dependentFrameworkElement is Loaded it will require the DataFedVM
             </summary>
             <param name="dependentFrameworkElement">The dependent FrameworkElement</param>
            <param name="requiredVM">The required VM</param>
        </member>
        <member name="T:FoundOps.SLClient.Data.Models.RouteManifestSettings">
            <summary>
            Holds the RouteManifestSettings
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Models.RouteManifestSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.Models.RouteManifestSettings"/> class.
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.DesignData.BusinessAccountsDesignData">
            <summary>
            Setup Business Accounts (and ServiceTemplates)
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.Converters.ServiceTemplatesAddDeleteModeConverter">
            <summary>
            AddDeleteMode within FoundOPS context: AddDelete, all other serviceproviders: AddItemDelete.
            Return as int (workaround, because SetProperty on enum sometimes messes up). 
            </summary>
        </member>
        <member name="P:FoundOps.Core.Server.Blocks.BlocksData.SettingsBlock">
            <summary>
            Contains a page to setup UserAccountSettings and BusinessAccountSettings.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1">
            <summary>
            A view model which encapsulates some standard selected entities collection logic/properties for an entity type.
            On top of the <see cref="T:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1"/> Properties and Commands. This also includes:
            Properties: SelectedEntities, NotSelectedEntities
            Commands: AddExistingEntity
            <typeparam name="TEntity">The type of the entity.</typeparam>
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1.#ctor(FoundOps.SLClient.Data.Services.DataManager,FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection{`0},System.IObservable{Microsoft.Windows.Data.DomainServices.EntityList{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1"/> class.
            </summary>
            <param name="dataManager">The data manager.</param>
            <param name="selectedEntities">The selected entities collection.</param>
            <param name="loadedEntities">An Observable of the loaded entities.</param>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1.SelectedEntities">
            <summary>
            The selected entities.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1.NotSelectedEntities">
            <summary>
            Gets the not selected entities.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1.LoadedEntities">
            <summary>
            Gets the loaded entities.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreSelectedEntitiesCollectionVM`1.AddExistingEntityCommand">
            <summary>
            A command to add an existing entity to SelectedEntities.
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1">
            <summary>
            Contains logic for displaying things in the infinite accordion.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.EntityIsPartOfView(`0,System.Boolean)">
            <summary>
            Used by the Filter to determine if the current entity should be part of the view.
            This is generally relying on Context.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.UpdateFilter">
            <summary>
            Updates the filter.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.SelectedContextObservable">
            <summary>
            Gets the selected context observable. Updates whenever the SelectedEntity changes.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.SelectedContext">
            <summary>
            Gets the currently selected context.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.MoveToDetailsView">
            <summary>
            A command to move into this viewmodel's DetailsView.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.ObjectTypeProvided">
            <summary>
            Gets the object type provided for the InfiniteAccordion.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ViewModels.CoreEntityCollectionInfiniteAccordionVM`1.IsInDetailsView">
            <summary>
            Gets a value indicating whether this view model's ObjectTypeProvided is currently the main entity displayed.
            </summary>
            <value>
            	<c>true</c> if this instance is currently the main details view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:FoundOps.Core.Context.Tools.SimpleRouteCalculator.PopulateRoutes(System.Collections.Generic.IEnumerable{FoundOps.Core.Models.CoreEntities.RouteTask},System.Collections.Generic.IEnumerable{FoundOps.Core.Models.CoreEntities.Route})">
            <summary>
            Populates the routes.
            </summary>
            <param name="unroutedRouteTasks">The unrouted route tasks.</param>
            <param name="routesToPopulate">The routes to populate.</param>
            <returns>
            The tasks that were not routed.
            </returns>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.ContextManager">
            <summary>
            Manages the appication's contexts
            </summary>
        </member>
        <member name="F:FoundOps.SLClient.Data.Services.ContextManager._currentContextSubject">
            <summary>
            The CurrentContext. It publishes whenever a Context is Added, Removed.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.ContextManager.ClosestContext(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Gets the closest context of the types in order of the CurrentContextProvider.SelectedContext, then the last CurrentContext.
            </summary>
            <param name="types">The different types.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.ContextManager.#ctor(FoundOps.Core.Context.Services.IPartyDataService)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.Services.ContextManager"/> class.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.ContextManager.GetContext``1">
            <summary>
            Gets the infinite accordion context for a type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.ContextManager.GetContextObservable``1">
            <summary>
            An observable which publishes whenever a specific context type changes. Throttled every 250 milliseconds.
            </summary>
            <typeparam name="T">The type of context to track.</typeparam>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.RoleId">
            <summary>
            Gets the current roleId.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.RoleIdObservable">
            <summary>
             A distinct observable for the current RoleId. It will Replay the last RoleId.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.RoleIdObserver">
            <summary>
            An observer Guid of the current RoleId
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.OwnerAccountObservable">
            <summary>
            An observable Party of the current OwnerAccount
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.OwnerAccount">
            <summary>
            Gets the current owner account.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.UserAccountObservable">
            <summary>
            An observable of the current UserAccount
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.UserAccount">
            <summary>
            Gets the current user account.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.CurrentContextObservable">
            <summary>
            The current context provider Observable.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.CurrentContext">
            <summary>
            Gets or sets the current context.
            </summary>
            <value>
            The current context.
            </value>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.CurrentContextProviderObservable">
            <summary>
            The current context provider Observable.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.CurrentContextProvider">
            <summary>
            The current context provider.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.Services.ContextManager.ContextChangedObservable">
            <summary>
            Gets the context changed observable.
            It publishes whenever:
            a) the CurrentContext changes
            b) the CurrentContextProvider changes
            c) the CurrentContextProvider's SelectedContext changes
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1">
            <summary>
            Defines methods for manipulation a generic EntityCollection
            </summary>
            <typeparam name="TEntity">The type of the elements in the collection</typeparam>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Add(`0)">
            <summary>
            Add the specified entity to this collection. If the entity is unattached,
            it will be added to its System.ServiceModel.DomainServices.Client.EntitySet
            automatically.
            </summary>
            <param name="entity"> The entity to add</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Remove(`0)">
            <summary>
            Remove the specified entity from this collection.
            </summary>
            <param name="entity">The entity to remove</param>
        </member>
        <member name="P:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1.Count">
            <summary>
            Gets the current count of entities in this collection
            </summary>
        </member>
        <member name="E:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1.EntityAdded">
            <summary>
            Event raised whenever an System.ServiceModel.DomainServices.Client.Entity
            is added to this collection
            </summary>
        </member>
        <member name="E:FoundOps.Core.Models.CoreEntities.M2M4Ria.IEntityCollection`1.EntityRemoved">
            <summary>
            Event raised whenever an System.ServiceModel.DomainServices.Client.Entity
            is removed from this collection
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.M2M4Ria.EntityCollection`2">
            <summary>
            M2M-specific entity collection class. It vorms a view on the underlying jointable collection.
            </summary>
            <typeparam name="JoinType"></typeparam>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.M2M4Ria.EntityCollection`2.#ctor(System.ServiceModel.DomainServices.Client.EntityCollection{`0},System.Func{`0,`1},System.Action{`0},System.Action{`1})">
             <summary>
            
             </summary>
             <param name="collection">The collection of associations to which this collection is connected</param>
             <param name="getEntity">The function used to get the entity object out of a join type entity</param>
             <param name="setEntity">The function used to set the entity object in a join type entity</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.M2M4Ria.EntityCollection`2.MakeNotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Replaces JoinType elements in NotifyCollectionChangedEventArgs by elements of type TEntity
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.M2M4Ria.EntityCollection`2.Remove(`1)">
            <summary>
            Removes an m2m relation with the given entity.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.Analytics.AnalyticsManager">
            <summary>
            Manages analytics.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.Analytics.AnalyticsManager.#ctor(FoundOps.SLClient.Data.Services.ContextManager)">
            <summary>
            Initializes a new instance of the <see cref="N:FoundOps.SLClient.Data.Services.Analytics"/> class.
            </summary>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.Analytics.AnalyticsManager.DispatcherLayoutChanged">
            <summary>
            Analytic to track when the layout changes
            </summary>
        </member>
        <member name="T:FoundOps.SLClient.Data.ExportContext">
            <summary>
            Exports a common CoreDomainContext to be shared among the application.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.ExportContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.ExportContext"/> class.
            </summary>
        </member>
        <member name="P:FoundOps.SLClient.Data.ExportContext.CoreDomainContext">
            <summary>
            The CoreDomainContext to share among the application.
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.DesignData.RoutesDesignData.#ctor(FoundOps.Core.Models.CoreEntities.BusinessAccount,FoundOps.Core.Models.CoreEntities.DesignData.ClientsDesignData)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.DesignData.RoutesDesignData"/> class.
            </summary>
            <param name="ownerBusinessAccount">The owner business account.</param>
            <param name="clientsDesignData">The clients design data.</param>
        </member>
        <member name="T:FoundOps.SLClient.Data.Converters.LocationToUrlConverter">
            <summary>
            A converter that takes a location and returns a url with a (Location) QRCode
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.DesignData.LocationsDesignData.#ctor(FoundOps.Core.Models.CoreEntities.Party,FoundOps.Core.Models.CoreEntities.Client,System.Collections.Generic.IEnumerable{FoundOps.Core.Models.CoreEntities.Region},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.DesignData.LocationsDesignData"/> class.
            </summary>
            <param name="ownerParty">The party that created the locations.</param>
            <param name="client">The client that resides at the locations.</param>
            <param name="regions">The regions for the locations.</param>
            <param name="startIndex">The first location to add</param>
            <param name="numberItems">The number of locations to add</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Extensions.Services.ServiceTemplateExtensionMethods.GetDestination(FoundOps.Core.Models.CoreEntities.ServiceTemplate)">
            <summary>
            Gets the destination from the DestinationField
            </summary>
            <param name="serviceTemplate">The service template.</param>
            <returns>
            The destination location, or null if there is not one
            </returns>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.Extensions.Services.ServiceTemplateExtensionMethods.SetDestination(FoundOps.Core.Models.CoreEntities.ServiceTemplate,FoundOps.Core.Models.CoreEntities.Location)">
            <summary>
            Sets the destination field.
            </summary>
            <param name="serviceTemplate">The service template.</param>
            <param name="location">The location.</param>
            <returns>
            True if there is a destination field. False if there is not a destination field
            </returns>
        </member>
        <member name="F:FoundOps.Core.Models.CoreEntities.MonthlyFrequencyDetail.OnDayInMonth">
            <summary>
            FrequencyDetail is stored as an int.
            1-7 are reserved for WeeklyFrequencyDetail for the days of the week
            Ex. 1235 means Sunday, Monday, Tuesday, and Thursday
            </summary>
        </member>
        <member name="T:FoundOps.Core.Models.CoreEntities.RepeatEnumerator">
            <summary>
            Creates an enumerator which steps through each Repeat date until the end of the Repeat,
            until the <see param="endDate"/>, or until the end of time
            </summary>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Models.CoreEntities.Repeat)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Models.CoreEntities.Repeat,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
            <param name="endDate">The date to stop enumerating on</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.RepeatEnumerator.#ctor(FoundOps.Core.Models.CoreEntities.Repeat,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.RepeatEnumerator"/> class.
            </summary>
            <param name="repeat">The repeat to generate the enumerator from</param>
            <param name="endDate">The date to start enumerating on</param>
            <param name="endDate">The date to stop enumerating on</param>
        </member>
        <member name="M:FoundOps.Core.Models.CoreEntities.DesignData.RecurringServicesDesignData.#ctor(FoundOps.Core.Models.CoreEntities.Client)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.Core.Models.CoreEntities.DesignData.RecurringServicesDesignData"/> class.
            </summary>
            <param name="client">The client. The client must have locations.</param>
        </member>
        <member name="T:FoundOps.SLClient.Data.Services.Runtime.NavigatorDataService">
            <summary>
            Deprecated. TODO Remove.
            Gets information for the navigator.
            </summary>
        </member>
        <member name="M:FoundOps.SLClient.Data.Services.Runtime.NavigatorDataService.#ctor(FoundOps.Server.Services.CoreDomainService.CoreDomainContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FoundOps.SLClient.Data.Services.Runtime.NavigatorDataService"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
    </members>
</doc>
