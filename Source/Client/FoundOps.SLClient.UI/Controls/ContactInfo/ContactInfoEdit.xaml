<UserControl x:Class="FoundOps.SLClient.UI.Controls.ContactInfo.ContactInfoEdit" x:Name="myContactInfoEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns:Converters="clr-namespace:FoundOps.Core.Views.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
             xmlns:Triggers="clr-namespace:FoundOps.Common.Silverlight.Interactivity.Triggers;assembly=FoundOps.Common.Silverlight.UI" xmlns:ContactInfo="clr-namespace:FoundOps.SLClient.UI.Controls.ContactInfo"
             xmlns:Converters1="clr-namespace:FoundOps.Common.Silverlight.UI.Converters;assembly=FoundOps.Common.Silverlight.UI"
             mc:Ignorable="d" MinWidth="100">
    <UserControl.Resources>
        <Converters:OrderByTypeLabelConverter x:Key="OrderByTypeLabelConverter" />
        <Converters1:ConvertBackWhenExists x:Key="ConvertBackWhenExists" />
        <DataTemplate x:Key="ContactInfoTemplate">
            <StackPanel Orientation="Horizontal">
                <telerik:RadComboBox EditableTemplate="{StaticResource SL5BugWorkaround}" x:Name="TypesComboBox" Width="100" IsMouseWheelEnabled="False"
                                     ItemsSource="{Binding ContactInfoVM.ContactInfoDataService.ContactInfoTypes, RelativeSource={RelativeSource AncestorType=ContactInfo:ContactInfoEdit}}" 
                                     SelectedValue="{Binding Type, Mode=TwoWay, Converter={StaticResource ConvertBackWhenExists}}" />
                <telerik:RadComboBox EditableTemplate="{StaticResource SL5BugWorkaround}" x:Name="LabelsComboBox" MinWidth="100" IsEditable="True" IsMouseWheelEnabled="False" CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True" 
                                     StaysOpenOnEdit="True" TextSearchMode="Contains" OpenDropDownOnFocus="True"
                                     ItemsSource="{Binding ContactInfoVM.ContactInfoDataService.ContactInfoLabels, RelativeSource={RelativeSource AncestorType=ContactInfo:ContactInfoEdit}}"
                                     EmptyText="Label" Text="{Binding Label, Mode=TwoWay, Converter={StaticResource ConvertBackWhenExists}}" />
                <!--Bind Items to all of the currently used Labels of the Selected Info Type-->
                <telerik:RadMaskedTextBox MaskType="None" Width="180" EmptyContent="{Binding Type}" Value="{Binding Data, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
                <!--MaskType, EmptyContent, and Mask is bound to selected InfoType-->
                <Button Height="20">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <Triggers:ConfirmBeforeCommandTrigger ConfirmationString="Delete?" CommandParameter="{Binding}"
    							Command="{Binding ContactInfoVM.DeleteContactInfoCommand, ElementName=myContactInfoEdit}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="/FoundOps.Common.Silverlight;component/Resources/Delete.png" Stretch="Fill" />
                </Button>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" DataContext="{Binding ContactInfoVM, ElementName=myContactInfoEdit}">
        <toolkit:Expander Margin="5" Style="{StaticResource ExpanderStyle}" IsExpanded="true" BorderBrush="{StaticResource ContactBrush}">
            <toolkit:Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Contact Information" Margin="0,3,5,3" FontSize="13" Foreground="{StaticResource ContactBrush}" />
                </StackPanel>
            </toolkit:Expander.Header>
            <StackPanel HorizontalAlignment="Center">
                <ItemsControl x:Name="ContactInformation" ItemsSource="{Binding ContactInfoSet, Converter={StaticResource OrderByTypeLabelConverter}}"
				ItemTemplate="{StaticResource ContactInfoTemplate}" />
                <Button Content="Add Contact Information" Command="{Binding AddNewContactInfoCommand}" />
            </StackPanel>
        </toolkit:Expander>
    </Grid>
</UserControl>