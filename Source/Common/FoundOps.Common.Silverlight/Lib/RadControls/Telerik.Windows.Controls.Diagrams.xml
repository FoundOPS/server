<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Controls.Diagrams</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension">
            <summary>
            Represents a custom markup extension for creating arrow shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.ShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ArrowShapeType">
            <summary>
            The type of shape.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow5">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramCommands">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramCommands.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramCommands"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Align">
            <summary>
            Gets the align command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SwitchGridVisibility">
            <summary>
            Gets the SwitchGridVisibility command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Snap">
            <summary>
            Gets the snap command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.AutoFit">
            <summary>
            Gets the auto fit command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Copy">
            <summary>
            Gets the copy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Layout">
            <summary>
            Gets the layout command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Paste">
            <summary>
            Gets the paste.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Delete">
            <summary>
            Gets the delete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Cut">
            <summary>
            Gets the cut.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Undo">
            <summary>
            Gets the cut.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Redo">
            <summary>
            Gets the cut.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BringToFront">
            <summary>
            Gets the BringToFront.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BringForward">
            <summary>
            Gets the BringToFront.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SendToBack">
            <summary>
            Gets the BringToFront.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SendBackward">
            <summary>
            Gets the BringToFront.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Save">
            <summary>
            Gets or sets the save command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Clear">
            <summary>
            Gets or sets the clear command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Open">
            <summary>
            Gets or sets the open command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BeginEdit">
            <summary>
            Gets or sets the BeginEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.CommitEdit">
            <summary>
            Gets or sets the CommitEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.CancelEdit">
            <summary>
            Gets or sets the CancelEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SelectAll">
            <summary>
            Gets the SelectAll command.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommonShapeExtension">
            <summary>
            Represents a custom markup extension for creating common shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.CommonShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.ShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommonShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.EllipseShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RoundedRectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.CloudShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RightTriangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.TriangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.PentagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.HeptagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.HexagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.OctagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.CrossShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Cross2Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star5Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star6Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star7Shape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs">
            <summary>
            Represents command routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.ICommand,Telerik.Windows.Diagrams.Core.ExecuteAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="command">The command.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.ExecuteAction">
            <summary>
            Gets the execute action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs">
            <summary>
            Represents connection routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs">
            <summary>
            Represents connection serialziation routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connection">The connection.</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs">
            <summary>
            Represents items routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs.Items">
            <summary>
            Gets the associated items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs">
            <summary>
            Represents serialization routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IGraph,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="graph">The graph (diagram).</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs.Diagram">
            <summary>
            Gets the diagram.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs">
            <summary>
            Represents drag routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs">
            <summary>
            Represents ItemsChanged event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="newItems">The new items.</param>
            <param name="oldItems">The old items.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.NewItems">
            <summary>
            The new items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.OldItems">
            <summary>
            The old items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs">
            <summary>
            Represents resizing routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs">
            <summary>
            Represents rotated routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="oldPostion">The old postion.</param>
            <param name="newPostion">The new postion.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.OldAngle">
            <summary>
            Gets the old angle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.NewAngle">
            <summary>
            Gets the new angle.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs">
            <summary>
            Represents shape routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="shape">The shape.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs.Shape">
            <summary>
            Gets the shape.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs">
            <summary>
            Routed event argument related to a shape.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="shape">The shape.</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramBehaviors">
            <summary>
            Represents a class containing diagram behaviors exposed via attached properties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.TextWrappingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.TextElementForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.GetTextWrapping(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.SetTextWrapping(System.Windows.DependencyObject,System.Windows.TextWrapping)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.GetTextElementForeground(System.Windows.DependencyObject)">
            <summary>
            Gets the text element foreground.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.SetTextElementForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the text element foreground.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnTextElementForegroundPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [text element foreground property changed].
            </summary>
            <param name="d">The d.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnTextWrappingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [wrap text property changed].
            </summary>
            <param name="d">The d.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnSizeChangedForeground(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when [size changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension">
            <summary>
            Represents a custom markup extension for creating flow chart shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.ShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.BeginLoopShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CardShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CollateShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CreateRequestShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database1Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database2Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database3Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DataStoreShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DecisionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DelayShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DevidedProcessShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DirectDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DisplayShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DuplicatingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ExternalDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.FeedbackShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.FramedRectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.InternalStorageShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.LinedDocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.LoopLimitShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ManualInputShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ManualOperationShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MessageFromUserShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MessageToUserShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MicroformProcessingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MicroformRecordingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MultipleDocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageConnectionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageLinkShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageReflectionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OrShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PaperTapeShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PredefinedShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PreparationShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PrimitiveFromCallShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PrimitiveToCallShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SequentialDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SortShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.StartShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.StoredDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SummingJunctionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.TerminatorShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.TransmittalTapeShape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.AdornerSurface">
            <summary>
            Represents the adorner surface.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint">
            <summary>
            Represents a manipulation point for connections.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl">
            <summary>
            Represents a manipulation point for connections.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.TypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.PositionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.UpdateDisplayElement">
            <summary>
            Updates the display element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.OnPositionChanged">
            <summary>
            Called when position changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationPointControl.IsMouseOver">
            <summary>
            Gets a value indicating whether this instance is mouse over.
            </summary>
            <value>
            	<c>True</c> if this instance is mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.#ctor(Telerik.Windows.Diagrams.Core.ManipulationPointType,System.Windows.Point,Telerik.Windows.Controls.RadDiagramConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="type">The type.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.Telerik#Windows#Diagrams#Core#IConnectionManipulationPoint#UpdateDisplayElement">
            <summary>
            Updates the display element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.UpdateDisplayElement">
            <summary>
            Updates the display element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.OnPositionChanged">
            <summary>
            Called when position changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>True</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.IsManipulating">
            <summary>
            Gets or sets a value indicating whether this instance is manipulating.
            </summary>
            <value>
            	<c>True</c> if this instance is manipulating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationPoint.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl">
            <summary>
            Represents a connector point.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.#ctor(Telerik.Windows.Diagrams.Core.ManipulationPointType,Telerik.Windows.Diagrams.Core.ConnectorPosition,Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="connectorPosition">The connector position.</param>
            <param name="shape">The shape.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>True</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorControl.ConnectorPosition">
            <summary>
            Gets the connector position.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel">
            <summary>
            Represents a panel that layouts the connectors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement"/>-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"/> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramSurface">
            <summary>
            Represents the diagram surface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramSurface.IsVirtualizingProperty">
            <summary>
            Identifies the IsVirtualizationEnabled attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.GetIsVirtualizing(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether the virtualization is enabled.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether the virtualizion is enabled.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">If set to <c>true</c> virtualization is enabled.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector">
            <summary>
            Represents an informatio tip template selector.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null. The default value is null.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.SizeChangedTemplate">
            <summary>
            Gets or sets the size changed template.
            </summary>
            <value>
            The size changed template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.PositionChangedTemplate">
            <summary>
            Gets or sets the position changed template.
            </summary>
            <value>
            The position changed template.
            </value>		
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.RotationChangedTemplate">
            <summary>
            Gets or sets the rotation changed template.
            </summary>
            <value>
            The rotation changed template.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner">
            <summary>
            Represents an item information adorner.
            </summary>	
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipProperty">
            <summary>
            Identifies the InformationTip dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.AdditionalContentProperty">
            <summary>
            Identifies the AdditionalContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipTemplateSelectorProperty">
            <summary>
            Identifies the InformationTipTemplateSelector dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.GetAdditionalContent(System.Windows.DependencyObject)">
            <summary>
            Gets the content of the additional.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.SetAdditionalContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the content of the additional.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.IsAdditionalContentVisibleChanged">
            <summary>
            Indicates when the IsAdditionalContentVisible property changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipTemplateSelector">
            <summary>
            Gets or sets the information tip template selector.
            </summary>
            <value>
            The information tip template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTip">
            <summary>
            Gets or sets the information tip.
            </summary>
            <value>
            The information tip.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.IsAdditionalContentVisible">
            <summary>
            Indicates whether the additional content is visible or not.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner">
            <summary>
            Represents a manipulation adorner.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsResizingEnabledProperty">
            <summary>
            Identifies the IsResizingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsRotationEnabledProperty">
            <summary>
            Identifies the IsRotationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsConnectionAdornerActiveProperty">
            <summary>
            Identifies the IsConnectionAdornerActive dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ZoomLevelProperty">
            <summary>
            Identifies the ZoomLevel dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Update(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Updates the specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="show">If set to <c>true</c> [show].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.GetRotationElementBounds">
            <summary>
            Gets the bounds of the rotation element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.DiagramHost">
            <summary>
            Gets or sets the hosting diagram.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            	<c>true</c> if rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsResizingEnabled">
            <summary>
            Gets or sets a value indicating whether resizing is enabled.
            </summary>
            <value>
            	<c>true</c> if tresizing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Position">
            <summary>
            Gets or sets the position of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsConnectionAdornerActive">
            <summary>
            Gets or sets a value indicating whether connection adorner is active.
            </summary>
            <value>
            	<c>True</c> if connection adorner is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ZoomLevel">
            <summary>
            Gets or sets the zoom level.
            </summary>
            <value>
            The zoom level.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagram">
            <summary>
            Telerik diagramming control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#GetShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the shape container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#GetConnectionContainerForItemOverride(System.Object)">
            <summary>
            Gets the connection container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#IsItemItsOwnConnectionContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own connection container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own connection container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#IsItemItsOwnShapeContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own shape container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own shape container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#PrepareShapeContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#PrepareConnectionContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#CleanContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Cleans the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the shape container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetConnectionContainerForItemOverride(System.Object)">
            <summary>
            Gets the connection container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsItemItsOwnConnectionContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own connection container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own connection container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsItemItsOwnShapeContainerOverride(System.Object)">
            <summary>
            Determines whether the item is a container on its own.
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if the item is its own container; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PrepareShapeContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PrepareConnectionContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.CleanContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Cleans the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> class. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.UpdateAdorners">
            <summary>
            Updates the adorners.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnInitializedServices(Telerik.Windows.Diagrams.Core.IServiceLocator)">
            <summary>
            Called when services are initialized.
            </summary>
            <param name="serviceLocator">The service locator.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnPositionXChanged">
            <summary>
            Called when the X coordinate fo the viewport changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnPositionYChanged">
            <summary>
            Called when Y coordinate fo the viewport changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnZoomChanged(System.Double,System.Double)">
            <summary>
            Called when the zoom value changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnKeyDownHandled(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.KeyDown"/> (even handled) event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel is used to zoom the diagram.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DeserializedEvent">
            <summary>
            Identifies the Deserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SerializedEvent">
            <summary>
            Identifies the Serialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeClickedEvent">
            <summary>
            Identifies the ShapeClicked routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeDoubleClickedEvent">
            <summary>
            Identifies the ShapeDoubleClicked routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ItemsChangedEvent">
            <summary>
            Identifies the ItemsChanged routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeSerializedEvent">
            <summary>
            Identifies the ShapeSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.MetadataSerializedEvent">
            <summary>
            Identifies the MetadataSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.MetadataDeserializedEvent">
            <summary>
            Identifies the MetadataDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeDeserializedEvent">
            <summary>
            Identifies the ShapeDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionSerializedEvent">
            <summary>
            Identifies the ConnnectionSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionDeserializedEvent">
            <summary>
            Identifies the ConnectionDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.CommandExecutedEvent">
            <summary>
            Identifies the CommandExecuted routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewResizeEvent">
            <summary>
            Identifies the PreviewResize routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ResizeEvent">
            <summary>
            Identifies the Resize routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewDragEvent">
            <summary>
            Identifies the PreviewDrag routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewRotateEvent">
            <summary>
            Identifies the PreviewRotate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.RotateEvent">
            <summary>
            Identifies the Rotate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DragEvent">
            <summary>
            Identifies the DragEvent routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewSelectionChangedEvent">
            <summary>
            Identifies the PreviewSelectionChanged routed event. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.UpdateRectSelection(System.Windows.Rect)">
            <summary>
            Updates the rect selection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PublishDiagramEvent(Telerik.Windows.Diagrams.Core.DiagramEvent,System.Object)">
            <summary>
            Raises generic event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PositionXProperty">
            <summary>
            Identifies the PositionX dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PositionYProperty">
            <summary>
            Identifies the PositionY dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ZoomProperty">
            <summary>
            Identifies the Zoom dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.RectSelectionModeProperty">
            <summary>
            Identifies the RectSelectionMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionRectangleStyleProperty">
            <summary>
            Identifies the SelectionRectangleStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.GraphSourceProperty">
            <summary>
            Identifies the GraphSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeTemplateProperty">
            <summary>
            Identifies the ShapeTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeTemplateSelectorProperty">
            <summary>
            Identifies the ShapeTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateProperty">
            <summary>
            Identifies the ShapeEditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateSelectorProperty">
            <summary>
            Identifies the ShapeEditTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectorStyleProperty">
            <summary>
            Identifies the ConnectorStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateProperty">
            <summary>
            Identifies the ConnectionTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateSelectorProperty">
            <summary>
            Identifies the ConnectionTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateProperty">
            <summary>
            Identifies the ConnectionEditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateSelectorProperty">
            <summary>
            Identifies the ConnectionEditTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionStyleProperty">
            <summary>
            Identifies the ConnectionStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionStyleSelectorProperty">
            <summary>
            Identifies the ConnectionStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ActiveToolProperty">
            <summary>
            Identifies the ActiveTool dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsSnapEnabledProperty">
            <summary>
            Identifies the IsSnapEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsResizingEnabledProperty">
            <summary>
            Identifies the IsResizingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsRotationEnabledProperty">
            <summary>
            Identifies the IsRotationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SnapValueProperty">
            <summary>
            Identifies the SnapValue dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsBackgroundSurfaceVisibleProperty">
            <summary>
            Identifies the IsBackgroundSurfaceVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsEditableProperty">
            <summary>
            Identifies the IsEditable dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsDraggingEnabledProperty">
            <summary>
            Identifies the IsDraggingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsPanEnabledProperty">
            <summary>
            Identifies the IsPanEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsZoomEnabledProperty">
            <summary>
            Identifies the IsZoomEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsConnectorsManipulationEnabledProperty">
            <summary>
            Identifies the IsConnectorsManipulationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowDeleteProperty">
            <summary>
            Identifies the AllowDelete dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowCutProperty">
            <summary>
            Identifies the AllowCut dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowCopyProperty">
            <summary>
            Identifies the AllowCopy dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowPasteProperty">
            <summary>
            Identifies the AllowPaste dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Layout(Telerik.Windows.Diagrams.Core.SugiyamaSettings)">
            <summary>
            Layouts the diagram.
            </summary>
            <param name="settings">The parametrization of the layout. If <c>null</c> default values will be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source or start shape of the connection.</param>
            <param name="target">The target or end shape of the connection.</param>
            <returns></returns>
            <param name="isUndoable">If set to <c>true</c> this action will be recored in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.ConnectorPosition)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source or start shape of the connection.</param>
            <param name="target">The target or end shape of the connection.</param>
            <param name="connectorsPosition">The connectors position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.ConnectorPosition,Telerik.Windows.Diagrams.Core.ConnectorPosition,System.Boolean)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="sourceConnectorPosition">The source connector position.</param>
            <param name="targetConnectorPosition">The target connector position.</param>
            <param name="isUndoable">If set to <c>true</c> is undoable.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Adds a floating connection.
            </summary>
            <param name="startPoint">The source (starting) point of the connection.</param>
            <param name="endPoint">The target (end) point of the connection.</param>
            <param name="isUndoable">True, if this action is undoable.</param>
            <returns>Returns the added connection.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IConnection,System.Boolean)">
            <summary>
            Adds a new connection to the diagram.
            </summary>
            <param name="connection">The connection to be added.</param>
            <param name="isUndoable">If set to <c>true</c> this action will be recored in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(System.Object,System.Windows.Media.Geometry,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds a new shape to the diagram.
            </summary>
            <param name="content">Content of the shape.</param>
            <param name="geometry">The geometry.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(Telerik.Windows.Diagrams.Core.IShape,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds the shape.
            </summary>
            <param name="shape">The shape.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the specified info.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.RemoveConnection(Telerik.Windows.Diagrams.Core.IConnection,System.Boolean)">
            <summary>
            Removes the connection.
            </summary>
            <param name="connection">The connection.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.RemoveShape(Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Removes the shape.
            </summary>
            <param name="shape">The shape.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ZoomIn(System.Double,System.Nullable{System.Windows.Point})">
            <summary>
            Zooms in the diagram.
            </summary>
            <param name="factor">The factor.</param>
            <param name="targetPoint">To point.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ZoomOut(System.Double,System.Nullable{System.Windows.Point})">
            <summary>
            Zooms out the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Clear">
            <summary>
            Clears the diagram and resets the document.
            </summary>
            <remarks>
            The diagram is not saved prior to this reset. You need to handle in the
            application the eventual necessity to save (or request the user) the diagram
            before this.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Cut">
            <summary>
            Cuts the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Copy">
            <summary>
            Copies the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Delete">
            <summary>
            Deletes the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Paste">
            <summary>
            Pastes the content of the clipboard onto the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Undo">
            <summary>
            Performs undo on the last action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Redo">
            <summary>
            Performs redo on the last undone action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BeginBatchTransformation">
            <summary>
            Begins a batch transformation and signals the undoredo stack that a
            batch of transformation should be considered as one, i.e. a composite change.
            </summary>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.CommitBatchTransformation"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.CommitBatchTransformation">
            <summary>
            Commits the batch transformation and ends the composite undoredo change.
            </summary>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.BeginBatchTransformation"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AutoFit(System.Windows.Thickness)">
            <summary>
            Zoom and pans the diagram in such a way that it fits into the currently visible aread of the canvas.
            </summary>
            <param name="margin">The margin to be used as whitespace border around the diagram items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AutoFit">
            <summary>
            Zoom and pans the diagram in such a way that it fits into the currently visible aread of the canvas.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.SelectAll">
            <summary>
            Selects all shapes in the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.DeselectAll">
            <summary>
            Deselects all shapes in the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetTransformedPoint(System.Windows.Point)">
            <summary>
            Applies the panning and zooming for the point and returns the transformed point.
            </summary>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Save">
            <summary>
            Saves the diagram.
            </summary>
            <returns>Returns the serialization string.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Load(System.String)">
            <summary>
            Loads the specified serialization string.
            </summary>
            <param name="serializationValue">The serialization value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetConnectionsForShape(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Gets the connections for shape.
            </summary>
            <param name="shape">The shape.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetIncomingConnectionsForShape(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Gets the incoming connections for shape.
            </summary>
            <param name="shape">The shape.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetOutgoingConnectionsForShape(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Gets the outgoing connections for shape.
            </summary>
            <param name="shape">The shape.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsInViewport(Telerik.Windows.Diagrams.Core.IDiagramItem)">
            <summary>
            Checks if the diagram item is in the viewport.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ItemsChanged">
            <summary>
            Occurs when count of the items change.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Deserialized">
            <summary>
            Occurs when the diagram has been deserialized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Serialized">
            <summary>
            Occurs after the diagram has been serialized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeClicked">
            <summary>
            Occurs when shape is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeDoubleClicked">
            <summary>
            Occurs when a shape has been double-clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.MetadataSerialized">
            <summary>
            Occurs when the diagram's metadata has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized">
            <summary>
            Occurs when the diagram's metadata has been deserialized.
            </summary>
            <remarks>The event allows you to deserialize the additional data added, if any, using the <see cref="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized"/> event handler.</remarks>
            <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized">
            <summary>
            Occurs when a shape has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ShapeDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeDeserialized">
            <summary>
            Occurs when a shape has been deserialized.
            </summary>
            <remarks>The event allows you to deserialize the additional data added, if any, using the <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/> event handler.</remarks>
            <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionSerialized">
            <summary>
            Occurs when a connection has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ConnectionDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionDeserialized">
            <summary>
            Occurs when a connection has been deserialized.
            </summary>
            <remarks>This event allows you to recover additional, application specific data from the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ConnectionSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.CommandExecuted">
            <summary>
            Occurs when a command is executed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewResize">
            <summary>
            Occurs before an item is resized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Resize">
            <summary>
            Occurs when an item is resized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Drag">
            <summary>
            Occurs when an item is dragged.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewDrag">
            <summary>
            Occurs before an item is dragged.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewRotate">
            <summary>
            Occurs before an item is rotated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Rotate">
            <summary>
            Occurs when an item is rotated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.SelectionChanged">
            <summary>
            Occurs when the selection of the diagram changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewSelectionChanged">
            <summary>
            Occurs when the selection of the diagram starts changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.SelectionBoundsChanged">
            <summary>
            Occurs when the selection bounds of the diagram changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IgnoreLinkDirection">
            <summary>
            Gets or sets a value indicating whether the underlying graph structure is a directional graph.
            </summary>
            <value>
            <c>True</c> if link directions are ignored; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ActiveTool">
            <summary>
            Gets or sets the tool which is active when interacting with the diagram elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.PositionX">
            <summary>
            Gets or sets the X coordinate of the viewport.
            </summary>
            <value>
            The position X.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.PositionY">
            <summary>
            Gets or sets Y coordinate of the viewport.
            </summary>
            <value>
            The positionX.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
            <remarks>A zoom value of one means 100% and less then one means a zoom out.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Viewport">
            <summary>
            Gets the bounds of the viewport.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Shapes">
            <summary>
            Gets the shapes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Connections">
            <summary>
            Gets the connections.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Metadata">
            <summary>
            Gets the diagram metadata.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsSnapEnabled">
            <summary>
            Gets or sets a value indicating whether grid snapping is enabled.
            </summary>
            <value>
            	<c>True</c> if grid snapping is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SnapValue">
            <summary>
            Gets or sets the snap value.
            </summary>
            <value>
            The snap value.
            </value>
            <seealso cref="P:Telerik.Windows.Controls.RadDiagram.IsSnapEnabled"/>	
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsBackgroundSurfaceVisible">
            <summary>
            Gets or sets whether the background grid is visible.
            </summary>	
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsMouseCaptured">
            <summary>
            Gets or sets a value indicating whether the mouse is captured.
            </summary>
            <value>
            	<c>True</c> if the mouse is captured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            	<c>true</c> if this rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsResizingEnabled">
            <summary>
            Gets or sets a value indicating whether resizing is enabled.
            </summary>
            <value>
            	<c>True</c> if resizing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsEditable">
            <summary>
            Gets or sets a value indicating whether editing is enabled.
            </summary>
            <value>
              <c>True</c> if editting is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsDraggingEnabled">
            <summary>
            Gets or sets a value indicating whether dragging is enabled.
            </summary>
            <value>
              <c>True</c> if dragging is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled.
            </summary>
            <value>
              <c>True</c> if panning is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
            <value>
              <c>True</c> if zooming is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsConnectorsManipulationEnabled">
            <summary>
            Gets or sets a value indicating whether manipulation on the connectors is enabled.
            </summary>
            <value>
              <c>True</c> if manipulation on connectors is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowDelete">
            <summary>
            Gets or sets a value indicating whether deleting is allowed.
            </summary>
            <value>
              <c>True</c> if deleting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowCut">
            <summary>
            Gets or sets a value indicating whether cutting is allowed.
            </summary>
            <value>
              <c>True</c> if cutting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowCopy">
            <summary>
            Gets or sets a value indicating whether copying is allowed.
            </summary>
            <value>
              <c>True</c> if copying is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowPaste">
            <summary>
            Gets or sets a value indicating whether pasting is allowed.
            </summary>
            <value>
              <c>True</c> if pasting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.GraphSource">
            <summary>
            Gets or sets the graph source.
            </summary>
            <value>
            The graph source.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Items">
            <summary>
            Gets or sets the diagramming items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionRectangleStyle">
            <summary>
            Gets or sets the style of the selection rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.DisplayMemberPath">
            <summary>
            Gets or sets the display member path.
            </summary>
            <value>
            The display member path.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeTemplate">
            <summary>
            Gets or sets the shape template.
            </summary>
            <value>
            The shape template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeTemplateSelector">
            <summary>
            Gets or sets the shape template selector.
            </summary>
            <value>
            The shape template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplate">
            <summary>
            Gets or sets the shape edit template.
            </summary>
            <value>
            The shape edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateSelector">
            <summary>
            Gets or sets the shape edit template selector.
            </summary>
            <value>
            The shape edit template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeStyle">
            <summary>
            Gets or sets the shape style.
            </summary>
            <value>
            The shape style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectorStyle">
            <summary>
            Gets or sets the connector style.
            </summary>
            <value>
            The connector style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeStyleSelector">
            <summary>
            Gets or sets the shape style selector.
            </summary>
            <value>
            The shape style selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionTemplate">
            <summary>
            Gets or sets the connection template.
            </summary>
            <value>
            The connection template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateSelector">
            <summary>
            Gets or sets the connection template selector.
            </summary>
            <value>
            The connection template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplate">
            <summary>
            Gets or sets the connection edit template.
            </summary>
            <value>
            The connection edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateSelector">
            <summary>
            Gets or sets the connection edit template selector.
            </summary>
            <value>
            The connection edit template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionStyle">
            <summary>
            Gets or sets the connection style.
            </summary>
            <value>
            The connection style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionStyleSelector">
            <summary>
            Gets or sets the connection style selector.
            </summary>
            <value>
            The connection style selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.RectSelectionMode">
            <summary>
            Gets or sets the rect selection mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ContainerGenerator">
            <summary>
            Gets the container generator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.UndoRedoService">
            <summary>
            Gets the undo redo service.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedItem">
            <summary>
            Gets or sets the first item in the current selection or returns null if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedIndex">
            <summary>
            Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionBounds">
            <summary>
            Gets the selection bounds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionDetached">
            <summary>
            Occurs when a connection is detached.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionAttached">
            <summary>
            Occurs when a connection is attached.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionDetaching">
            <summary>
            Occurs when a connection is being detached.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionAttaching">
            <summary>
            Occurs when a connection is being attached.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.#ctor">
            <summary>
            Initializes a new instance of the RadRoutedEditEventArgs class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.#ctor(Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the RadRoutedEditEventArgs class, 
            using the supplied routed event identifier. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the RadRoutedEditEventArgs class, using 
            the supplied routed event identifier, and providing the opportunity 
            to declare a different source for the event. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the RadRoutedEditEventArgs class, using 
            the supplied routed event identifier, and providing the opportunity 
            to declare a different source for the event. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="editedContent">
            The result of the edit operation. 
            </param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.EditedContent">
            <summary>
            Gets the result of the edit operation. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper">
            <summary>
            Represents a graph paper control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.CellSizeProperty">
            <summary> 
            Identifies the CellSize attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineStrokeDashArrayProperty">
            <summary> 
            Identifies the LineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineStrokeProperty">
            <summary> 
            Identifies the LineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineThicknessProperty">
            <summary> 
            Identifies the LineThickness attached property.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetCellSize(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper cell size.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line stroke.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line stroke dash array.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line thickness.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetCellSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the size of the graph paper cell.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the graph paper line stroke.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the graph paper line stroke dash array.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the graph paper line thickness.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.GeometryConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.GeometryFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreatePolyline(System.Nullable{System.Windows.Point},System.Nullable{System.Windows.Point},System.Windows.Point[])">
            <summary>
            Creates the polyline.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreatePolyline(System.Windows.Point,System.Windows.Point,System.Windows.Point[],Telerik.Windows.Diagrams.Core.CapType,Telerik.Windows.Diagrams.Core.CapType,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the polyline.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="points">The points.</param>
            <param name="startCapType">Start type of the cap.</param>
            <param name="endCapType">End type of the cap.</param>
            <param name="startCapWidth">Start width of the cap.</param>
            <param name="startCapHeight">Start height of the cap.</param>
            <param name="endCapWidth">End width of the cap.</param>
            <param name="endCapHeight">End height of the cap.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateRectangle(System.Windows.Point,System.Windows.Size)">
            <summary>
            Creates a rectagnle.
            </summary>
            <param name="startPoint">The upper left point.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreatePolygon(System.Windows.Point,System.Windows.Point,System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Creates a polygone.
            </summary>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateEllipse(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Creates an ellipse.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreatePathGeometry(System.Windows.Point,System.Collections.Generic.List{System.Windows.Media.PathSegment})">
            <summary>
            Creates a geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="pathSegments">The path segments.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.GetPolylineFigure(System.Nullable{System.Windows.Point},System.Nullable{System.Windows.Point},System.Windows.Point[])">
            <summary>
            Gets the polyline figure.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.FindIntersection(System.Windows.Point,System.Windows.Point,System.Windows.Media.Geometry,System.Double,System.Boolean)">
            <summary>
            Finds the intersection.
            </summary>
            <param name="sourcePoint">The source point.</param>
            <param name="targetPoint">The target point.</param>
            <param name="geometry">The geometry.</param>
            <param name="edgeThick">The edge thick.</param>
            <param name="isArrow">If set to <c>true</c> [is arrow].</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.GetDoubleArrowPoints(System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Gets the points of a double arrow.
            </summary>
            <param name="startPoint">The start point of the arrow - the tip of the arrow.</param>
            <param name="endPoint">The end point of the line of the arrow.</param>
            <param name="arrowWidth">The width of the arrow.</param>
            <param name="arrowHeight">The height of the arrow.</param>
            <returns>Returns the points of an arrow in the order:
            Point1: the left point of the first arrow.
            Point2: the base point of the first arrow.
            Point3: the left point of the second arrow.
            Point4: the base point of the second arrow.
            Point5: the right point of the second arrow.
            Point6: the right point of the first arrow.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.GetArrowPoints(Telerik.Windows.Diagrams.Core.CapType,System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Gets the points of an arrow.
            </summary>
            <param name="type">The type of arrow.</param>
            <param name="startPoint">The start point - the tip of the arrow.</param>
            <param name="endPoint">The end of the line of the arrow.</param>
            <param name="arrowWidth">The width of the arrow.</param>
            <param name="arrowHeight">The height of the arrow.</param>
            <returns>Returns the points of an arrow in the order: base arrow point, left arrow head point, right arrow head point.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateArrow(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)">
            <summary>
            Creates an arrow based from the specified points.
            </summary>
            <param name="startPoint">The start point - the tip of the arrow.</param>
            <param name="arrowPoint1">The arrow point1 - the left end point from the start-base line.</param>
            <param name="arrowPoint2">The arrow point2 - the right end points from the start-base line.</param>
            <param name="basePoint">The base point of the arrow - the end of the arrow's head.</param>
            <param name="isClosed">If set to <c>true</c> the arrow will be closed.</param>
            <param name="isFilled">If set to <c>true</c> the arrow's head will be filled.</param>
            <returns>Returns a figure of an arrow.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateDoubleArrow(System.Windows.Point,System.Tuple{System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Creates a two arrows one after another from the specified points.
            </summary>
            <param name="startPoint">The start points - the tip of the arrow.</param>
            <param name="points">The points of the double arrow:
            Point1 : the left arrow head point of the first arrow.
            Point2 : the base arrow point of the first arrow.
            Point3 : the left arrow head point of the second arrow.
            Point4 : the base arrow point of the second arrow.
            Point5 : the right arrow point of the second arrow.
            Point6 : the right arrow point of the first arrow.
            </param>
            <param name="isClosed">If set to <c>true</c> the arrow will be closed.</param>
            <param name="isFilled">If set to <c>true</c> the arrow's head will be filled.</param>
            <returns>Returns a figure of a double arrow.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateDiamond(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Creates a diamong from the specified points.
            </summary>
            <param name="startPoint">The start point - the tip of the diamond.</param>
            <param name="diamondPoint1">The first corner of the diamond.</param>
            <param name="diamondPoint2">The opposite corner to the start of the diamond.</param>
            <param name="diamondPoint3">The second corner of the diamond.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryFactory.CreateCircle(System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Creates a circle from the specified points.
            </summary>
            <param name="startPoint">The start point - where the circle should end.</param>
            <param name="endPoint">The end point - the opposite point to the start - mirror against the center.</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryHelper.Clone(System.Windows.Media.Geometry)">
            <summary>
            Clones the specified geometry.
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryInternalParser.Parse(System.String)">
            <summary>
            Parses the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.GeometryParser">
            <summary>
            Utility to convert between a geometry and its string representation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryParser.GetString(System.Windows.Media.Geometry)">
            <summary>
            Main back conversion routine - converts PathGeometry object to its string equivalent.
            </summary>
            <param name="geometry">Path Geometry object.</param>
            <returns>String equivalent to PathGeometry contents.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryParser.GetGeometry(System.String)">
            <summary>
            Main parser routine, which loops over each char in received string, and performs actions according to command/parameter being passed.
            </summary>
            <param name="path">String with path data definition.</param>
            <returns>PathGeometry object created from string definition.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryParser.GetNumericListSeparator(System.IFormatProvider)">
            <summary>
            Gets the numeric list separator.
            </summary>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.SerializationExtensions">
            <summary>
            Utilities related to the (de)serialization.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThicknessInfo(System.Windows.Thickness)">
            <summary>
            Returns a serialized form of the given thickness.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns></returns>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThickness(System.String)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThickness(System.String)">
            <summary>
            Returns a Thickness on the basis of the given string.
            </summary>
            <param name="serializationValue">The serialized thickness.</param>
            <returns></returns>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThicknessInfo(System.Windows.Thickness)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.ToOpenTypeWeight(System.Windows.FontWeight)">
            <summary>
            Returns an int representation of the weight and implements the missing method found in WPF.
            </summary>
            <param name="weight">The weight.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.FromOpenTypeWeight(System.Windows.FontWeight,System.Int32)">
            <summary>
            Returns a weight corresponding to the serialed number.
            </summary>
            <param name="weight">The weight.</param>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeFactory">
            <summary>
            Shape factory.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeFactory"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.CreateCircle(System.Double,System.Double,System.Windows.Point)">
            <summary>
            
            </summary>
            <param name="radiusX"></param>
            <param name="radiusY"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.CreateRectangle(System.Windows.Rect)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.ArrowShapeType)">
            <summary>
            Gets a geometry of a specified arrow shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.CommonShapeType)">
            <summary>
            Gets a geometry of a specified common shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.FlowChartShapeType)">
            <summary>
            Gets a geometry of a specified flow chart shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.TransformExtensions">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Translate(System.Windows.Media.TransformGroup,System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Translates the specified group.
            </summary>
            <param name="group">The group.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="isDelta">If set to <c>true</c> [is delta].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.EnsureTransforms(System.Windows.Media.TransformGroup)">
            <summary>
            Ensures the transforms.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetScaleTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the scale transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetRotateTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the rotate transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetTranslateTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the translate transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Tween">
            <summary>
            Custom tweening implementation. http://en.wikipedia.org/wiki/Inbetweening.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.Tween"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Double}},System.Double,System.Func{System.Double,System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Tween"/> class.
            </summary>
            <param name="targetObject">The target object.</param>
            <param name="definitions">The definitions.</param>
            <param name="duration">The duration.</param>
            <param name="easingFunction">The easing function.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.To(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Double}},System.Double,System.Func{System.Double,System.Double,System.Double,System.Double,System.Double},System.EventHandler)">
            <summary>
            Tweens to the specified situation.
            </summary>
            <param name="target">The motion object.</param>
            <param name="definitions">The key value.</param>
            <param name="duration">The duration in seconds.</param>
            <param name="easingFunction">The ease function.</param>
            <param name="completed">The completed.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.Linear(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a simple linear tweening, with no easing.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in/out: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.RemoveProperty(System.String)">
            <summary>
            Removes the tweened property and raises the <see cref="E:Telerik.Windows.Controls.Diagrams.Tween.OnComplete"/> event is the last one has been animated.
            </summary>
            <param name="propertyName">Label of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.RaiseOnComplete">
            <summary>
            Raises the on complete.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.OnTick(System.Object,System.EventArgs)">
            <summary>
            Makes the things go tween.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Tween.OnComplete">
            <summary>
            Occurs when the tweening motion is complete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Fps">
            <summary>
            Gets or sets the frames per second.
            </summary>
            <value>The FPS.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.NumberOfTweenedProperties">
            <summary>
            Gets or sets the number of tweened properties.
            </summary>
            <value>
            The number of tweened properties.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Duration">
            <summary>
            The duration in seconds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.IsRunning">
            <summary>
            Gets a value indicating whether this instance is running.
            </summary>
            <value>
            	<c>True</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.TargetObject">
            <summary>
            Gets or sets the motion object being tweened.
            </summary>
            <value>The motion object.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
            <value>The easing function.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Cache">
            <summary>
            Gets or sets the Cache of the tweened objects.
            </summary>
            <value>The Cache.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Timer">
            <summary>
            Gets or sets the Timer which runs the tween motion.
            </summary>
            <value>The Timer.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.TweenProxy">
            <summary>
            Wraps the tween target with the tween info as well as the reflected property for easy access during the tweening.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TweenProxy.#ctor(System.Object,System.String,System.Double,Telerik.Windows.Controls.Diagrams.Tween)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.TweenProxy"/> class.
            </summary>
            <param name="target">The tween object.</param>
            <param name="propertyName">The name of the animated property.</param>
            <param name="endValue">The end value.</param>
            <param name="tween">The tween.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.BeginColor">
            <summary>
            Gets the color of the begin.
            </summary>
            <value>
            The color of the begin.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.BeginValue">
            <summary>
            Gets the begin value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.PropertyDifference">
            <summary>
            Gets the property difference.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.ColorDelta">
            <summary>
            Gets the color delta.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Property">
            <summary>
            Gets the property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.EndValue">
            <summary>
            Gets the end value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Tween">
            <summary>
            Gets the tween.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Target">
            <summary>
            Gets the target.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.VisualStates">
            <summary>
            Collects constants related to the visual state of diagram entities.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Normal">
            <summary>
            The Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOver">
            <summary>
            The MouseOver state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOverVisibleConnectors">
            <summary>
            The MouseOverVisibleConnectors state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOverCollapsedConnectors">
            <summary>
            The Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Selected">
            <summary>
            The Selected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.SelectedInGroup">
            <summary>
            The SelectedInGroup state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Unselected">
            <summary>
            The Unselected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalMode">
            <summary>
            The NormalMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalEditMode">
            <summary>
            The NormalEditMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.TextBoxEditMode">
            <summary>
            The TextBoxEditMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ReadOnly">
            <summary>
            The ReadOnly state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Enabled">
            <summary>
            The Enabled state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Disabled">
            <summary>
            The Disabled state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Focused">
            <summary>
            The Focused state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Unfocused">
            <summary>
            The Unfocused state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Active">
            <summary>
            The Active state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Inactive">
            <summary>
            The Inactive state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ActiveConnectionAroundShape">
            <summary>
            The ActiveConnectionAroundShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalActiveConnectionState">
            <summary>
            The NormalActiveConnectionState state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ActiveConnectionInsideShape">
            <summary>
            The ActiveConnectionInsideShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.InactiveConnectionInsideShape">
            <summary>
            The InactiveConnectionInsideShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectedSource">
            <summary>
            The Connected to Source state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectedTarget">
            <summary>
            The Connected to Target state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Disconnected">
            <summary>
            The Disconnected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Manipulating">
            <summary>
            The Manipulating state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NotManipulating">
            <summary>
            The NotManipulating state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectorsAdornerCollapsed">
            <summary>
            The ConnectorsAdornerCollapsed state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectorsAdornerVisible">
            <summary>
            The ConnectorsAdornerVisible state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramConnection">
            <summary>
            The RadDiagramConnection is a special ContentControl that serves as a connection between zero, one or two shapes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramItem">
            <summary>
            Abstract base implementation of the <see cref="T:Telerik.Windows.Diagrams.Core.IDiagramItem"/> interface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedInGroupProperty">
            <summary>
            Identifies the IsSelectedInGroup dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsInEditModeProperty">
            <summary>
            Identifies the IsInEditMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewBeginEditEvent">
            <summary>
            Identifies the PreviewBeginEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.BeginEditEvent">
            <summary>
            Identifies the BeginEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewEndEditEvent">
            <summary>
            Identifies the PreviewEndEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EndEditEvent">
            <summary>
            Identifies the EndEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedInGroupPropertyKey">
            <summary>
            Identifies the IsSelectedInGroup dependency property key.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Telerik#Windows#Diagrams#Core#IDiagramItem#SetSelectedInGroup(System.Boolean)">
            <summary>
            Sets the selected in group.
            </summary>
            <param name="isSelectedInGroup">If set to <c>true</c> [is selected in group].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the serialization info in this diagram entity.
            </summary>
            <param name="info">A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Telerik#Windows#Diagrams#Core#IDiagramItem#Initialize(Telerik.Windows.Diagrams.Core.IServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.SetSelectionInGroup(System.Boolean)">
            <summary>
            Sets the selection in group.
            </summary>
            <param name="isSelectedInGroup">The is selected in group.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Initialize(Telerik.Windows.Diagrams.Core.IServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator and parent graph.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram control.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnPropertyChanged(System.String)">
            <summary>
            Called when property value changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">If set to <c>true</c> [old is in edit mode].</param>
            <param name="isInEditMode">If set to <c>true</c> [is in edit mode].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsSelectedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the IsSelected property has changed.
            </summary>
            <param name="oldValue">The old value of the IsSelected property.</param>
            <param name="newValue">The new value of the IsSelected property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnZIndexChanged(System.Int32)">
            <summary>
            Called when the ZIndex changes.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnSizeChanged(System.Windows.Size,System.Windows.Size)">
            <summary>
            Called when the size changes.
            </summary>
            <param name="newSize">The new size.</param>
            <param name="oldSize">The old size.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnStrokeThicknessChanged">
            <summary>
            Invoked when the StrokeThickness property changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewBeginEdit">
            <summary>
            Occurs before the editing starts.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.BeginEdit">
            <summary>
            Occurs when the editing begins.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewEndEdit">
            <summary>
            Occurs before the editing ends.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EndEdit">
            <summary>
            Occurs when the editing ends.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelected">
            <summary>
            Gets or sets whether the diagram entity is selected.
            </summary>
            <value>
              <c>True</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedInGroup">
            <summary>
            Gets or sets a value indicating whether this instance is selected in group.
            </summary>
            <value>
            	<c>True</c> if this instance is selected in group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsMouseOver">
            <summary>
            Gets a value indicating whether this instance is mouse over.
            </summary>
            <value>
            	<c>True</c> if this instance is mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsInEditMode">
            <summary>
            Gets or sets a value indicating whether this instance is in edit mode.
            </summary>
            <value>
            	<c>True</c> if this instance is in edit mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ZIndex">
            <summary>
            Gets or sets the ZIndex of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Position">
            <summary>
            Gets or sets the position of the top left corner of the bounding rectangle of the item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Id">
            <summary>
            Gets the unique identifier of this entity.
            </summary>
            <value>
            An identifier for this entity.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EditTemplate">
            <summary>
            Gets or sets the edit template.
            </summary>
            <value>
            The edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Stroke">
            <summary>
            Gets or sets the stroke of this item.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of this item.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of this item.
            </summary>
            <value>
            The stroke dash array.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Diagram">
            <summary>
            Gets the owning diagram of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ActualSize">
            <summary>
            The actual size of the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.ConnectionTypeProperty">
            <summary>
            Identifies the ConnectionType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPositionProperty">
            <summary>
            Identifies the SourceConnectorPosition dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPositionProperty">
            <summary>
            Identifies the TargetConnectorPosition dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SelectedInGroupStrokeThicknessProperty">
            <summary>
            Identifies the SelectedInGroupStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceCapTypeProperty">
            <summary>
            Identifies the SourceCapType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetCapTypeProperty">
            <summary>
            Identifies the TargetCapType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceCapSizeProperty">
            <summary>
            Identifies the SourceCapSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetCapSizeProperty">
            <summary>
            Identifies the TargetCapSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetProperty">
            <summary>
            Identifies the TargetProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Telerik#Windows#Diagrams#Core#IConnection#UpdateDeferredGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point[])">
            <summary>
            Updates the deferred geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="middlePoints">The middle points.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Attach(Telerik.Windows.Diagrams.Core.IShape,System.Nullable{Telerik.Windows.Diagrams.Core.ConnectorPosition},Telerik.Windows.Diagrams.Core.IShape,System.Nullable{Telerik.Windows.Diagrams.Core.ConnectorPosition})">
            <summary>
            Attaches the connection to specific source and target.
            </summary>
            <param name="source">The source.</param>
            <param name="sourceConnectorPosition">The source connector position.</param>
            <param name="target">The target.</param>
            <param name="targetConnectorPosition">The target connector position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> from a <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/>.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Serialize">
            <summary>
            Serializes the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> into a <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Telerik#Windows#Controls#IThemable#ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.UpdateDeferredGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point[])">
            <summary>
            Updates the deferred geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="middlePoints">The middle points.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Update(System.Boolean)">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">If set to <c>true</c> [old is in edit mode].</param>
            <param name="isInEditMode">If set to <c>true</c> [is in edit mode].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Initialize(Telerik.Windows.Diagrams.Core.IServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnSourceChanged">
            <summary>
            Called when the source of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnTargetChanged">
            <summary>
            Called when the target of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.PositionEditElementOverride">
            <summary>
            When overriden, positions the editting element fo the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnStrokeThicknessChanged">
            <summary>
            Invoked when the stroke thickness property changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.SetSelectionInGroup(System.Boolean)">
            <summary>
            Sets the selection in group.
            </summary>
            <param name="isSelectedInGroup">The is selected in group.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.UpdateGeometryOverride">
            <summary>
            When overriden, provides the geometry for the connection.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagramConnection.ManipulationPointActivated">
            <summary>
            Occurs when a manipulation point of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Bounds">
            <summary>
            Gets or sets the bounds of the item.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionType">
            <summary>
            Gets or sets the type of the connection.
            </summary>
            <value>
            The type of the connection.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.StartPoint">
            <summary>
            Gets or sets the source point.
            </summary>
            <value>
            The source point.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.EndPoint">
            <summary>
            Gets or sets the target point.
            </summary>
            <value>
            The target point.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPosition">
            <summary>
            Gets or sets the source connector position.
            </summary>
            <value>
            The source connector position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPositionResolved">
            <summary>
            Gets the resolved source connector position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPosition">
            <summary>
            Gets or sets the target connector position.
            </summary>
            <value>
            The target connector position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPositionResolved">
            <summary>
            Gets the resolved target connector position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceCapType">
            <summary>
            Gets or sets the type of the source cap.
            </summary>
            <value>
            The type of the source cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetCapType">
            <summary>
            Gets or sets the type of the target cap.
            </summary>
            <value>
            The type of the target cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceCapSize">
            <summary>
            Gets or sets the size of the source cap.
            </summary>
            <value>
            The size of the source cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetCapSize">
            <summary>
            Gets or sets the size of the target cap.
            </summary>
            <value>
            The size of the target cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionPoints">
            <summary>
            Gets the connection points of the connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ManipulationPoints">
            <summary>
            Gets the manipulation points.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SelectedInGroupStrokeThickness">
            <summary>
            Gets the selected in group stroke thickness.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.EdittingPoint">
            <summary>
            Gets or sets the editting point of the connection. This points indicates the position of the editting element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramShape">
            <summary>
             A shape with geometric content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase">
            <summary>
            Abstract base implementation of the <see cref="T:Telerik.Windows.Diagrams.Core.IShape"/> interface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.IsActiveConnectionInsideProperty">
            <summary>
            Identifies the IsActiveConnectionInside dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.RotationAngleProperty">
            <summary>
             Identifies the RotationAngle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorStyleProperty">
            <summary>
             Identifies the ConnectorStyle dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Serialize">
            <summary>
            Serializes this diagram entity.
            </summary>
            <returns>
            A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo">SerializationInfo</see> instance.
            </returns>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Xml">Xml</seealso>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the serialization info in this diagram entity.
            </summary>
            <param name="info">A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Telerik#Windows#Diagrams#Core#IShape#ChangeConnectorsAdornerVisibility(System.Boolean)">
            <summary>
            Changes the visibility of the connectors adorner.
            </summary>
            <param name="isConnectorsAdornerVisible">Specifies if the connectors adorner should be visible.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Telerik#Windows#Diagrams#Core#IShape#ChangeActiveConnectionInside(System.Boolean)">
            <summary>
            Changes the active connection inside.
            </summary>
            <param name="isActiveConnectionInside">If set to <c>true</c> [is active connection inside].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">If set to <c>true</c> [old is in edit mode].</param>
            <param name="isInEditMode">If set to <c>true</c> [is in edit mode].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnRotationAngleChanged(System.Double,System.Double)">
            <summary>
            Called when the rotation angle has changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ChangeConnectorsAdornerVisibility(System.Boolean)">
            <summary>
            Changes the visibility of the connectors adorner.
            </summary>
            <param name="isConnectorsAdornerVisible">Specifies if the connectors adorner should be visible.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ChangeActiveConnectionInside(System.Boolean)">
            <summary>
            Changes the active connection inside.
            </summary>
            <param name="isActiveConnectionInside">If set to <c>true</c> [is active connection inside].</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorActivated">
            <summary>
            Occurs when a connector point is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.RotationAngle">
            <summary>
            Gets or sets the rotation angle.
            </summary>
            <value>
            The rotation angle.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ActualBounds">
            <summary>
            Gets the actual bounds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorStyle">
            <summary>
            Gets or sets the connector style.
            </summary>
            <value>
            The connector style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.IncomingLinks">
            <summary>
            Gets the incoming links.
            </summary>
            <value>
            The incoming links.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OutgoingLinks">
            <summary>
            Gets the outgoing links.
            </summary>
            <value>
            The outgoing links.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorPoints">
            <summary>
            Gets the connector points.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Xml">
            <summary>
            Gets the XML representation of this shape.
            </summary>
            <remarks>
            <para>This is based on the <see cref="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Serialize">Serialize </see>method; if you
            wish to alter the returned XML you need to override that method.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Transform">
            <summary>
            Gets the transform.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.IsConnectorsAdornerVisible">
            <summary>
            Gets or sets a value indicating whether this instance is connectors adorner visible.
            </summary>
            <value>
            	<c>true</c> if this instance is connectors adorner visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramShape.GeometryProperty">
            <summary>
            The <see cref="P:Telerik.Windows.Controls.RadDiagramShape.Geometry"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.Serialize">
            <summary>
            Serializes this shape.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the specified info.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramShape.Geometry">
            <summary>
            Gets or sets the geometry this shape contains.
            </summary>
            <value>
            The geometry or figure.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.StrokeDashArrayConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.StrokeDashArrayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.StrokeDashArrayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
    </members>
</doc>
